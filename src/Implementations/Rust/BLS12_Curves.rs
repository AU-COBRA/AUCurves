#[allow(non_camel_case_types)]

pub type felem_as_words = [usize; 6];
// pub type B8 = [u8; 4];
// pub type B16 = [u16; 2];

// pub  fn _br2_load(arg : *const usize) -> usize {
//     *arg
// }

// pub  fn _br2_store(addr : *mut usize, val : usize) -> () {
//     *addr = val;
// }

// pub fn bls12_add2(out0 : &mut [usize], in0 : &mut [usize]) -> () {
//   let x0 : usize;
//   let x1 : usize;
//   let x2 : usize;
//   let x3 : usize;
//   let x4 : usize;
//   let x5 : usize;
//   x0 = in0[0usize];
//   x1 = in0[1];
//   x2 = in0[2];
//   x3 = in0[3];
//   x4 = in0[4];
//   x5 = in0[5];
//   /*skip*/
//   out0[0] = x0;
//   out0[1] = x1;
//   out0[2] = x2;
//   out0[3] = x3;
//   out0[4] = x4;
//   out0[5] = x5;
//   /*skip*/
//   return;
// }

pub fn bls12_sub(out0 : &mut [usize], in0 : &mut [usize], in1 : &mut [usize]) -> () {
  let x6 : usize;
  let x7 : usize;
  let x0 : usize;
  let x8 : usize;
  let x1 : usize;
  let x13 : usize;
  let x9 : usize;
  let x2 : usize;
  let x15 : usize;
  let x10 : usize;
  let x3 : usize;
  let x17 : usize;
  let x11 : usize;
  let x4 : usize;
  let x19 : usize;
  let x5 : usize;
  let x21 : usize;
  let x12 : usize;
  let x25 : usize;
  let x14 : usize;
  let x27 : usize;
  let x16 : usize;
  let x29 : usize;
  let x18 : usize;
  let x31 : usize;
  let x20 : usize;
  let x22 : usize;
  let x23 : usize;
  let x24 : usize;
  let x26 : usize;
  let x28 : usize;
  let x30 : usize;
  let x32 : usize;
  let x33 : usize;
  let x34 : usize;
  let x35 : usize;
  let x36 : usize;
  let x37 : usize;
  let x38 : usize;
  let x39 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  x6 = in1[0usize];
  x7 = in1[1usize];
  x8 = in1[2usize];
  x9 = in1[3usize];
  x10 = in1[4usize];
  x11 = in1[5usize];
  /*skip*/
  /*skip*/
  x12 = (x0).wrapping_sub(x6);
  x13 = (x1).wrapping_sub(x7);
  x14 = (x13).wrapping_sub(((x0)<(x12)) as usize);
  x15 = (x2).wrapping_sub(x8);
  x16 = (x15).wrapping_sub((((x1)<(x13)) as usize).wrapping_add(((x13)<(x14)) as usize));
  x17 = (x3).wrapping_sub(x9);
  x18 = (x17).wrapping_sub((((x2)<(x15)) as usize).wrapping_add(((x15)<(x16)) as usize));
  x19 = (x4).wrapping_sub(x10);
  x20 = (x19).wrapping_sub((((x3)<(x17)) as usize).wrapping_add(((x17)<(x18)) as usize));
  x21 = (x5).wrapping_sub(x11);
  x22 = (x21).wrapping_sub((((x4)<(x19)) as usize).wrapping_add(((x19)<(x20)) as usize));
  x23 = (usize::MAX).wrapping_add((((((x5)<(x21)) as usize).wrapping_add(((x21)<(x22)) as usize))==(0usize)) as usize);
  x24 = (x12).wrapping_add((x23)&(13402431016077863595usize));
  x25 = (((x24)<(x12)) as usize).wrapping_add(x14);
  x26 = (x25).wrapping_add((x23)&(2210141511517208575usize));
  x27 = ((((x25)<(x14)) as usize).wrapping_add(((x26)<((x23)&(2210141511517208575usize))) as usize)).wrapping_add(x16);
  x28 = (x27).wrapping_add((x23)&(7435674573564081700usize));
  x29 = ((((x27)<(x16)) as usize).wrapping_add(((x28)<((x23)&(7435674573564081700usize))) as usize)).wrapping_add(x18);
  x30 = (x29).wrapping_add((x23)&(7239337960414712511usize));
  x31 = ((((x29)<(x18)) as usize).wrapping_add(((x30)<((x23)&(7239337960414712511usize))) as usize)).wrapping_add(x20);
  x32 = (x31).wrapping_add((x23)&(5412103778470702295usize));
  x33 = (((((x31)<(x20)) as usize).wrapping_add(((x32)<((x23)&(5412103778470702295usize))) as usize)).wrapping_add(x22)).wrapping_add((x23)&(1873798617647539866usize));
  x34 = x24;
  x35 = x26;
  x36 = x28;
  x37 = x30;
  x38 = x32;
  x39 = x33;
  /*skip*/
  out0[0usize] = x34;
  out0[1usize] = x35;
  out0[2usize] = x36;
  out0[3usize] = x37;
  out0[4usize] = x38;
  out0[5usize] = x39;
  /*skip*/
  return;
}

pub fn bls12_mul(out0 : &mut [usize], in0 : &mut [usize], in1 : &mut [usize]) -> () {
  let x1 : usize;
  let x2 : usize;
  let x3 : usize;
  let x4 : usize;
  let x5 : usize;
  let x0 : usize;
  let x17 : usize;
  let x26 : usize;
  let x29 : usize;
  let x31 : usize;
  let x27 : usize;
  let x32 : usize;
  let x24 : usize;
  let x33 : usize;
  let x35 : usize;
  let x36 : usize;
  let x25 : usize;
  let x37 : usize;
  let x22 : usize;
  let x38 : usize;
  let x40 : usize;
  let x41 : usize;
  let x23 : usize;
  let x42 : usize;
  let x20 : usize;
  let x43 : usize;
  let x45 : usize;
  let x46 : usize;
  let x21 : usize;
  let x47 : usize;
  let x18 : usize;
  let x48 : usize;
  let x50 : usize;
  let x51 : usize;
  let x19 : usize;
  let x53 : usize;
  let x62 : usize;
  let x65 : usize;
  let x67 : usize;
  let x63 : usize;
  let x68 : usize;
  let x60 : usize;
  let x69 : usize;
  let x71 : usize;
  let x72 : usize;
  let x61 : usize;
  let x73 : usize;
  let x58 : usize;
  let x74 : usize;
  let x76 : usize;
  let x77 : usize;
  let x59 : usize;
  let x78 : usize;
  let x56 : usize;
  let x79 : usize;
  let x81 : usize;
  let x82 : usize;
  let x57 : usize;
  let x83 : usize;
  let x54 : usize;
  let x84 : usize;
  let x86 : usize;
  let x87 : usize;
  let x55 : usize;
  let x64 : usize;
  let x89 : usize;
  let x28 : usize;
  let x90 : usize;
  let x30 : usize;
  let x91 : usize;
  let x66 : usize;
  let x92 : usize;
  let x94 : usize;
  let x95 : usize;
  let x34 : usize;
  let x96 : usize;
  let x70 : usize;
  let x97 : usize;
  let x99 : usize;
  let x100 : usize;
  let x39 : usize;
  let x101 : usize;
  let x75 : usize;
  let x102 : usize;
  let x104 : usize;
  let x105 : usize;
  let x44 : usize;
  let x106 : usize;
  let x80 : usize;
  let x107 : usize;
  let x109 : usize;
  let x110 : usize;
  let x49 : usize;
  let x111 : usize;
  let x85 : usize;
  let x112 : usize;
  let x114 : usize;
  let x115 : usize;
  let x52 : usize;
  let x116 : usize;
  let x88 : usize;
  let x117 : usize;
  let x119 : usize;
  let x12 : usize;
  let x129 : usize;
  let x132 : usize;
  let x134 : usize;
  let x130 : usize;
  let x135 : usize;
  let x127 : usize;
  let x136 : usize;
  let x138 : usize;
  let x139 : usize;
  let x128 : usize;
  let x140 : usize;
  let x125 : usize;
  let x141 : usize;
  let x143 : usize;
  let x144 : usize;
  let x126 : usize;
  let x145 : usize;
  let x123 : usize;
  let x146 : usize;
  let x148 : usize;
  let x149 : usize;
  let x124 : usize;
  let x150 : usize;
  let x121 : usize;
  let x151 : usize;
  let x153 : usize;
  let x154 : usize;
  let x122 : usize;
  let x131 : usize;
  let x93 : usize;
  let x157 : usize;
  let x98 : usize;
  let x158 : usize;
  let x133 : usize;
  let x159 : usize;
  let x161 : usize;
  let x162 : usize;
  let x103 : usize;
  let x163 : usize;
  let x137 : usize;
  let x164 : usize;
  let x166 : usize;
  let x167 : usize;
  let x108 : usize;
  let x168 : usize;
  let x142 : usize;
  let x169 : usize;
  let x171 : usize;
  let x172 : usize;
  let x113 : usize;
  let x173 : usize;
  let x147 : usize;
  let x174 : usize;
  let x176 : usize;
  let x177 : usize;
  let x118 : usize;
  let x178 : usize;
  let x152 : usize;
  let x179 : usize;
  let x181 : usize;
  let x182 : usize;
  let x120 : usize;
  let x183 : usize;
  let x155 : usize;
  let x184 : usize;
  let x186 : usize;
  let x188 : usize;
  let x197 : usize;
  let x200 : usize;
  let x202 : usize;
  let x198 : usize;
  let x203 : usize;
  let x195 : usize;
  let x204 : usize;
  let x206 : usize;
  let x207 : usize;
  let x196 : usize;
  let x208 : usize;
  let x193 : usize;
  let x209 : usize;
  let x211 : usize;
  let x212 : usize;
  let x194 : usize;
  let x213 : usize;
  let x191 : usize;
  let x214 : usize;
  let x216 : usize;
  let x217 : usize;
  let x192 : usize;
  let x218 : usize;
  let x189 : usize;
  let x219 : usize;
  let x221 : usize;
  let x222 : usize;
  let x190 : usize;
  let x199 : usize;
  let x224 : usize;
  let x156 : usize;
  let x225 : usize;
  let x160 : usize;
  let x226 : usize;
  let x201 : usize;
  let x227 : usize;
  let x229 : usize;
  let x230 : usize;
  let x165 : usize;
  let x231 : usize;
  let x205 : usize;
  let x232 : usize;
  let x234 : usize;
  let x235 : usize;
  let x170 : usize;
  let x236 : usize;
  let x210 : usize;
  let x237 : usize;
  let x239 : usize;
  let x240 : usize;
  let x175 : usize;
  let x241 : usize;
  let x215 : usize;
  let x242 : usize;
  let x244 : usize;
  let x245 : usize;
  let x180 : usize;
  let x246 : usize;
  let x220 : usize;
  let x247 : usize;
  let x249 : usize;
  let x250 : usize;
  let x185 : usize;
  let x251 : usize;
  let x223 : usize;
  let x252 : usize;
  let x254 : usize;
  let x255 : usize;
  let x187 : usize;
  let x13 : usize;
  let x265 : usize;
  let x268 : usize;
  let x270 : usize;
  let x266 : usize;
  let x271 : usize;
  let x263 : usize;
  let x272 : usize;
  let x274 : usize;
  let x275 : usize;
  let x264 : usize;
  let x276 : usize;
  let x261 : usize;
  let x277 : usize;
  let x279 : usize;
  let x280 : usize;
  let x262 : usize;
  let x281 : usize;
  let x259 : usize;
  let x282 : usize;
  let x284 : usize;
  let x285 : usize;
  let x260 : usize;
  let x286 : usize;
  let x257 : usize;
  let x287 : usize;
  let x289 : usize;
  let x290 : usize;
  let x258 : usize;
  let x267 : usize;
  let x228 : usize;
  let x293 : usize;
  let x233 : usize;
  let x294 : usize;
  let x269 : usize;
  let x295 : usize;
  let x297 : usize;
  let x298 : usize;
  let x238 : usize;
  let x299 : usize;
  let x273 : usize;
  let x300 : usize;
  let x302 : usize;
  let x303 : usize;
  let x243 : usize;
  let x304 : usize;
  let x278 : usize;
  let x305 : usize;
  let x307 : usize;
  let x308 : usize;
  let x248 : usize;
  let x309 : usize;
  let x283 : usize;
  let x310 : usize;
  let x312 : usize;
  let x313 : usize;
  let x253 : usize;
  let x314 : usize;
  let x288 : usize;
  let x315 : usize;
  let x317 : usize;
  let x318 : usize;
  let x256 : usize;
  let x319 : usize;
  let x291 : usize;
  let x320 : usize;
  let x322 : usize;
  let x324 : usize;
  let x333 : usize;
  let x336 : usize;
  let x338 : usize;
  let x334 : usize;
  let x339 : usize;
  let x331 : usize;
  let x340 : usize;
  let x342 : usize;
  let x343 : usize;
  let x332 : usize;
  let x344 : usize;
  let x329 : usize;
  let x345 : usize;
  let x347 : usize;
  let x348 : usize;
  let x330 : usize;
  let x349 : usize;
  let x327 : usize;
  let x350 : usize;
  let x352 : usize;
  let x353 : usize;
  let x328 : usize;
  let x354 : usize;
  let x325 : usize;
  let x355 : usize;
  let x357 : usize;
  let x358 : usize;
  let x326 : usize;
  let x335 : usize;
  let x360 : usize;
  let x292 : usize;
  let x361 : usize;
  let x296 : usize;
  let x362 : usize;
  let x337 : usize;
  let x363 : usize;
  let x365 : usize;
  let x366 : usize;
  let x301 : usize;
  let x367 : usize;
  let x341 : usize;
  let x368 : usize;
  let x370 : usize;
  let x371 : usize;
  let x306 : usize;
  let x372 : usize;
  let x346 : usize;
  let x373 : usize;
  let x375 : usize;
  let x376 : usize;
  let x311 : usize;
  let x377 : usize;
  let x351 : usize;
  let x378 : usize;
  let x380 : usize;
  let x381 : usize;
  let x316 : usize;
  let x382 : usize;
  let x356 : usize;
  let x383 : usize;
  let x385 : usize;
  let x386 : usize;
  let x321 : usize;
  let x387 : usize;
  let x359 : usize;
  let x388 : usize;
  let x390 : usize;
  let x391 : usize;
  let x323 : usize;
  let x14 : usize;
  let x401 : usize;
  let x404 : usize;
  let x406 : usize;
  let x402 : usize;
  let x407 : usize;
  let x399 : usize;
  let x408 : usize;
  let x410 : usize;
  let x411 : usize;
  let x400 : usize;
  let x412 : usize;
  let x397 : usize;
  let x413 : usize;
  let x415 : usize;
  let x416 : usize;
  let x398 : usize;
  let x417 : usize;
  let x395 : usize;
  let x418 : usize;
  let x420 : usize;
  let x421 : usize;
  let x396 : usize;
  let x422 : usize;
  let x393 : usize;
  let x423 : usize;
  let x425 : usize;
  let x426 : usize;
  let x394 : usize;
  let x403 : usize;
  let x364 : usize;
  let x429 : usize;
  let x369 : usize;
  let x430 : usize;
  let x405 : usize;
  let x431 : usize;
  let x433 : usize;
  let x434 : usize;
  let x374 : usize;
  let x435 : usize;
  let x409 : usize;
  let x436 : usize;
  let x438 : usize;
  let x439 : usize;
  let x379 : usize;
  let x440 : usize;
  let x414 : usize;
  let x441 : usize;
  let x443 : usize;
  let x444 : usize;
  let x384 : usize;
  let x445 : usize;
  let x419 : usize;
  let x446 : usize;
  let x448 : usize;
  let x449 : usize;
  let x389 : usize;
  let x450 : usize;
  let x424 : usize;
  let x451 : usize;
  let x453 : usize;
  let x454 : usize;
  let x392 : usize;
  let x455 : usize;
  let x427 : usize;
  let x456 : usize;
  let x458 : usize;
  let x460 : usize;
  let x469 : usize;
  let x472 : usize;
  let x474 : usize;
  let x470 : usize;
  let x475 : usize;
  let x467 : usize;
  let x476 : usize;
  let x478 : usize;
  let x479 : usize;
  let x468 : usize;
  let x480 : usize;
  let x465 : usize;
  let x481 : usize;
  let x483 : usize;
  let x484 : usize;
  let x466 : usize;
  let x485 : usize;
  let x463 : usize;
  let x486 : usize;
  let x488 : usize;
  let x489 : usize;
  let x464 : usize;
  let x490 : usize;
  let x461 : usize;
  let x491 : usize;
  let x493 : usize;
  let x494 : usize;
  let x462 : usize;
  let x471 : usize;
  let x496 : usize;
  let x428 : usize;
  let x497 : usize;
  let x432 : usize;
  let x498 : usize;
  let x473 : usize;
  let x499 : usize;
  let x501 : usize;
  let x502 : usize;
  let x437 : usize;
  let x503 : usize;
  let x477 : usize;
  let x504 : usize;
  let x506 : usize;
  let x507 : usize;
  let x442 : usize;
  let x508 : usize;
  let x482 : usize;
  let x509 : usize;
  let x511 : usize;
  let x512 : usize;
  let x447 : usize;
  let x513 : usize;
  let x487 : usize;
  let x514 : usize;
  let x516 : usize;
  let x517 : usize;
  let x452 : usize;
  let x518 : usize;
  let x492 : usize;
  let x519 : usize;
  let x521 : usize;
  let x522 : usize;
  let x457 : usize;
  let x523 : usize;
  let x495 : usize;
  let x524 : usize;
  let x526 : usize;
  let x527 : usize;
  let x459 : usize;
  let x15 : usize;
  let x537 : usize;
  let x540 : usize;
  let x542 : usize;
  let x538 : usize;
  let x543 : usize;
  let x535 : usize;
  let x544 : usize;
  let x546 : usize;
  let x547 : usize;
  let x536 : usize;
  let x548 : usize;
  let x533 : usize;
  let x549 : usize;
  let x551 : usize;
  let x552 : usize;
  let x534 : usize;
  let x553 : usize;
  let x531 : usize;
  let x554 : usize;
  let x556 : usize;
  let x557 : usize;
  let x532 : usize;
  let x558 : usize;
  let x529 : usize;
  let x559 : usize;
  let x561 : usize;
  let x562 : usize;
  let x530 : usize;
  let x539 : usize;
  let x500 : usize;
  let x565 : usize;
  let x505 : usize;
  let x566 : usize;
  let x541 : usize;
  let x567 : usize;
  let x569 : usize;
  let x570 : usize;
  let x510 : usize;
  let x571 : usize;
  let x545 : usize;
  let x572 : usize;
  let x574 : usize;
  let x575 : usize;
  let x515 : usize;
  let x576 : usize;
  let x550 : usize;
  let x577 : usize;
  let x579 : usize;
  let x580 : usize;
  let x520 : usize;
  let x581 : usize;
  let x555 : usize;
  let x582 : usize;
  let x584 : usize;
  let x585 : usize;
  let x525 : usize;
  let x586 : usize;
  let x560 : usize;
  let x587 : usize;
  let x589 : usize;
  let x590 : usize;
  let x528 : usize;
  let x591 : usize;
  let x563 : usize;
  let x592 : usize;
  let x594 : usize;
  let x596 : usize;
  let x605 : usize;
  let x608 : usize;
  let x610 : usize;
  let x606 : usize;
  let x611 : usize;
  let x603 : usize;
  let x612 : usize;
  let x614 : usize;
  let x615 : usize;
  let x604 : usize;
  let x616 : usize;
  let x601 : usize;
  let x617 : usize;
  let x619 : usize;
  let x620 : usize;
  let x602 : usize;
  let x621 : usize;
  let x599 : usize;
  let x622 : usize;
  let x624 : usize;
  let x625 : usize;
  let x600 : usize;
  let x626 : usize;
  let x597 : usize;
  let x627 : usize;
  let x629 : usize;
  let x630 : usize;
  let x598 : usize;
  let x607 : usize;
  let x632 : usize;
  let x564 : usize;
  let x633 : usize;
  let x568 : usize;
  let x634 : usize;
  let x609 : usize;
  let x635 : usize;
  let x637 : usize;
  let x638 : usize;
  let x573 : usize;
  let x639 : usize;
  let x613 : usize;
  let x640 : usize;
  let x642 : usize;
  let x643 : usize;
  let x578 : usize;
  let x644 : usize;
  let x618 : usize;
  let x645 : usize;
  let x647 : usize;
  let x648 : usize;
  let x583 : usize;
  let x649 : usize;
  let x623 : usize;
  let x650 : usize;
  let x652 : usize;
  let x653 : usize;
  let x588 : usize;
  let x654 : usize;
  let x628 : usize;
  let x655 : usize;
  let x657 : usize;
  let x658 : usize;
  let x593 : usize;
  let x659 : usize;
  let x631 : usize;
  let x660 : usize;
  let x662 : usize;
  let x663 : usize;
  let x595 : usize;
  let x11 : usize;
  let x10 : usize;
  let x9 : usize;
  let x8 : usize;
  let x7 : usize;
  let x16 : usize;
  let x6 : usize;
  let x673 : usize;
  let x676 : usize;
  let x678 : usize;
  let x674 : usize;
  let x679 : usize;
  let x671 : usize;
  let x680 : usize;
  let x682 : usize;
  let x683 : usize;
  let x672 : usize;
  let x684 : usize;
  let x669 : usize;
  let x685 : usize;
  let x687 : usize;
  let x688 : usize;
  let x670 : usize;
  let x689 : usize;
  let x667 : usize;
  let x690 : usize;
  let x692 : usize;
  let x693 : usize;
  let x668 : usize;
  let x694 : usize;
  let x665 : usize;
  let x695 : usize;
  let x697 : usize;
  let x698 : usize;
  let x666 : usize;
  let x675 : usize;
  let x636 : usize;
  let x701 : usize;
  let x641 : usize;
  let x702 : usize;
  let x677 : usize;
  let x703 : usize;
  let x705 : usize;
  let x706 : usize;
  let x646 : usize;
  let x707 : usize;
  let x681 : usize;
  let x708 : usize;
  let x710 : usize;
  let x711 : usize;
  let x651 : usize;
  let x712 : usize;
  let x686 : usize;
  let x713 : usize;
  let x715 : usize;
  let x716 : usize;
  let x656 : usize;
  let x717 : usize;
  let x691 : usize;
  let x718 : usize;
  let x720 : usize;
  let x721 : usize;
  let x661 : usize;
  let x722 : usize;
  let x696 : usize;
  let x723 : usize;
  let x725 : usize;
  let x726 : usize;
  let x664 : usize;
  let x727 : usize;
  let x699 : usize;
  let x728 : usize;
  let x730 : usize;
  let x732 : usize;
  let x741 : usize;
  let x744 : usize;
  let x746 : usize;
  let x742 : usize;
  let x747 : usize;
  let x739 : usize;
  let x748 : usize;
  let x750 : usize;
  let x751 : usize;
  let x740 : usize;
  let x752 : usize;
  let x737 : usize;
  let x753 : usize;
  let x755 : usize;
  let x756 : usize;
  let x738 : usize;
  let x757 : usize;
  let x735 : usize;
  let x758 : usize;
  let x760 : usize;
  let x761 : usize;
  let x736 : usize;
  let x762 : usize;
  let x733 : usize;
  let x763 : usize;
  let x765 : usize;
  let x766 : usize;
  let x734 : usize;
  let x743 : usize;
  let x768 : usize;
  let x700 : usize;
  let x769 : usize;
  let x704 : usize;
  let x770 : usize;
  let x745 : usize;
  let x771 : usize;
  let x773 : usize;
  let x774 : usize;
  let x709 : usize;
  let x775 : usize;
  let x749 : usize;
  let x776 : usize;
  let x778 : usize;
  let x779 : usize;
  let x714 : usize;
  let x780 : usize;
  let x754 : usize;
  let x781 : usize;
  let x783 : usize;
  let x784 : usize;
  let x719 : usize;
  let x785 : usize;
  let x759 : usize;
  let x786 : usize;
  let x788 : usize;
  let x789 : usize;
  let x724 : usize;
  let x790 : usize;
  let x764 : usize;
  let x791 : usize;
  let x793 : usize;
  let x794 : usize;
  let x729 : usize;
  let x795 : usize;
  let x767 : usize;
  let x796 : usize;
  let x798 : usize;
  let x799 : usize;
  let x731 : usize;
  let x802 : usize;
  let x803 : usize;
  let x804 : usize;
  let x806 : usize;
  let x807 : usize;
  let x808 : usize;
  let x809 : usize;
  let x811 : usize;
  let x812 : usize;
  let x813 : usize;
  let x814 : usize;
  let x816 : usize;
  let x817 : usize;
  let x818 : usize;
  let x819 : usize;
  let x821 : usize;
  let x822 : usize;
  let x823 : usize;
  let x824 : usize;
  let x826 : usize;
  let x827 : usize;
  let x800 : usize;
  let x828 : usize;
  let x772 : usize;
  let x830 : usize;
  let x801 : usize;
  let x831 : usize;
  let x777 : usize;
  let x833 : usize;
  let x805 : usize;
  let x834 : usize;
  let x782 : usize;
  let x836 : usize;
  let x810 : usize;
  let x837 : usize;
  let x787 : usize;
  let x839 : usize;
  let x815 : usize;
  let x840 : usize;
  let x792 : usize;
  let x842 : usize;
  let x820 : usize;
  let x843 : usize;
  let x829 : usize;
  let x797 : usize;
  let x845 : usize;
  let x825 : usize;
  let x846 : usize;
  let x832 : usize;
  let x835 : usize;
  let x838 : usize;
  let x841 : usize;
  let x844 : usize;
  let x847 : usize;
  let x848 : usize;
  let x849 : usize;
  let x850 : usize;
  let x851 : usize;
  let x852 : usize;
  let x853 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  x6 = in1[0usize];
  x7 = in1[1usize];
  x8 = in1[2usize];
  x9 = in1[3usize];
  x10 = in1[4usize];
  x11 = in1[5usize];
  /*skip*/
  /*skip*/
  x12 = x1;
  x13 = x2;
  x14 = x3;
  x15 = x4;
  x16 = x5;
  x17 = x0;
  x18 = (x17).wrapping_mul(x11);
  x19 = (((x17) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x20 = (x17).wrapping_mul(x10);
  x21 = (((x17) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x22 = (x17).wrapping_mul(x9);
  x23 = (((x17) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x24 = (x17).wrapping_mul(x8);
  x25 = (((x17) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x26 = (x17).wrapping_mul(x7);
  x27 = (((x17) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x28 = (x17).wrapping_mul(x6);
  x29 = (((x17) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x30 = (x29).wrapping_add(x26);
  x31 = ((x30)<(x29)) as usize;
  x32 = (x31).wrapping_add(x27);
  x33 = ((x32)<(x27)) as usize;
  x34 = (x32).wrapping_add(x24);
  x35 = ((x34)<(x24)) as usize;
  x36 = (x33).wrapping_add(x35);
  x37 = (x36).wrapping_add(x25);
  x38 = ((x37)<(x25)) as usize;
  x39 = (x37).wrapping_add(x22);
  x40 = ((x39)<(x22)) as usize;
  x41 = (x38).wrapping_add(x40);
  x42 = (x41).wrapping_add(x23);
  x43 = ((x42)<(x23)) as usize;
  x44 = (x42).wrapping_add(x20);
  x45 = ((x44)<(x20)) as usize;
  x46 = (x43).wrapping_add(x45);
  x47 = (x46).wrapping_add(x21);
  x48 = ((x47)<(x21)) as usize;
  x49 = (x47).wrapping_add(x18);
  x50 = ((x49)<(x18)) as usize;
  x51 = (x48).wrapping_add(x50);
  x52 = (x51).wrapping_add(x19);
  x53 = (x28).wrapping_mul(9940570264628428797usize);
  x54 = (x53).wrapping_mul(1873798617647539866usize);
  x55 = (((x53) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x56 = (x53).wrapping_mul(5412103778470702295usize);
  x57 = (((x53) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x58 = (x53).wrapping_mul(7239337960414712511usize);
  x59 = (((x53) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x60 = (x53).wrapping_mul(7435674573564081700usize);
  x61 = (((x53) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x62 = (x53).wrapping_mul(2210141511517208575usize);
  x63 = (((x53) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x64 = (x53).wrapping_mul(13402431016077863595usize);
  x65 = (((x53) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x66 = (x65).wrapping_add(x62);
  x67 = ((x66)<(x65)) as usize;
  x68 = (x67).wrapping_add(x63);
  x69 = ((x68)<(x63)) as usize;
  x70 = (x68).wrapping_add(x60);
  x71 = ((x70)<(x60)) as usize;
  x72 = (x69).wrapping_add(x71);
  x73 = (x72).wrapping_add(x61);
  x74 = ((x73)<(x61)) as usize;
  x75 = (x73).wrapping_add(x58);
  x76 = ((x75)<(x58)) as usize;
  x77 = (x74).wrapping_add(x76);
  x78 = (x77).wrapping_add(x59);
  x79 = ((x78)<(x59)) as usize;
  x80 = (x78).wrapping_add(x56);
  x81 = ((x80)<(x56)) as usize;
  x82 = (x79).wrapping_add(x81);
  x83 = (x82).wrapping_add(x57);
  x84 = ((x83)<(x57)) as usize;
  x85 = (x83).wrapping_add(x54);
  x86 = ((x85)<(x54)) as usize;
  x87 = (x84).wrapping_add(x86);
  x88 = (x87).wrapping_add(x55);
  x89 = (x28).wrapping_add(x64);
  x90 = ((x89)<(x28)) as usize;
  x91 = (x90).wrapping_add(x30);
  x92 = ((x91)<(x30)) as usize;
  x93 = (x91).wrapping_add(x66);
  x94 = ((x93)<(x66)) as usize;
  x95 = (x92).wrapping_add(x94);
  x96 = (x95).wrapping_add(x34);
  x97 = ((x96)<(x34)) as usize;
  x98 = (x96).wrapping_add(x70);
  x99 = ((x98)<(x70)) as usize;
  x100 = (x97).wrapping_add(x99);
  x101 = (x100).wrapping_add(x39);
  x102 = ((x101)<(x39)) as usize;
  x103 = (x101).wrapping_add(x75);
  x104 = ((x103)<(x75)) as usize;
  x105 = (x102).wrapping_add(x104);
  x106 = (x105).wrapping_add(x44);
  x107 = ((x106)<(x44)) as usize;
  x108 = (x106).wrapping_add(x80);
  x109 = ((x108)<(x80)) as usize;
  x110 = (x107).wrapping_add(x109);
  x111 = (x110).wrapping_add(x49);
  x112 = ((x111)<(x49)) as usize;
  x113 = (x111).wrapping_add(x85);
  x114 = ((x113)<(x85)) as usize;
  x115 = (x112).wrapping_add(x114);
  x116 = (x115).wrapping_add(x52);
  x117 = ((x116)<(x52)) as usize;
  x118 = (x116).wrapping_add(x88);
  x119 = ((x118)<(x88)) as usize;
  x120 = (x117).wrapping_add(x119);
  x121 = (x12).wrapping_mul(x11);
  x122 = (((x12) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x123 = (x12).wrapping_mul(x10);
  x124 = (((x12) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x125 = (x12).wrapping_mul(x9);
  x126 = (((x12) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x127 = (x12).wrapping_mul(x8);
  x128 = (((x12) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x129 = (x12).wrapping_mul(x7);
  x130 = (((x12) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x131 = (x12).wrapping_mul(x6);
  x132 = (((x12) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x133 = (x132).wrapping_add(x129);
  x134 = ((x133)<(x132)) as usize;
  x135 = (x134).wrapping_add(x130);
  x136 = ((x135)<(x130)) as usize;
  x137 = (x135).wrapping_add(x127);
  x138 = ((x137)<(x127)) as usize;
  x139 = (x136).wrapping_add(x138);
  x140 = (x139).wrapping_add(x128);
  x141 = ((x140)<(x128)) as usize;
  x142 = (x140).wrapping_add(x125);
  x143 = ((x142)<(x125)) as usize;
  x144 = (x141).wrapping_add(x143);
  x145 = (x144).wrapping_add(x126);
  x146 = ((x145)<(x126)) as usize;
  x147 = (x145).wrapping_add(x123);
  x148 = ((x147)<(x123)) as usize;
  x149 = (x146).wrapping_add(x148);
  x150 = (x149).wrapping_add(x124);
  x151 = ((x150)<(x124)) as usize;
  x152 = (x150).wrapping_add(x121);
  x153 = ((x152)<(x121)) as usize;
  x154 = (x151).wrapping_add(x153);
  x155 = (x154).wrapping_add(x122);
  x156 = (x93).wrapping_add(x131);
  x157 = ((x156)<(x93)) as usize;
  x158 = (x157).wrapping_add(x98);
  x159 = ((x158)<(x98)) as usize;
  x160 = (x158).wrapping_add(x133);
  x161 = ((x160)<(x133)) as usize;
  x162 = (x159).wrapping_add(x161);
  x163 = (x162).wrapping_add(x103);
  x164 = ((x163)<(x103)) as usize;
  x165 = (x163).wrapping_add(x137);
  x166 = ((x165)<(x137)) as usize;
  x167 = (x164).wrapping_add(x166);
  x168 = (x167).wrapping_add(x108);
  x169 = ((x168)<(x108)) as usize;
  x170 = (x168).wrapping_add(x142);
  x171 = ((x170)<(x142)) as usize;
  x172 = (x169).wrapping_add(x171);
  x173 = (x172).wrapping_add(x113);
  x174 = ((x173)<(x113)) as usize;
  x175 = (x173).wrapping_add(x147);
  x176 = ((x175)<(x147)) as usize;
  x177 = (x174).wrapping_add(x176);
  x178 = (x177).wrapping_add(x118);
  x179 = ((x178)<(x118)) as usize;
  x180 = (x178).wrapping_add(x152);
  x181 = ((x180)<(x152)) as usize;
  x182 = (x179).wrapping_add(x181);
  x183 = (x182).wrapping_add(x120);
  x184 = ((x183)<(x120)) as usize;
  x185 = (x183).wrapping_add(x155);
  x186 = ((x185)<(x155)) as usize;
  x187 = (x184).wrapping_add(x186);
  x188 = (x156).wrapping_mul(9940570264628428797usize);
  x189 = (x188).wrapping_mul(1873798617647539866usize);
  x190 = (((x188) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x191 = (x188).wrapping_mul(5412103778470702295usize);
  x192 = (((x188) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x193 = (x188).wrapping_mul(7239337960414712511usize);
  x194 = (((x188) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x195 = (x188).wrapping_mul(7435674573564081700usize);
  x196 = (((x188) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x197 = (x188).wrapping_mul(2210141511517208575usize);
  x198 = (((x188) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x199 = (x188).wrapping_mul(13402431016077863595usize);
  x200 = (((x188) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x201 = (x200).wrapping_add(x197);
  x202 = ((x201)<(x200)) as usize;
  x203 = (x202).wrapping_add(x198);
  x204 = ((x203)<(x198)) as usize;
  x205 = (x203).wrapping_add(x195);
  x206 = ((x205)<(x195)) as usize;
  x207 = (x204).wrapping_add(x206);
  x208 = (x207).wrapping_add(x196);
  x209 = ((x208)<(x196)) as usize;
  x210 = (x208).wrapping_add(x193);
  x211 = ((x210)<(x193)) as usize;
  x212 = (x209).wrapping_add(x211);
  x213 = (x212).wrapping_add(x194);
  x214 = ((x213)<(x194)) as usize;
  x215 = (x213).wrapping_add(x191);
  x216 = ((x215)<(x191)) as usize;
  x217 = (x214).wrapping_add(x216);
  x218 = (x217).wrapping_add(x192);
  x219 = ((x218)<(x192)) as usize;
  x220 = (x218).wrapping_add(x189);
  x221 = ((x220)<(x189)) as usize;
  x222 = (x219).wrapping_add(x221);
  x223 = (x222).wrapping_add(x190);
  x224 = (x156).wrapping_add(x199);
  x225 = ((x224)<(x156)) as usize;
  x226 = (x225).wrapping_add(x160);
  x227 = ((x226)<(x160)) as usize;
  x228 = (x226).wrapping_add(x201);
  x229 = ((x228)<(x201)) as usize;
  x230 = (x227).wrapping_add(x229);
  x231 = (x230).wrapping_add(x165);
  x232 = ((x231)<(x165)) as usize;
  x233 = (x231).wrapping_add(x205);
  x234 = ((x233)<(x205)) as usize;
  x235 = (x232).wrapping_add(x234);
  x236 = (x235).wrapping_add(x170);
  x237 = ((x236)<(x170)) as usize;
  x238 = (x236).wrapping_add(x210);
  x239 = ((x238)<(x210)) as usize;
  x240 = (x237).wrapping_add(x239);
  x241 = (x240).wrapping_add(x175);
  x242 = ((x241)<(x175)) as usize;
  x243 = (x241).wrapping_add(x215);
  x244 = ((x243)<(x215)) as usize;
  x245 = (x242).wrapping_add(x244);
  x246 = (x245).wrapping_add(x180);
  x247 = ((x246)<(x180)) as usize;
  x248 = (x246).wrapping_add(x220);
  x249 = ((x248)<(x220)) as usize;
  x250 = (x247).wrapping_add(x249);
  x251 = (x250).wrapping_add(x185);
  x252 = ((x251)<(x185)) as usize;
  x253 = (x251).wrapping_add(x223);
  x254 = ((x253)<(x223)) as usize;
  x255 = (x252).wrapping_add(x254);
  x256 = (x255).wrapping_add(x187);
  x257 = (x13).wrapping_mul(x11);
  x258 = (((x13) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x259 = (x13).wrapping_mul(x10);
  x260 = (((x13) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x261 = (x13).wrapping_mul(x9);
  x262 = (((x13) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x263 = (x13).wrapping_mul(x8);
  x264 = (((x13) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x265 = (x13).wrapping_mul(x7);
  x266 = (((x13) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x267 = (x13).wrapping_mul(x6);
  x268 = (((x13) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x269 = (x268).wrapping_add(x265);
  x270 = ((x269)<(x268)) as usize;
  x271 = (x270).wrapping_add(x266);
  x272 = ((x271)<(x266)) as usize;
  x273 = (x271).wrapping_add(x263);
  x274 = ((x273)<(x263)) as usize;
  x275 = (x272).wrapping_add(x274);
  x276 = (x275).wrapping_add(x264);
  x277 = ((x276)<(x264)) as usize;
  x278 = (x276).wrapping_add(x261);
  x279 = ((x278)<(x261)) as usize;
  x280 = (x277).wrapping_add(x279);
  x281 = (x280).wrapping_add(x262);
  x282 = ((x281)<(x262)) as usize;
  x283 = (x281).wrapping_add(x259);
  x284 = ((x283)<(x259)) as usize;
  x285 = (x282).wrapping_add(x284);
  x286 = (x285).wrapping_add(x260);
  x287 = ((x286)<(x260)) as usize;
  x288 = (x286).wrapping_add(x257);
  x289 = ((x288)<(x257)) as usize;
  x290 = (x287).wrapping_add(x289);
  x291 = (x290).wrapping_add(x258);
  x292 = (x228).wrapping_add(x267);
  x293 = ((x292)<(x228)) as usize;
  x294 = (x293).wrapping_add(x233);
  x295 = ((x294)<(x233)) as usize;
  x296 = (x294).wrapping_add(x269);
  x297 = ((x296)<(x269)) as usize;
  x298 = (x295).wrapping_add(x297);
  x299 = (x298).wrapping_add(x238);
  x300 = ((x299)<(x238)) as usize;
  x301 = (x299).wrapping_add(x273);
  x302 = ((x301)<(x273)) as usize;
  x303 = (x300).wrapping_add(x302);
  x304 = (x303).wrapping_add(x243);
  x305 = ((x304)<(x243)) as usize;
  x306 = (x304).wrapping_add(x278);
  x307 = ((x306)<(x278)) as usize;
  x308 = (x305).wrapping_add(x307);
  x309 = (x308).wrapping_add(x248);
  x310 = ((x309)<(x248)) as usize;
  x311 = (x309).wrapping_add(x283);
  x312 = ((x311)<(x283)) as usize;
  x313 = (x310).wrapping_add(x312);
  x314 = (x313).wrapping_add(x253);
  x315 = ((x314)<(x253)) as usize;
  x316 = (x314).wrapping_add(x288);
  x317 = ((x316)<(x288)) as usize;
  x318 = (x315).wrapping_add(x317);
  x319 = (x318).wrapping_add(x256);
  x320 = ((x319)<(x256)) as usize;
  x321 = (x319).wrapping_add(x291);
  x322 = ((x321)<(x291)) as usize;
  x323 = (x320).wrapping_add(x322);
  x324 = (x292).wrapping_mul(9940570264628428797usize);
  x325 = (x324).wrapping_mul(1873798617647539866usize);
  x326 = (((x324) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x327 = (x324).wrapping_mul(5412103778470702295usize);
  x328 = (((x324) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x329 = (x324).wrapping_mul(7239337960414712511usize);
  x330 = (((x324) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x331 = (x324).wrapping_mul(7435674573564081700usize);
  x332 = (((x324) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x333 = (x324).wrapping_mul(2210141511517208575usize);
  x334 = (((x324) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x335 = (x324).wrapping_mul(13402431016077863595usize);
  x336 = (((x324) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x337 = (x336).wrapping_add(x333);
  x338 = ((x337)<(x336)) as usize;
  x339 = (x338).wrapping_add(x334);
  x340 = ((x339)<(x334)) as usize;
  x341 = (x339).wrapping_add(x331);
  x342 = ((x341)<(x331)) as usize;
  x343 = (x340).wrapping_add(x342);
  x344 = (x343).wrapping_add(x332);
  x345 = ((x344)<(x332)) as usize;
  x346 = (x344).wrapping_add(x329);
  x347 = ((x346)<(x329)) as usize;
  x348 = (x345).wrapping_add(x347);
  x349 = (x348).wrapping_add(x330);
  x350 = ((x349)<(x330)) as usize;
  x351 = (x349).wrapping_add(x327);
  x352 = ((x351)<(x327)) as usize;
  x353 = (x350).wrapping_add(x352);
  x354 = (x353).wrapping_add(x328);
  x355 = ((x354)<(x328)) as usize;
  x356 = (x354).wrapping_add(x325);
  x357 = ((x356)<(x325)) as usize;
  x358 = (x355).wrapping_add(x357);
  x359 = (x358).wrapping_add(x326);
  x360 = (x292).wrapping_add(x335);
  x361 = ((x360)<(x292)) as usize;
  x362 = (x361).wrapping_add(x296);
  x363 = ((x362)<(x296)) as usize;
  x364 = (x362).wrapping_add(x337);
  x365 = ((x364)<(x337)) as usize;
  x366 = (x363).wrapping_add(x365);
  x367 = (x366).wrapping_add(x301);
  x368 = ((x367)<(x301)) as usize;
  x369 = (x367).wrapping_add(x341);
  x370 = ((x369)<(x341)) as usize;
  x371 = (x368).wrapping_add(x370);
  x372 = (x371).wrapping_add(x306);
  x373 = ((x372)<(x306)) as usize;
  x374 = (x372).wrapping_add(x346);
  x375 = ((x374)<(x346)) as usize;
  x376 = (x373).wrapping_add(x375);
  x377 = (x376).wrapping_add(x311);
  x378 = ((x377)<(x311)) as usize;
  x379 = (x377).wrapping_add(x351);
  x380 = ((x379)<(x351)) as usize;
  x381 = (x378).wrapping_add(x380);
  x382 = (x381).wrapping_add(x316);
  x383 = ((x382)<(x316)) as usize;
  x384 = (x382).wrapping_add(x356);
  x385 = ((x384)<(x356)) as usize;
  x386 = (x383).wrapping_add(x385);
  x387 = (x386).wrapping_add(x321);
  x388 = ((x387)<(x321)) as usize;
  x389 = (x387).wrapping_add(x359);
  x390 = ((x389)<(x359)) as usize;
  x391 = (x388).wrapping_add(x390);
  x392 = (x391).wrapping_add(x323);
  x393 = (x14).wrapping_mul(x11);
  x394 = (((x14) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x395 = (x14).wrapping_mul(x10);
  x396 = (((x14) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x397 = (x14).wrapping_mul(x9);
  x398 = (((x14) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x399 = (x14).wrapping_mul(x8);
  x400 = (((x14) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x401 = (x14).wrapping_mul(x7);
  x402 = (((x14) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x403 = (x14).wrapping_mul(x6);
  x404 = (((x14) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x405 = (x404).wrapping_add(x401);
  x406 = ((x405)<(x404)) as usize;
  x407 = (x406).wrapping_add(x402);
  x408 = ((x407)<(x402)) as usize;
  x409 = (x407).wrapping_add(x399);
  x410 = ((x409)<(x399)) as usize;
  x411 = (x408).wrapping_add(x410);
  x412 = (x411).wrapping_add(x400);
  x413 = ((x412)<(x400)) as usize;
  x414 = (x412).wrapping_add(x397);
  x415 = ((x414)<(x397)) as usize;
  x416 = (x413).wrapping_add(x415);
  x417 = (x416).wrapping_add(x398);
  x418 = ((x417)<(x398)) as usize;
  x419 = (x417).wrapping_add(x395);
  x420 = ((x419)<(x395)) as usize;
  x421 = (x418).wrapping_add(x420);
  x422 = (x421).wrapping_add(x396);
  x423 = ((x422)<(x396)) as usize;
  x424 = (x422).wrapping_add(x393);
  x425 = ((x424)<(x393)) as usize;
  x426 = (x423).wrapping_add(x425);
  x427 = (x426).wrapping_add(x394);
  x428 = (x364).wrapping_add(x403);
  x429 = ((x428)<(x364)) as usize;
  x430 = (x429).wrapping_add(x369);
  x431 = ((x430)<(x369)) as usize;
  x432 = (x430).wrapping_add(x405);
  x433 = ((x432)<(x405)) as usize;
  x434 = (x431).wrapping_add(x433);
  x435 = (x434).wrapping_add(x374);
  x436 = ((x435)<(x374)) as usize;
  x437 = (x435).wrapping_add(x409);
  x438 = ((x437)<(x409)) as usize;
  x439 = (x436).wrapping_add(x438);
  x440 = (x439).wrapping_add(x379);
  x441 = ((x440)<(x379)) as usize;
  x442 = (x440).wrapping_add(x414);
  x443 = ((x442)<(x414)) as usize;
  x444 = (x441).wrapping_add(x443);
  x445 = (x444).wrapping_add(x384);
  x446 = ((x445)<(x384)) as usize;
  x447 = (x445).wrapping_add(x419);
  x448 = ((x447)<(x419)) as usize;
  x449 = (x446).wrapping_add(x448);
  x450 = (x449).wrapping_add(x389);
  x451 = ((x450)<(x389)) as usize;
  x452 = (x450).wrapping_add(x424);
  x453 = ((x452)<(x424)) as usize;
  x454 = (x451).wrapping_add(x453);
  x455 = (x454).wrapping_add(x392);
  x456 = ((x455)<(x392)) as usize;
  x457 = (x455).wrapping_add(x427);
  x458 = ((x457)<(x427)) as usize;
  x459 = (x456).wrapping_add(x458);
  x460 = (x428).wrapping_mul(9940570264628428797usize);
  x461 = (x460).wrapping_mul(1873798617647539866usize);
  x462 = (((x460) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x463 = (x460).wrapping_mul(5412103778470702295usize);
  x464 = (((x460) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x465 = (x460).wrapping_mul(7239337960414712511usize);
  x466 = (((x460) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x467 = (x460).wrapping_mul(7435674573564081700usize);
  x468 = (((x460) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x469 = (x460).wrapping_mul(2210141511517208575usize);
  x470 = (((x460) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x471 = (x460).wrapping_mul(13402431016077863595usize);
  x472 = (((x460) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x473 = (x472).wrapping_add(x469);
  x474 = ((x473)<(x472)) as usize;
  x475 = (x474).wrapping_add(x470);
  x476 = ((x475)<(x470)) as usize;
  x477 = (x475).wrapping_add(x467);
  x478 = ((x477)<(x467)) as usize;
  x479 = (x476).wrapping_add(x478);
  x480 = (x479).wrapping_add(x468);
  x481 = ((x480)<(x468)) as usize;
  x482 = (x480).wrapping_add(x465);
  x483 = ((x482)<(x465)) as usize;
  x484 = (x481).wrapping_add(x483);
  x485 = (x484).wrapping_add(x466);
  x486 = ((x485)<(x466)) as usize;
  x487 = (x485).wrapping_add(x463);
  x488 = ((x487)<(x463)) as usize;
  x489 = (x486).wrapping_add(x488);
  x490 = (x489).wrapping_add(x464);
  x491 = ((x490)<(x464)) as usize;
  x492 = (x490).wrapping_add(x461);
  x493 = ((x492)<(x461)) as usize;
  x494 = (x491).wrapping_add(x493);
  x495 = (x494).wrapping_add(x462);
  x496 = (x428).wrapping_add(x471);
  x497 = ((x496)<(x428)) as usize;
  x498 = (x497).wrapping_add(x432);
  x499 = ((x498)<(x432)) as usize;
  x500 = (x498).wrapping_add(x473);
  x501 = ((x500)<(x473)) as usize;
  x502 = (x499).wrapping_add(x501);
  x503 = (x502).wrapping_add(x437);
  x504 = ((x503)<(x437)) as usize;
  x505 = (x503).wrapping_add(x477);
  x506 = ((x505)<(x477)) as usize;
  x507 = (x504).wrapping_add(x506);
  x508 = (x507).wrapping_add(x442);
  x509 = ((x508)<(x442)) as usize;
  x510 = (x508).wrapping_add(x482);
  x511 = ((x510)<(x482)) as usize;
  x512 = (x509).wrapping_add(x511);
  x513 = (x512).wrapping_add(x447);
  x514 = ((x513)<(x447)) as usize;
  x515 = (x513).wrapping_add(x487);
  x516 = ((x515)<(x487)) as usize;
  x517 = (x514).wrapping_add(x516);
  x518 = (x517).wrapping_add(x452);
  x519 = ((x518)<(x452)) as usize;
  x520 = (x518).wrapping_add(x492);
  x521 = ((x520)<(x492)) as usize;
  x522 = (x519).wrapping_add(x521);
  x523 = (x522).wrapping_add(x457);
  x524 = ((x523)<(x457)) as usize;
  x525 = (x523).wrapping_add(x495);
  x526 = ((x525)<(x495)) as usize;
  x527 = (x524).wrapping_add(x526);
  x528 = (x527).wrapping_add(x459);
  x529 = (x15).wrapping_mul(x11);
  x530 = (((x15) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x531 = (x15).wrapping_mul(x10);
  x532 = (((x15) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x533 = (x15).wrapping_mul(x9);
  x534 = (((x15) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x535 = (x15).wrapping_mul(x8);
  x536 = (((x15) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x537 = (x15).wrapping_mul(x7);
  x538 = (((x15) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x539 = (x15).wrapping_mul(x6);
  x540 = (((x15) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x541 = (x540).wrapping_add(x537);
  x542 = ((x541)<(x540)) as usize;
  x543 = (x542).wrapping_add(x538);
  x544 = ((x543)<(x538)) as usize;
  x545 = (x543).wrapping_add(x535);
  x546 = ((x545)<(x535)) as usize;
  x547 = (x544).wrapping_add(x546);
  x548 = (x547).wrapping_add(x536);
  x549 = ((x548)<(x536)) as usize;
  x550 = (x548).wrapping_add(x533);
  x551 = ((x550)<(x533)) as usize;
  x552 = (x549).wrapping_add(x551);
  x553 = (x552).wrapping_add(x534);
  x554 = ((x553)<(x534)) as usize;
  x555 = (x553).wrapping_add(x531);
  x556 = ((x555)<(x531)) as usize;
  x557 = (x554).wrapping_add(x556);
  x558 = (x557).wrapping_add(x532);
  x559 = ((x558)<(x532)) as usize;
  x560 = (x558).wrapping_add(x529);
  x561 = ((x560)<(x529)) as usize;
  x562 = (x559).wrapping_add(x561);
  x563 = (x562).wrapping_add(x530);
  x564 = (x500).wrapping_add(x539);
  x565 = ((x564)<(x500)) as usize;
  x566 = (x565).wrapping_add(x505);
  x567 = ((x566)<(x505)) as usize;
  x568 = (x566).wrapping_add(x541);
  x569 = ((x568)<(x541)) as usize;
  x570 = (x567).wrapping_add(x569);
  x571 = (x570).wrapping_add(x510);
  x572 = ((x571)<(x510)) as usize;
  x573 = (x571).wrapping_add(x545);
  x574 = ((x573)<(x545)) as usize;
  x575 = (x572).wrapping_add(x574);
  x576 = (x575).wrapping_add(x515);
  x577 = ((x576)<(x515)) as usize;
  x578 = (x576).wrapping_add(x550);
  x579 = ((x578)<(x550)) as usize;
  x580 = (x577).wrapping_add(x579);
  x581 = (x580).wrapping_add(x520);
  x582 = ((x581)<(x520)) as usize;
  x583 = (x581).wrapping_add(x555);
  x584 = ((x583)<(x555)) as usize;
  x585 = (x582).wrapping_add(x584);
  x586 = (x585).wrapping_add(x525);
  x587 = ((x586)<(x525)) as usize;
  x588 = (x586).wrapping_add(x560);
  x589 = ((x588)<(x560)) as usize;
  x590 = (x587).wrapping_add(x589);
  x591 = (x590).wrapping_add(x528);
  x592 = ((x591)<(x528)) as usize;
  x593 = (x591).wrapping_add(x563);
  x594 = ((x593)<(x563)) as usize;
  x595 = (x592).wrapping_add(x594);
  x596 = (x564).wrapping_mul(9940570264628428797usize);
  x597 = (x596).wrapping_mul(1873798617647539866usize);
  x598 = (((x596) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x599 = (x596).wrapping_mul(5412103778470702295usize);
  x600 = (((x596) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x601 = (x596).wrapping_mul(7239337960414712511usize);
  x602 = (((x596) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x603 = (x596).wrapping_mul(7435674573564081700usize);
  x604 = (((x596) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x605 = (x596).wrapping_mul(2210141511517208575usize);
  x606 = (((x596) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x607 = (x596).wrapping_mul(13402431016077863595usize);
  x608 = (((x596) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x609 = (x608).wrapping_add(x605);
  x610 = ((x609)<(x608)) as usize;
  x611 = (x610).wrapping_add(x606);
  x612 = ((x611)<(x606)) as usize;
  x613 = (x611).wrapping_add(x603);
  x614 = ((x613)<(x603)) as usize;
  x615 = (x612).wrapping_add(x614);
  x616 = (x615).wrapping_add(x604);
  x617 = ((x616)<(x604)) as usize;
  x618 = (x616).wrapping_add(x601);
  x619 = ((x618)<(x601)) as usize;
  x620 = (x617).wrapping_add(x619);
  x621 = (x620).wrapping_add(x602);
  x622 = ((x621)<(x602)) as usize;
  x623 = (x621).wrapping_add(x599);
  x624 = ((x623)<(x599)) as usize;
  x625 = (x622).wrapping_add(x624);
  x626 = (x625).wrapping_add(x600);
  x627 = ((x626)<(x600)) as usize;
  x628 = (x626).wrapping_add(x597);
  x629 = ((x628)<(x597)) as usize;
  x630 = (x627).wrapping_add(x629);
  x631 = (x630).wrapping_add(x598);
  x632 = (x564).wrapping_add(x607);
  x633 = ((x632)<(x564)) as usize;
  x634 = (x633).wrapping_add(x568);
  x635 = ((x634)<(x568)) as usize;
  x636 = (x634).wrapping_add(x609);
  x637 = ((x636)<(x609)) as usize;
  x638 = (x635).wrapping_add(x637);
  x639 = (x638).wrapping_add(x573);
  x640 = ((x639)<(x573)) as usize;
  x641 = (x639).wrapping_add(x613);
  x642 = ((x641)<(x613)) as usize;
  x643 = (x640).wrapping_add(x642);
  x644 = (x643).wrapping_add(x578);
  x645 = ((x644)<(x578)) as usize;
  x646 = (x644).wrapping_add(x618);
  x647 = ((x646)<(x618)) as usize;
  x648 = (x645).wrapping_add(x647);
  x649 = (x648).wrapping_add(x583);
  x650 = ((x649)<(x583)) as usize;
  x651 = (x649).wrapping_add(x623);
  x652 = ((x651)<(x623)) as usize;
  x653 = (x650).wrapping_add(x652);
  x654 = (x653).wrapping_add(x588);
  x655 = ((x654)<(x588)) as usize;
  x656 = (x654).wrapping_add(x628);
  x657 = ((x656)<(x628)) as usize;
  x658 = (x655).wrapping_add(x657);
  x659 = (x658).wrapping_add(x593);
  x660 = ((x659)<(x593)) as usize;
  x661 = (x659).wrapping_add(x631);
  x662 = ((x661)<(x631)) as usize;
  x663 = (x660).wrapping_add(x662);
  x664 = (x663).wrapping_add(x595);
  x665 = (x16).wrapping_mul(x11);
  x666 = (((x16) as u128).wrapping_mul((x11) as u128) >> 64) as usize;
  x667 = (x16).wrapping_mul(x10);
  x668 = (((x16) as u128).wrapping_mul((x10) as u128) >> 64) as usize;
  x669 = (x16).wrapping_mul(x9);
  x670 = (((x16) as u128).wrapping_mul((x9) as u128) >> 64) as usize;
  x671 = (x16).wrapping_mul(x8);
  x672 = (((x16) as u128).wrapping_mul((x8) as u128) >> 64) as usize;
  x673 = (x16).wrapping_mul(x7);
  x674 = (((x16) as u128).wrapping_mul((x7) as u128) >> 64) as usize;
  x675 = (x16).wrapping_mul(x6);
  x676 = (((x16) as u128).wrapping_mul((x6) as u128) >> 64) as usize;
  x677 = (x676).wrapping_add(x673);
  x678 = ((x677)<(x676)) as usize;
  x679 = (x678).wrapping_add(x674);
  x680 = ((x679)<(x674)) as usize;
  x681 = (x679).wrapping_add(x671);
  x682 = ((x681)<(x671)) as usize;
  x683 = (x680).wrapping_add(x682);
  x684 = (x683).wrapping_add(x672);
  x685 = ((x684)<(x672)) as usize;
  x686 = (x684).wrapping_add(x669);
  x687 = ((x686)<(x669)) as usize;
  x688 = (x685).wrapping_add(x687);
  x689 = (x688).wrapping_add(x670);
  x690 = ((x689)<(x670)) as usize;
  x691 = (x689).wrapping_add(x667);
  x692 = ((x691)<(x667)) as usize;
  x693 = (x690).wrapping_add(x692);
  x694 = (x693).wrapping_add(x668);
  x695 = ((x694)<(x668)) as usize;
  x696 = (x694).wrapping_add(x665);
  x697 = ((x696)<(x665)) as usize;
  x698 = (x695).wrapping_add(x697);
  x699 = (x698).wrapping_add(x666);
  x700 = (x636).wrapping_add(x675);
  x701 = ((x700)<(x636)) as usize;
  x702 = (x701).wrapping_add(x641);
  x703 = ((x702)<(x641)) as usize;
  x704 = (x702).wrapping_add(x677);
  x705 = ((x704)<(x677)) as usize;
  x706 = (x703).wrapping_add(x705);
  x707 = (x706).wrapping_add(x646);
  x708 = ((x707)<(x646)) as usize;
  x709 = (x707).wrapping_add(x681);
  x710 = ((x709)<(x681)) as usize;
  x711 = (x708).wrapping_add(x710);
  x712 = (x711).wrapping_add(x651);
  x713 = ((x712)<(x651)) as usize;
  x714 = (x712).wrapping_add(x686);
  x715 = ((x714)<(x686)) as usize;
  x716 = (x713).wrapping_add(x715);
  x717 = (x716).wrapping_add(x656);
  x718 = ((x717)<(x656)) as usize;
  x719 = (x717).wrapping_add(x691);
  x720 = ((x719)<(x691)) as usize;
  x721 = (x718).wrapping_add(x720);
  x722 = (x721).wrapping_add(x661);
  x723 = ((x722)<(x661)) as usize;
  x724 = (x722).wrapping_add(x696);
  x725 = ((x724)<(x696)) as usize;
  x726 = (x723).wrapping_add(x725);
  x727 = (x726).wrapping_add(x664);
  x728 = ((x727)<(x664)) as usize;
  x729 = (x727).wrapping_add(x699);
  x730 = ((x729)<(x699)) as usize;
  x731 = (x728).wrapping_add(x730);
  x732 = (x700).wrapping_mul(9940570264628428797usize);
  x733 = (x732).wrapping_mul(1873798617647539866usize);
  x734 = (((x732) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x735 = (x732).wrapping_mul(5412103778470702295usize);
  x736 = (((x732) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x737 = (x732).wrapping_mul(7239337960414712511usize);
  x738 = (((x732) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x739 = (x732).wrapping_mul(7435674573564081700usize);
  x740 = (((x732) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x741 = (x732).wrapping_mul(2210141511517208575usize);
  x742 = (((x732) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x743 = (x732).wrapping_mul(13402431016077863595usize);
  x744 = (((x732) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x745 = (x744).wrapping_add(x741);
  x746 = ((x745)<(x744)) as usize;
  x747 = (x746).wrapping_add(x742);
  x748 = ((x747)<(x742)) as usize;
  x749 = (x747).wrapping_add(x739);
  x750 = ((x749)<(x739)) as usize;
  x751 = (x748).wrapping_add(x750);
  x752 = (x751).wrapping_add(x740);
  x753 = ((x752)<(x740)) as usize;
  x754 = (x752).wrapping_add(x737);
  x755 = ((x754)<(x737)) as usize;
  x756 = (x753).wrapping_add(x755);
  x757 = (x756).wrapping_add(x738);
  x758 = ((x757)<(x738)) as usize;
  x759 = (x757).wrapping_add(x735);
  x760 = ((x759)<(x735)) as usize;
  x761 = (x758).wrapping_add(x760);
  x762 = (x761).wrapping_add(x736);
  x763 = ((x762)<(x736)) as usize;
  x764 = (x762).wrapping_add(x733);
  x765 = ((x764)<(x733)) as usize;
  x766 = (x763).wrapping_add(x765);
  x767 = (x766).wrapping_add(x734);
  x768 = (x700).wrapping_add(x743);
  x769 = ((x768)<(x700)) as usize;
  x770 = (x769).wrapping_add(x704);
  x771 = ((x770)<(x704)) as usize;
  x772 = (x770).wrapping_add(x745);
  x773 = ((x772)<(x745)) as usize;
  x774 = (x771).wrapping_add(x773);
  x775 = (x774).wrapping_add(x709);
  x776 = ((x775)<(x709)) as usize;
  x777 = (x775).wrapping_add(x749);
  x778 = ((x777)<(x749)) as usize;
  x779 = (x776).wrapping_add(x778);
  x780 = (x779).wrapping_add(x714);
  x781 = ((x780)<(x714)) as usize;
  x782 = (x780).wrapping_add(x754);
  x783 = ((x782)<(x754)) as usize;
  x784 = (x781).wrapping_add(x783);
  x785 = (x784).wrapping_add(x719);
  x786 = ((x785)<(x719)) as usize;
  x787 = (x785).wrapping_add(x759);
  x788 = ((x787)<(x759)) as usize;
  x789 = (x786).wrapping_add(x788);
  x790 = (x789).wrapping_add(x724);
  x791 = ((x790)<(x724)) as usize;
  x792 = (x790).wrapping_add(x764);
  x793 = ((x792)<(x764)) as usize;
  x794 = (x791).wrapping_add(x793);
  x795 = (x794).wrapping_add(x729);
  x796 = ((x795)<(x729)) as usize;
  x797 = (x795).wrapping_add(x767);
  x798 = ((x797)<(x767)) as usize;
  x799 = (x796).wrapping_add(x798);
  x800 = (x799).wrapping_add(x731);
  x801 = (x772).wrapping_sub(13402431016077863595usize);
  x802 = ((x772)<(x801)) as usize;
  x803 = (x777).wrapping_sub(2210141511517208575usize);
  x804 = ((x777)<(x803)) as usize;
  x805 = (x803).wrapping_sub(x802);
  x806 = ((x803)<(x805)) as usize;
  x807 = (x804).wrapping_add(x806);
  x808 = (x782).wrapping_sub(7435674573564081700usize);
  x809 = ((x782)<(x808)) as usize;
  x810 = (x808).wrapping_sub(x807);
  x811 = ((x808)<(x810)) as usize;
  x812 = (x809).wrapping_add(x811);
  x813 = (x787).wrapping_sub(7239337960414712511usize);
  x814 = ((x787)<(x813)) as usize;
  x815 = (x813).wrapping_sub(x812);
  x816 = ((x813)<(x815)) as usize;
  x817 = (x814).wrapping_add(x816);
  x818 = (x792).wrapping_sub(5412103778470702295usize);
  x819 = ((x792)<(x818)) as usize;
  x820 = (x818).wrapping_sub(x817);
  x821 = ((x818)<(x820)) as usize;
  x822 = (x819).wrapping_add(x821);
  x823 = (x797).wrapping_sub(1873798617647539866usize);
  x824 = ((x797)<(x823)) as usize;
  x825 = (x823).wrapping_sub(x822);
  x826 = ((x823)<(x825)) as usize;
  x827 = (x824).wrapping_add(x826);
  x828 = (x800).wrapping_sub(x827);
  x829 = ((x800)<(x828)) as usize;
  x830 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x831 = (x830)^(18446744073709551615usize);
  x832 = ((x772)&(x830))|((x801)&(x831));
  x833 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x834 = (x833)^(18446744073709551615usize);
  x835 = ((x777)&(x833))|((x805)&(x834));
  x836 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x837 = (x836)^(18446744073709551615usize);
  x838 = ((x782)&(x836))|((x810)&(x837));
  x839 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x840 = (x839)^(18446744073709551615usize);
  x841 = ((x787)&(x839))|((x815)&(x840));
  x842 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x843 = (x842)^(18446744073709551615usize);
  x844 = ((x792)&(x842))|((x820)&(x843));
  x845 = (usize::MAX).wrapping_add(((x829)==(0usize)) as usize);
  x846 = (x845)^(18446744073709551615usize);
  x847 = ((x797)&(x845))|((x825)&(x846));
  x848 = x832;
  x849 = x835;
  x850 = x838;
  x851 = x841;
  x852 = x844;
  x853 = x847;
  /*skip*/
  out0[0usize] = x848;
  out0[1usize] = x849;
  out0[2usize] = x850;
  out0[3usize] = x851;
  out0[4usize] = x852;
  out0[5usize] = x853;
  /*skip*/
  return;
}


pub fn bls12_add(out0 : &mut [usize], in0 : &mut [usize], in1 : &mut [usize]) -> () {
  let x6 : usize;
  let x0 : usize;
  let x13 : usize;
  let x1 : usize;
  let x7 : usize;
  let x15 : usize;
  let x2 : usize;
  let x8 : usize;
  let x17 : usize;
  let x3 : usize;
  let x9 : usize;
  let x19 : usize;
  let x4 : usize;
  let x10 : usize;
  let x21 : usize;
  let x5 : usize;
  let x11 : usize;
  let x25 : usize;
  let x27 : usize;
  let x29 : usize;
  let x31 : usize;
  let x23 : usize;
  let x33 : usize;
  let x12 : usize;
  let x36 : usize;
  let x24 : usize;
  let x37 : usize;
  let x14 : usize;
  let x39 : usize;
  let x26 : usize;
  let x40 : usize;
  let x16 : usize;
  let x42 : usize;
  let x28 : usize;
  let x43 : usize;
  let x18 : usize;
  let x45 : usize;
  let x30 : usize;
  let x46 : usize;
  let x20 : usize;
  let x48 : usize;
  let x32 : usize;
  let x49 : usize;
  let x35 : usize;
  let x22 : usize;
  let x51 : usize;
  let x34 : usize;
  let x52 : usize;
  let x38 : usize;
  let x41 : usize;
  let x44 : usize;
  let x47 : usize;
  let x50 : usize;
  let x53 : usize;
  let x54 : usize;
  let x55 : usize;
  let x56 : usize;
  let x57 : usize;
  let x58 : usize;
  let x59 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  x6 = in1[0usize];
  x7 = in1[1usize];
  x8 = in1[2usize];
  x9 = in1[3usize];
  x10 = in1[4usize];
  x11 = in1[5usize];
  /*skip*/
  /*skip*/
  x12 = (x0).wrapping_add(x6);
  x13 = (((x12)<(x0)) as usize).wrapping_add(x1);
  x14 = (x13).wrapping_add(x7);
  x15 = ((((x13)<(x1)) as usize).wrapping_add(((x14)<(x7)) as usize)).wrapping_add(x2);
  x16 = (x15).wrapping_add(x8);
  x17 = ((((x15)<(x2)) as usize).wrapping_add(((x16)<(x8)) as usize)).wrapping_add(x3);
  x18 = (x17).wrapping_add(x9);
  x19 = ((((x17)<(x3)) as usize).wrapping_add(((x18)<(x9)) as usize)).wrapping_add(x4);
  x20 = (x19).wrapping_add(x10);
  x21 = ((((x19)<(x4)) as usize).wrapping_add(((x20)<(x10)) as usize)).wrapping_add(x5);
  x22 = (x21).wrapping_add(x11);
  x23 = (((x21)<(x5)) as usize).wrapping_add(((x22)<(x11)) as usize);
  x24 = (x12).wrapping_sub(13402431016077863595usize);
  x25 = (x14).wrapping_sub(2210141511517208575usize);
  x26 = (x25).wrapping_sub(((x12)<(x24)) as usize);
  x27 = (x16).wrapping_sub(7435674573564081700usize);
  x28 = (x27).wrapping_sub((((x14)<(x25)) as usize).wrapping_add(((x25)<(x26)) as usize));
  x29 = (x18).wrapping_sub(7239337960414712511usize);
  x30 = (x29).wrapping_sub((((x16)<(x27)) as usize).wrapping_add(((x27)<(x28)) as usize));
  x31 = (x20).wrapping_sub(5412103778470702295usize);
  x32 = (x31).wrapping_sub((((x18)<(x29)) as usize).wrapping_add(((x29)<(x30)) as usize));
  x33 = (x22).wrapping_sub(1873798617647539866usize);
  x34 = (x33).wrapping_sub((((x20)<(x31)) as usize).wrapping_add(((x31)<(x32)) as usize));
  x35 = ((x23)<((x23).wrapping_sub((((x22)<(x33)) as usize).wrapping_add(((x33)<(x34)) as usize)))) as usize;
  x36 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x37 = (x36)^(18446744073709551615usize);
  x38 = ((x12)&(x36))|((x24)&(x37));
  x39 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x40 = (x39)^(18446744073709551615usize);
  x41 = ((x14)&(x39))|((x26)&(x40));
  x42 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x43 = (x42)^(18446744073709551615usize);
  x44 = ((x16)&(x42))|((x28)&(x43));
  x45 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x46 = (x45)^(18446744073709551615usize);
  x47 = ((x18)&(x45))|((x30)&(x46));
  x48 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x49 = (x48)^(18446744073709551615usize);
  x50 = ((x20)&(x48))|((x32)&(x49));
  x51 = (usize::MAX).wrapping_add(((x35)==(0usize)) as usize);
  x52 = (x51)^(18446744073709551615usize);
  x53 = ((x22)&(x51))|((x34)&(x52));
  x54 = x38;
  x55 = x41;
  x56 = x44;
  x57 = x47;
  x58 = x50;
  x59 = x53;
  /*skip*/
  out0[0usize] = x54;
  out0[1usize] = x55;
  out0[2usize] = x56;
  out0[3usize] = x57;
  out0[4usize] = x58;
  out0[5usize] = x59;
  /*skip*/
  return;
}

pub fn bls12_square(out0 : &mut [usize], in0 : &mut [usize]) -> () {
  let x11 : usize;
  let x20 : usize;
  let x23 : usize;
  let x25 : usize;
  let x21 : usize;
  let x26 : usize;
  let x18 : usize;
  let x27 : usize;
  let x29 : usize;
  let x30 : usize;
  let x19 : usize;
  let x31 : usize;
  let x16 : usize;
  let x32 : usize;
  let x34 : usize;
  let x35 : usize;
  let x17 : usize;
  let x36 : usize;
  let x14 : usize;
  let x37 : usize;
  let x39 : usize;
  let x40 : usize;
  let x15 : usize;
  let x41 : usize;
  let x12 : usize;
  let x42 : usize;
  let x44 : usize;
  let x45 : usize;
  let x13 : usize;
  let x47 : usize;
  let x56 : usize;
  let x59 : usize;
  let x61 : usize;
  let x57 : usize;
  let x62 : usize;
  let x54 : usize;
  let x63 : usize;
  let x65 : usize;
  let x66 : usize;
  let x55 : usize;
  let x67 : usize;
  let x52 : usize;
  let x68 : usize;
  let x70 : usize;
  let x71 : usize;
  let x53 : usize;
  let x72 : usize;
  let x50 : usize;
  let x73 : usize;
  let x75 : usize;
  let x76 : usize;
  let x51 : usize;
  let x77 : usize;
  let x48 : usize;
  let x78 : usize;
  let x80 : usize;
  let x81 : usize;
  let x49 : usize;
  let x58 : usize;
  let x83 : usize;
  let x22 : usize;
  let x84 : usize;
  let x24 : usize;
  let x85 : usize;
  let x60 : usize;
  let x86 : usize;
  let x88 : usize;
  let x89 : usize;
  let x28 : usize;
  let x90 : usize;
  let x64 : usize;
  let x91 : usize;
  let x93 : usize;
  let x94 : usize;
  let x33 : usize;
  let x95 : usize;
  let x69 : usize;
  let x96 : usize;
  let x98 : usize;
  let x99 : usize;
  let x38 : usize;
  let x100 : usize;
  let x74 : usize;
  let x101 : usize;
  let x103 : usize;
  let x104 : usize;
  let x43 : usize;
  let x105 : usize;
  let x79 : usize;
  let x106 : usize;
  let x108 : usize;
  let x109 : usize;
  let x46 : usize;
  let x110 : usize;
  let x82 : usize;
  let x111 : usize;
  let x113 : usize;
  let x6 : usize;
  let x123 : usize;
  let x126 : usize;
  let x128 : usize;
  let x124 : usize;
  let x129 : usize;
  let x121 : usize;
  let x130 : usize;
  let x132 : usize;
  let x133 : usize;
  let x122 : usize;
  let x134 : usize;
  let x119 : usize;
  let x135 : usize;
  let x137 : usize;
  let x138 : usize;
  let x120 : usize;
  let x139 : usize;
  let x117 : usize;
  let x140 : usize;
  let x142 : usize;
  let x143 : usize;
  let x118 : usize;
  let x144 : usize;
  let x115 : usize;
  let x145 : usize;
  let x147 : usize;
  let x148 : usize;
  let x116 : usize;
  let x125 : usize;
  let x87 : usize;
  let x151 : usize;
  let x92 : usize;
  let x152 : usize;
  let x127 : usize;
  let x153 : usize;
  let x155 : usize;
  let x156 : usize;
  let x97 : usize;
  let x157 : usize;
  let x131 : usize;
  let x158 : usize;
  let x160 : usize;
  let x161 : usize;
  let x102 : usize;
  let x162 : usize;
  let x136 : usize;
  let x163 : usize;
  let x165 : usize;
  let x166 : usize;
  let x107 : usize;
  let x167 : usize;
  let x141 : usize;
  let x168 : usize;
  let x170 : usize;
  let x171 : usize;
  let x112 : usize;
  let x172 : usize;
  let x146 : usize;
  let x173 : usize;
  let x175 : usize;
  let x176 : usize;
  let x114 : usize;
  let x177 : usize;
  let x149 : usize;
  let x178 : usize;
  let x180 : usize;
  let x182 : usize;
  let x191 : usize;
  let x194 : usize;
  let x196 : usize;
  let x192 : usize;
  let x197 : usize;
  let x189 : usize;
  let x198 : usize;
  let x200 : usize;
  let x201 : usize;
  let x190 : usize;
  let x202 : usize;
  let x187 : usize;
  let x203 : usize;
  let x205 : usize;
  let x206 : usize;
  let x188 : usize;
  let x207 : usize;
  let x185 : usize;
  let x208 : usize;
  let x210 : usize;
  let x211 : usize;
  let x186 : usize;
  let x212 : usize;
  let x183 : usize;
  let x213 : usize;
  let x215 : usize;
  let x216 : usize;
  let x184 : usize;
  let x193 : usize;
  let x218 : usize;
  let x150 : usize;
  let x219 : usize;
  let x154 : usize;
  let x220 : usize;
  let x195 : usize;
  let x221 : usize;
  let x223 : usize;
  let x224 : usize;
  let x159 : usize;
  let x225 : usize;
  let x199 : usize;
  let x226 : usize;
  let x228 : usize;
  let x229 : usize;
  let x164 : usize;
  let x230 : usize;
  let x204 : usize;
  let x231 : usize;
  let x233 : usize;
  let x234 : usize;
  let x169 : usize;
  let x235 : usize;
  let x209 : usize;
  let x236 : usize;
  let x238 : usize;
  let x239 : usize;
  let x174 : usize;
  let x240 : usize;
  let x214 : usize;
  let x241 : usize;
  let x243 : usize;
  let x244 : usize;
  let x179 : usize;
  let x245 : usize;
  let x217 : usize;
  let x246 : usize;
  let x248 : usize;
  let x249 : usize;
  let x181 : usize;
  let x7 : usize;
  let x259 : usize;
  let x262 : usize;
  let x264 : usize;
  let x260 : usize;
  let x265 : usize;
  let x257 : usize;
  let x266 : usize;
  let x268 : usize;
  let x269 : usize;
  let x258 : usize;
  let x270 : usize;
  let x255 : usize;
  let x271 : usize;
  let x273 : usize;
  let x274 : usize;
  let x256 : usize;
  let x275 : usize;
  let x253 : usize;
  let x276 : usize;
  let x278 : usize;
  let x279 : usize;
  let x254 : usize;
  let x280 : usize;
  let x251 : usize;
  let x281 : usize;
  let x283 : usize;
  let x284 : usize;
  let x252 : usize;
  let x261 : usize;
  let x222 : usize;
  let x287 : usize;
  let x227 : usize;
  let x288 : usize;
  let x263 : usize;
  let x289 : usize;
  let x291 : usize;
  let x292 : usize;
  let x232 : usize;
  let x293 : usize;
  let x267 : usize;
  let x294 : usize;
  let x296 : usize;
  let x297 : usize;
  let x237 : usize;
  let x298 : usize;
  let x272 : usize;
  let x299 : usize;
  let x301 : usize;
  let x302 : usize;
  let x242 : usize;
  let x303 : usize;
  let x277 : usize;
  let x304 : usize;
  let x306 : usize;
  let x307 : usize;
  let x247 : usize;
  let x308 : usize;
  let x282 : usize;
  let x309 : usize;
  let x311 : usize;
  let x312 : usize;
  let x250 : usize;
  let x313 : usize;
  let x285 : usize;
  let x314 : usize;
  let x316 : usize;
  let x318 : usize;
  let x327 : usize;
  let x330 : usize;
  let x332 : usize;
  let x328 : usize;
  let x333 : usize;
  let x325 : usize;
  let x334 : usize;
  let x336 : usize;
  let x337 : usize;
  let x326 : usize;
  let x338 : usize;
  let x323 : usize;
  let x339 : usize;
  let x341 : usize;
  let x342 : usize;
  let x324 : usize;
  let x343 : usize;
  let x321 : usize;
  let x344 : usize;
  let x346 : usize;
  let x347 : usize;
  let x322 : usize;
  let x348 : usize;
  let x319 : usize;
  let x349 : usize;
  let x351 : usize;
  let x352 : usize;
  let x320 : usize;
  let x329 : usize;
  let x354 : usize;
  let x286 : usize;
  let x355 : usize;
  let x290 : usize;
  let x356 : usize;
  let x331 : usize;
  let x357 : usize;
  let x359 : usize;
  let x360 : usize;
  let x295 : usize;
  let x361 : usize;
  let x335 : usize;
  let x362 : usize;
  let x364 : usize;
  let x365 : usize;
  let x300 : usize;
  let x366 : usize;
  let x340 : usize;
  let x367 : usize;
  let x369 : usize;
  let x370 : usize;
  let x305 : usize;
  let x371 : usize;
  let x345 : usize;
  let x372 : usize;
  let x374 : usize;
  let x375 : usize;
  let x310 : usize;
  let x376 : usize;
  let x350 : usize;
  let x377 : usize;
  let x379 : usize;
  let x380 : usize;
  let x315 : usize;
  let x381 : usize;
  let x353 : usize;
  let x382 : usize;
  let x384 : usize;
  let x385 : usize;
  let x317 : usize;
  let x8 : usize;
  let x395 : usize;
  let x398 : usize;
  let x400 : usize;
  let x396 : usize;
  let x401 : usize;
  let x393 : usize;
  let x402 : usize;
  let x404 : usize;
  let x405 : usize;
  let x394 : usize;
  let x406 : usize;
  let x391 : usize;
  let x407 : usize;
  let x409 : usize;
  let x410 : usize;
  let x392 : usize;
  let x411 : usize;
  let x389 : usize;
  let x412 : usize;
  let x414 : usize;
  let x415 : usize;
  let x390 : usize;
  let x416 : usize;
  let x387 : usize;
  let x417 : usize;
  let x419 : usize;
  let x420 : usize;
  let x388 : usize;
  let x397 : usize;
  let x358 : usize;
  let x423 : usize;
  let x363 : usize;
  let x424 : usize;
  let x399 : usize;
  let x425 : usize;
  let x427 : usize;
  let x428 : usize;
  let x368 : usize;
  let x429 : usize;
  let x403 : usize;
  let x430 : usize;
  let x432 : usize;
  let x433 : usize;
  let x373 : usize;
  let x434 : usize;
  let x408 : usize;
  let x435 : usize;
  let x437 : usize;
  let x438 : usize;
  let x378 : usize;
  let x439 : usize;
  let x413 : usize;
  let x440 : usize;
  let x442 : usize;
  let x443 : usize;
  let x383 : usize;
  let x444 : usize;
  let x418 : usize;
  let x445 : usize;
  let x447 : usize;
  let x448 : usize;
  let x386 : usize;
  let x449 : usize;
  let x421 : usize;
  let x450 : usize;
  let x452 : usize;
  let x454 : usize;
  let x463 : usize;
  let x466 : usize;
  let x468 : usize;
  let x464 : usize;
  let x469 : usize;
  let x461 : usize;
  let x470 : usize;
  let x472 : usize;
  let x473 : usize;
  let x462 : usize;
  let x474 : usize;
  let x459 : usize;
  let x475 : usize;
  let x477 : usize;
  let x478 : usize;
  let x460 : usize;
  let x479 : usize;
  let x457 : usize;
  let x480 : usize;
  let x482 : usize;
  let x483 : usize;
  let x458 : usize;
  let x484 : usize;
  let x455 : usize;
  let x485 : usize;
  let x487 : usize;
  let x488 : usize;
  let x456 : usize;
  let x465 : usize;
  let x490 : usize;
  let x422 : usize;
  let x491 : usize;
  let x426 : usize;
  let x492 : usize;
  let x467 : usize;
  let x493 : usize;
  let x495 : usize;
  let x496 : usize;
  let x431 : usize;
  let x497 : usize;
  let x471 : usize;
  let x498 : usize;
  let x500 : usize;
  let x501 : usize;
  let x436 : usize;
  let x502 : usize;
  let x476 : usize;
  let x503 : usize;
  let x505 : usize;
  let x506 : usize;
  let x441 : usize;
  let x507 : usize;
  let x481 : usize;
  let x508 : usize;
  let x510 : usize;
  let x511 : usize;
  let x446 : usize;
  let x512 : usize;
  let x486 : usize;
  let x513 : usize;
  let x515 : usize;
  let x516 : usize;
  let x451 : usize;
  let x517 : usize;
  let x489 : usize;
  let x518 : usize;
  let x520 : usize;
  let x521 : usize;
  let x453 : usize;
  let x9 : usize;
  let x531 : usize;
  let x534 : usize;
  let x536 : usize;
  let x532 : usize;
  let x537 : usize;
  let x529 : usize;
  let x538 : usize;
  let x540 : usize;
  let x541 : usize;
  let x530 : usize;
  let x542 : usize;
  let x527 : usize;
  let x543 : usize;
  let x545 : usize;
  let x546 : usize;
  let x528 : usize;
  let x547 : usize;
  let x525 : usize;
  let x548 : usize;
  let x550 : usize;
  let x551 : usize;
  let x526 : usize;
  let x552 : usize;
  let x523 : usize;
  let x553 : usize;
  let x555 : usize;
  let x556 : usize;
  let x524 : usize;
  let x533 : usize;
  let x494 : usize;
  let x559 : usize;
  let x499 : usize;
  let x560 : usize;
  let x535 : usize;
  let x561 : usize;
  let x563 : usize;
  let x564 : usize;
  let x504 : usize;
  let x565 : usize;
  let x539 : usize;
  let x566 : usize;
  let x568 : usize;
  let x569 : usize;
  let x509 : usize;
  let x570 : usize;
  let x544 : usize;
  let x571 : usize;
  let x573 : usize;
  let x574 : usize;
  let x514 : usize;
  let x575 : usize;
  let x549 : usize;
  let x576 : usize;
  let x578 : usize;
  let x579 : usize;
  let x519 : usize;
  let x580 : usize;
  let x554 : usize;
  let x581 : usize;
  let x583 : usize;
  let x584 : usize;
  let x522 : usize;
  let x585 : usize;
  let x557 : usize;
  let x586 : usize;
  let x588 : usize;
  let x590 : usize;
  let x599 : usize;
  let x602 : usize;
  let x604 : usize;
  let x600 : usize;
  let x605 : usize;
  let x597 : usize;
  let x606 : usize;
  let x608 : usize;
  let x609 : usize;
  let x598 : usize;
  let x610 : usize;
  let x595 : usize;
  let x611 : usize;
  let x613 : usize;
  let x614 : usize;
  let x596 : usize;
  let x615 : usize;
  let x593 : usize;
  let x616 : usize;
  let x618 : usize;
  let x619 : usize;
  let x594 : usize;
  let x620 : usize;
  let x591 : usize;
  let x621 : usize;
  let x623 : usize;
  let x624 : usize;
  let x592 : usize;
  let x601 : usize;
  let x626 : usize;
  let x558 : usize;
  let x627 : usize;
  let x562 : usize;
  let x628 : usize;
  let x603 : usize;
  let x629 : usize;
  let x631 : usize;
  let x632 : usize;
  let x567 : usize;
  let x633 : usize;
  let x607 : usize;
  let x634 : usize;
  let x636 : usize;
  let x637 : usize;
  let x572 : usize;
  let x638 : usize;
  let x612 : usize;
  let x639 : usize;
  let x641 : usize;
  let x642 : usize;
  let x577 : usize;
  let x643 : usize;
  let x617 : usize;
  let x644 : usize;
  let x646 : usize;
  let x647 : usize;
  let x582 : usize;
  let x648 : usize;
  let x622 : usize;
  let x649 : usize;
  let x651 : usize;
  let x652 : usize;
  let x587 : usize;
  let x653 : usize;
  let x625 : usize;
  let x654 : usize;
  let x656 : usize;
  let x657 : usize;
  let x589 : usize;
  let x5 : usize;
  let x4 : usize;
  let x3 : usize;
  let x2 : usize;
  let x1 : usize;
  let x10 : usize;
  let x0 : usize;
  let x667 : usize;
  let x670 : usize;
  let x672 : usize;
  let x668 : usize;
  let x673 : usize;
  let x665 : usize;
  let x674 : usize;
  let x676 : usize;
  let x677 : usize;
  let x666 : usize;
  let x678 : usize;
  let x663 : usize;
  let x679 : usize;
  let x681 : usize;
  let x682 : usize;
  let x664 : usize;
  let x683 : usize;
  let x661 : usize;
  let x684 : usize;
  let x686 : usize;
  let x687 : usize;
  let x662 : usize;
  let x688 : usize;
  let x659 : usize;
  let x689 : usize;
  let x691 : usize;
  let x692 : usize;
  let x660 : usize;
  let x669 : usize;
  let x630 : usize;
  let x695 : usize;
  let x635 : usize;
  let x696 : usize;
  let x671 : usize;
  let x697 : usize;
  let x699 : usize;
  let x700 : usize;
  let x640 : usize;
  let x701 : usize;
  let x675 : usize;
  let x702 : usize;
  let x704 : usize;
  let x705 : usize;
  let x645 : usize;
  let x706 : usize;
  let x680 : usize;
  let x707 : usize;
  let x709 : usize;
  let x710 : usize;
  let x650 : usize;
  let x711 : usize;
  let x685 : usize;
  let x712 : usize;
  let x714 : usize;
  let x715 : usize;
  let x655 : usize;
  let x716 : usize;
  let x690 : usize;
  let x717 : usize;
  let x719 : usize;
  let x720 : usize;
  let x658 : usize;
  let x721 : usize;
  let x693 : usize;
  let x722 : usize;
  let x724 : usize;
  let x726 : usize;
  let x735 : usize;
  let x738 : usize;
  let x740 : usize;
  let x736 : usize;
  let x741 : usize;
  let x733 : usize;
  let x742 : usize;
  let x744 : usize;
  let x745 : usize;
  let x734 : usize;
  let x746 : usize;
  let x731 : usize;
  let x747 : usize;
  let x749 : usize;
  let x750 : usize;
  let x732 : usize;
  let x751 : usize;
  let x729 : usize;
  let x752 : usize;
  let x754 : usize;
  let x755 : usize;
  let x730 : usize;
  let x756 : usize;
  let x727 : usize;
  let x757 : usize;
  let x759 : usize;
  let x760 : usize;
  let x728 : usize;
  let x737 : usize;
  let x762 : usize;
  let x694 : usize;
  let x763 : usize;
  let x698 : usize;
  let x764 : usize;
  let x739 : usize;
  let x765 : usize;
  let x767 : usize;
  let x768 : usize;
  let x703 : usize;
  let x769 : usize;
  let x743 : usize;
  let x770 : usize;
  let x772 : usize;
  let x773 : usize;
  let x708 : usize;
  let x774 : usize;
  let x748 : usize;
  let x775 : usize;
  let x777 : usize;
  let x778 : usize;
  let x713 : usize;
  let x779 : usize;
  let x753 : usize;
  let x780 : usize;
  let x782 : usize;
  let x783 : usize;
  let x718 : usize;
  let x784 : usize;
  let x758 : usize;
  let x785 : usize;
  let x787 : usize;
  let x788 : usize;
  let x723 : usize;
  let x789 : usize;
  let x761 : usize;
  let x790 : usize;
  let x792 : usize;
  let x793 : usize;
  let x725 : usize;
  let x796 : usize;
  let x797 : usize;
  let x798 : usize;
  let x800 : usize;
  let x801 : usize;
  let x802 : usize;
  let x803 : usize;
  let x805 : usize;
  let x806 : usize;
  let x807 : usize;
  let x808 : usize;
  let x810 : usize;
  let x811 : usize;
  let x812 : usize;
  let x813 : usize;
  let x815 : usize;
  let x816 : usize;
  let x817 : usize;
  let x818 : usize;
  let x820 : usize;
  let x821 : usize;
  let x794 : usize;
  let x822 : usize;
  let x766 : usize;
  let x824 : usize;
  let x795 : usize;
  let x825 : usize;
  let x771 : usize;
  let x827 : usize;
  let x799 : usize;
  let x828 : usize;
  let x776 : usize;
  let x830 : usize;
  let x804 : usize;
  let x831 : usize;
  let x781 : usize;
  let x833 : usize;
  let x809 : usize;
  let x834 : usize;
  let x786 : usize;
  let x836 : usize;
  let x814 : usize;
  let x837 : usize;
  let x823 : usize;
  let x791 : usize;
  let x839 : usize;
  let x819 : usize;
  let x840 : usize;
  let x826 : usize;
  let x829 : usize;
  let x832 : usize;
  let x835 : usize;
  let x838 : usize;
  let x841 : usize;
  let x842 : usize;
  let x843 : usize;
  let x844 : usize;
  let x845 : usize;
  let x846 : usize;
  let x847 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  /*skip*/
  x6 = x1;
  x7 = x2;
  x8 = x3;
  x9 = x4;
  x10 = x5;
  x11 = x0;
  x12 = (x11).wrapping_mul(x5);
  x13 = (((x11) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x14 = (x11).wrapping_mul(x4);
  x15 = (((x11) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x16 = (x11).wrapping_mul(x3);
  x17 = (((x11) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x18 = (x11).wrapping_mul(x2);
  x19 = (((x11) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x20 = (x11).wrapping_mul(x1);
  x21 = (((x11) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x22 = (x11).wrapping_mul(x0);
  x23 = (((x11) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x24 = (x23).wrapping_add(x20);
  x25 = ((x24)<(x23)) as usize;
  x26 = (x25).wrapping_add(x21);
  x27 = ((x26)<(x21)) as usize;
  x28 = (x26).wrapping_add(x18);
  x29 = ((x28)<(x18)) as usize;
  x30 = (x27).wrapping_add(x29);
  x31 = (x30).wrapping_add(x19);
  x32 = ((x31)<(x19)) as usize;
  x33 = (x31).wrapping_add(x16);
  x34 = ((x33)<(x16)) as usize;
  x35 = (x32).wrapping_add(x34);
  x36 = (x35).wrapping_add(x17);
  x37 = ((x36)<(x17)) as usize;
  x38 = (x36).wrapping_add(x14);
  x39 = ((x38)<(x14)) as usize;
  x40 = (x37).wrapping_add(x39);
  x41 = (x40).wrapping_add(x15);
  x42 = ((x41)<(x15)) as usize;
  x43 = (x41).wrapping_add(x12);
  x44 = ((x43)<(x12)) as usize;
  x45 = (x42).wrapping_add(x44);
  x46 = (x45).wrapping_add(x13);
  x47 = (x22).wrapping_mul(9940570264628428797usize);
  x48 = (x47).wrapping_mul(1873798617647539866usize);
  x49 = (((x47) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x50 = (x47).wrapping_mul(5412103778470702295usize);
  x51 = (((x47) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x52 = (x47).wrapping_mul(7239337960414712511usize);
  x53 = (((x47) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x54 = (x47).wrapping_mul(7435674573564081700usize);
  x55 = (((x47) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x56 = (x47).wrapping_mul(2210141511517208575usize);
  x57 = (((x47) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x58 = (x47).wrapping_mul(13402431016077863595usize);
  x59 = (((x47) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x60 = (x59).wrapping_add(x56);
  x61 = ((x60)<(x59)) as usize;
  x62 = (x61).wrapping_add(x57);
  x63 = ((x62)<(x57)) as usize;
  x64 = (x62).wrapping_add(x54);
  x65 = ((x64)<(x54)) as usize;
  x66 = (x63).wrapping_add(x65);
  x67 = (x66).wrapping_add(x55);
  x68 = ((x67)<(x55)) as usize;
  x69 = (x67).wrapping_add(x52);
  x70 = ((x69)<(x52)) as usize;
  x71 = (x68).wrapping_add(x70);
  x72 = (x71).wrapping_add(x53);
  x73 = ((x72)<(x53)) as usize;
  x74 = (x72).wrapping_add(x50);
  x75 = ((x74)<(x50)) as usize;
  x76 = (x73).wrapping_add(x75);
  x77 = (x76).wrapping_add(x51);
  x78 = ((x77)<(x51)) as usize;
  x79 = (x77).wrapping_add(x48);
  x80 = ((x79)<(x48)) as usize;
  x81 = (x78).wrapping_add(x80);
  x82 = (x81).wrapping_add(x49);
  x83 = (x22).wrapping_add(x58);
  x84 = ((x83)<(x22)) as usize;
  x85 = (x84).wrapping_add(x24);
  x86 = ((x85)<(x24)) as usize;
  x87 = (x85).wrapping_add(x60);
  x88 = ((x87)<(x60)) as usize;
  x89 = (x86).wrapping_add(x88);
  x90 = (x89).wrapping_add(x28);
  x91 = ((x90)<(x28)) as usize;
  x92 = (x90).wrapping_add(x64);
  x93 = ((x92)<(x64)) as usize;
  x94 = (x91).wrapping_add(x93);
  x95 = (x94).wrapping_add(x33);
  x96 = ((x95)<(x33)) as usize;
  x97 = (x95).wrapping_add(x69);
  x98 = ((x97)<(x69)) as usize;
  x99 = (x96).wrapping_add(x98);
  x100 = (x99).wrapping_add(x38);
  x101 = ((x100)<(x38)) as usize;
  x102 = (x100).wrapping_add(x74);
  x103 = ((x102)<(x74)) as usize;
  x104 = (x101).wrapping_add(x103);
  x105 = (x104).wrapping_add(x43);
  x106 = ((x105)<(x43)) as usize;
  x107 = (x105).wrapping_add(x79);
  x108 = ((x107)<(x79)) as usize;
  x109 = (x106).wrapping_add(x108);
  x110 = (x109).wrapping_add(x46);
  x111 = ((x110)<(x46)) as usize;
  x112 = (x110).wrapping_add(x82);
  x113 = ((x112)<(x82)) as usize;
  x114 = (x111).wrapping_add(x113);
  x115 = (x6).wrapping_mul(x5);
  x116 = (((x6) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x117 = (x6).wrapping_mul(x4);
  x118 = (((x6) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x119 = (x6).wrapping_mul(x3);
  x120 = (((x6) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x121 = (x6).wrapping_mul(x2);
  x122 = (((x6) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x123 = (x6).wrapping_mul(x1);
  x124 = (((x6) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x125 = (x6).wrapping_mul(x0);
  x126 = (((x6) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x127 = (x126).wrapping_add(x123);
  x128 = ((x127)<(x126)) as usize;
  x129 = (x128).wrapping_add(x124);
  x130 = ((x129)<(x124)) as usize;
  x131 = (x129).wrapping_add(x121);
  x132 = ((x131)<(x121)) as usize;
  x133 = (x130).wrapping_add(x132);
  x134 = (x133).wrapping_add(x122);
  x135 = ((x134)<(x122)) as usize;
  x136 = (x134).wrapping_add(x119);
  x137 = ((x136)<(x119)) as usize;
  x138 = (x135).wrapping_add(x137);
  x139 = (x138).wrapping_add(x120);
  x140 = ((x139)<(x120)) as usize;
  x141 = (x139).wrapping_add(x117);
  x142 = ((x141)<(x117)) as usize;
  x143 = (x140).wrapping_add(x142);
  x144 = (x143).wrapping_add(x118);
  x145 = ((x144)<(x118)) as usize;
  x146 = (x144).wrapping_add(x115);
  x147 = ((x146)<(x115)) as usize;
  x148 = (x145).wrapping_add(x147);
  x149 = (x148).wrapping_add(x116);
  x150 = (x87).wrapping_add(x125);
  x151 = ((x150)<(x87)) as usize;
  x152 = (x151).wrapping_add(x92);
  x153 = ((x152)<(x92)) as usize;
  x154 = (x152).wrapping_add(x127);
  x155 = ((x154)<(x127)) as usize;
  x156 = (x153).wrapping_add(x155);
  x157 = (x156).wrapping_add(x97);
  x158 = ((x157)<(x97)) as usize;
  x159 = (x157).wrapping_add(x131);
  x160 = ((x159)<(x131)) as usize;
  x161 = (x158).wrapping_add(x160);
  x162 = (x161).wrapping_add(x102);
  x163 = ((x162)<(x102)) as usize;
  x164 = (x162).wrapping_add(x136);
  x165 = ((x164)<(x136)) as usize;
  x166 = (x163).wrapping_add(x165);
  x167 = (x166).wrapping_add(x107);
  x168 = ((x167)<(x107)) as usize;
  x169 = (x167).wrapping_add(x141);
  x170 = ((x169)<(x141)) as usize;
  x171 = (x168).wrapping_add(x170);
  x172 = (x171).wrapping_add(x112);
  x173 = ((x172)<(x112)) as usize;
  x174 = (x172).wrapping_add(x146);
  x175 = ((x174)<(x146)) as usize;
  x176 = (x173).wrapping_add(x175);
  x177 = (x176).wrapping_add(x114);
  x178 = ((x177)<(x114)) as usize;
  x179 = (x177).wrapping_add(x149);
  x180 = ((x179)<(x149)) as usize;
  x181 = (x178).wrapping_add(x180);
  x182 = (x150).wrapping_mul(9940570264628428797usize);
  x183 = (x182).wrapping_mul(1873798617647539866usize);
  x184 = (((x182) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x185 = (x182).wrapping_mul(5412103778470702295usize);
  x186 = (((x182) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x187 = (x182).wrapping_mul(7239337960414712511usize);
  x188 = (((x182) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x189 = (x182).wrapping_mul(7435674573564081700usize);
  x190 = (((x182) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x191 = (x182).wrapping_mul(2210141511517208575usize);
  x192 = (((x182) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x193 = (x182).wrapping_mul(13402431016077863595usize);
  x194 = (((x182) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x195 = (x194).wrapping_add(x191);
  x196 = ((x195)<(x194)) as usize;
  x197 = (x196).wrapping_add(x192);
  x198 = ((x197)<(x192)) as usize;
  x199 = (x197).wrapping_add(x189);
  x200 = ((x199)<(x189)) as usize;
  x201 = (x198).wrapping_add(x200);
  x202 = (x201).wrapping_add(x190);
  x203 = ((x202)<(x190)) as usize;
  x204 = (x202).wrapping_add(x187);
  x205 = ((x204)<(x187)) as usize;
  x206 = (x203).wrapping_add(x205);
  x207 = (x206).wrapping_add(x188);
  x208 = ((x207)<(x188)) as usize;
  x209 = (x207).wrapping_add(x185);
  x210 = ((x209)<(x185)) as usize;
  x211 = (x208).wrapping_add(x210);
  x212 = (x211).wrapping_add(x186);
  x213 = ((x212)<(x186)) as usize;
  x214 = (x212).wrapping_add(x183);
  x215 = ((x214)<(x183)) as usize;
  x216 = (x213).wrapping_add(x215);
  x217 = (x216).wrapping_add(x184);
  x218 = (x150).wrapping_add(x193);
  x219 = ((x218)<(x150)) as usize;
  x220 = (x219).wrapping_add(x154);
  x221 = ((x220)<(x154)) as usize;
  x222 = (x220).wrapping_add(x195);
  x223 = ((x222)<(x195)) as usize;
  x224 = (x221).wrapping_add(x223);
  x225 = (x224).wrapping_add(x159);
  x226 = ((x225)<(x159)) as usize;
  x227 = (x225).wrapping_add(x199);
  x228 = ((x227)<(x199)) as usize;
  x229 = (x226).wrapping_add(x228);
  x230 = (x229).wrapping_add(x164);
  x231 = ((x230)<(x164)) as usize;
  x232 = (x230).wrapping_add(x204);
  x233 = ((x232)<(x204)) as usize;
  x234 = (x231).wrapping_add(x233);
  x235 = (x234).wrapping_add(x169);
  x236 = ((x235)<(x169)) as usize;
  x237 = (x235).wrapping_add(x209);
  x238 = ((x237)<(x209)) as usize;
  x239 = (x236).wrapping_add(x238);
  x240 = (x239).wrapping_add(x174);
  x241 = ((x240)<(x174)) as usize;
  x242 = (x240).wrapping_add(x214);
  x243 = ((x242)<(x214)) as usize;
  x244 = (x241).wrapping_add(x243);
  x245 = (x244).wrapping_add(x179);
  x246 = ((x245)<(x179)) as usize;
  x247 = (x245).wrapping_add(x217);
  x248 = ((x247)<(x217)) as usize;
  x249 = (x246).wrapping_add(x248);
  x250 = (x249).wrapping_add(x181);
  x251 = (x7).wrapping_mul(x5);
  x252 = (((x7) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x253 = (x7).wrapping_mul(x4);
  x254 = (((x7) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x255 = (x7).wrapping_mul(x3);
  x256 = (((x7) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x257 = (x7).wrapping_mul(x2);
  x258 = (((x7) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x259 = (x7).wrapping_mul(x1);
  x260 = (((x7) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x261 = (x7).wrapping_mul(x0);
  x262 = (((x7) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x263 = (x262).wrapping_add(x259);
  x264 = ((x263)<(x262)) as usize;
  x265 = (x264).wrapping_add(x260);
  x266 = ((x265)<(x260)) as usize;
  x267 = (x265).wrapping_add(x257);
  x268 = ((x267)<(x257)) as usize;
  x269 = (x266).wrapping_add(x268);
  x270 = (x269).wrapping_add(x258);
  x271 = ((x270)<(x258)) as usize;
  x272 = (x270).wrapping_add(x255);
  x273 = ((x272)<(x255)) as usize;
  x274 = (x271).wrapping_add(x273);
  x275 = (x274).wrapping_add(x256);
  x276 = ((x275)<(x256)) as usize;
  x277 = (x275).wrapping_add(x253);
  x278 = ((x277)<(x253)) as usize;
  x279 = (x276).wrapping_add(x278);
  x280 = (x279).wrapping_add(x254);
  x281 = ((x280)<(x254)) as usize;
  x282 = (x280).wrapping_add(x251);
  x283 = ((x282)<(x251)) as usize;
  x284 = (x281).wrapping_add(x283);
  x285 = (x284).wrapping_add(x252);
  x286 = (x222).wrapping_add(x261);
  x287 = ((x286)<(x222)) as usize;
  x288 = (x287).wrapping_add(x227);
  x289 = ((x288)<(x227)) as usize;
  x290 = (x288).wrapping_add(x263);
  x291 = ((x290)<(x263)) as usize;
  x292 = (x289).wrapping_add(x291);
  x293 = (x292).wrapping_add(x232);
  x294 = ((x293)<(x232)) as usize;
  x295 = (x293).wrapping_add(x267);
  x296 = ((x295)<(x267)) as usize;
  x297 = (x294).wrapping_add(x296);
  x298 = (x297).wrapping_add(x237);
  x299 = ((x298)<(x237)) as usize;
  x300 = (x298).wrapping_add(x272);
  x301 = ((x300)<(x272)) as usize;
  x302 = (x299).wrapping_add(x301);
  x303 = (x302).wrapping_add(x242);
  x304 = ((x303)<(x242)) as usize;
  x305 = (x303).wrapping_add(x277);
  x306 = ((x305)<(x277)) as usize;
  x307 = (x304).wrapping_add(x306);
  x308 = (x307).wrapping_add(x247);
  x309 = ((x308)<(x247)) as usize;
  x310 = (x308).wrapping_add(x282);
  x311 = ((x310)<(x282)) as usize;
  x312 = (x309).wrapping_add(x311);
  x313 = (x312).wrapping_add(x250);
  x314 = ((x313)<(x250)) as usize;
  x315 = (x313).wrapping_add(x285);
  x316 = ((x315)<(x285)) as usize;
  x317 = (x314).wrapping_add(x316);
  x318 = (x286).wrapping_mul(9940570264628428797usize);
  x319 = (x318).wrapping_mul(1873798617647539866usize);
  x320 = (((x318) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x321 = (x318).wrapping_mul(5412103778470702295usize);
  x322 = (((x318) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x323 = (x318).wrapping_mul(7239337960414712511usize);
  x324 = (((x318) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x325 = (x318).wrapping_mul(7435674573564081700usize);
  x326 = (((x318) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x327 = (x318).wrapping_mul(2210141511517208575usize);
  x328 = (((x318) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x329 = (x318).wrapping_mul(13402431016077863595usize);
  x330 = (((x318) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x331 = (x330).wrapping_add(x327);
  x332 = ((x331)<(x330)) as usize;
  x333 = (x332).wrapping_add(x328);
  x334 = ((x333)<(x328)) as usize;
  x335 = (x333).wrapping_add(x325);
  x336 = ((x335)<(x325)) as usize;
  x337 = (x334).wrapping_add(x336);
  x338 = (x337).wrapping_add(x326);
  x339 = ((x338)<(x326)) as usize;
  x340 = (x338).wrapping_add(x323);
  x341 = ((x340)<(x323)) as usize;
  x342 = (x339).wrapping_add(x341);
  x343 = (x342).wrapping_add(x324);
  x344 = ((x343)<(x324)) as usize;
  x345 = (x343).wrapping_add(x321);
  x346 = ((x345)<(x321)) as usize;
  x347 = (x344).wrapping_add(x346);
  x348 = (x347).wrapping_add(x322);
  x349 = ((x348)<(x322)) as usize;
  x350 = (x348).wrapping_add(x319);
  x351 = ((x350)<(x319)) as usize;
  x352 = (x349).wrapping_add(x351);
  x353 = (x352).wrapping_add(x320);
  x354 = (x286).wrapping_add(x329);
  x355 = ((x354)<(x286)) as usize;
  x356 = (x355).wrapping_add(x290);
  x357 = ((x356)<(x290)) as usize;
  x358 = (x356).wrapping_add(x331);
  x359 = ((x358)<(x331)) as usize;
  x360 = (x357).wrapping_add(x359);
  x361 = (x360).wrapping_add(x295);
  x362 = ((x361)<(x295)) as usize;
  x363 = (x361).wrapping_add(x335);
  x364 = ((x363)<(x335)) as usize;
  x365 = (x362).wrapping_add(x364);
  x366 = (x365).wrapping_add(x300);
  x367 = ((x366)<(x300)) as usize;
  x368 = (x366).wrapping_add(x340);
  x369 = ((x368)<(x340)) as usize;
  x370 = (x367).wrapping_add(x369);
  x371 = (x370).wrapping_add(x305);
  x372 = ((x371)<(x305)) as usize;
  x373 = (x371).wrapping_add(x345);
  x374 = ((x373)<(x345)) as usize;
  x375 = (x372).wrapping_add(x374);
  x376 = (x375).wrapping_add(x310);
  x377 = ((x376)<(x310)) as usize;
  x378 = (x376).wrapping_add(x350);
  x379 = ((x378)<(x350)) as usize;
  x380 = (x377).wrapping_add(x379);
  x381 = (x380).wrapping_add(x315);
  x382 = ((x381)<(x315)) as usize;
  x383 = (x381).wrapping_add(x353);
  x384 = ((x383)<(x353)) as usize;
  x385 = (x382).wrapping_add(x384);
  x386 = (x385).wrapping_add(x317);
  x387 = (x8).wrapping_mul(x5);
  x388 = (((x8) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x389 = (x8).wrapping_mul(x4);
  x390 = (((x8) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x391 = (x8).wrapping_mul(x3);
  x392 = (((x8) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x393 = (x8).wrapping_mul(x2);
  x394 = (((x8) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x395 = (x8).wrapping_mul(x1);
  x396 = (((x8) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x397 = (x8).wrapping_mul(x0);
  x398 = (((x8) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x399 = (x398).wrapping_add(x395);
  x400 = ((x399)<(x398)) as usize;
  x401 = (x400).wrapping_add(x396);
  x402 = ((x401)<(x396)) as usize;
  x403 = (x401).wrapping_add(x393);
  x404 = ((x403)<(x393)) as usize;
  x405 = (x402).wrapping_add(x404);
  x406 = (x405).wrapping_add(x394);
  x407 = ((x406)<(x394)) as usize;
  x408 = (x406).wrapping_add(x391);
  x409 = ((x408)<(x391)) as usize;
  x410 = (x407).wrapping_add(x409);
  x411 = (x410).wrapping_add(x392);
  x412 = ((x411)<(x392)) as usize;
  x413 = (x411).wrapping_add(x389);
  x414 = ((x413)<(x389)) as usize;
  x415 = (x412).wrapping_add(x414);
  x416 = (x415).wrapping_add(x390);
  x417 = ((x416)<(x390)) as usize;
  x418 = (x416).wrapping_add(x387);
  x419 = ((x418)<(x387)) as usize;
  x420 = (x417).wrapping_add(x419);
  x421 = (x420).wrapping_add(x388);
  x422 = (x358).wrapping_add(x397);
  x423 = ((x422)<(x358)) as usize;
  x424 = (x423).wrapping_add(x363);
  x425 = ((x424)<(x363)) as usize;
  x426 = (x424).wrapping_add(x399);
  x427 = ((x426)<(x399)) as usize;
  x428 = (x425).wrapping_add(x427);
  x429 = (x428).wrapping_add(x368);
  x430 = ((x429)<(x368)) as usize;
  x431 = (x429).wrapping_add(x403);
  x432 = ((x431)<(x403)) as usize;
  x433 = (x430).wrapping_add(x432);
  x434 = (x433).wrapping_add(x373);
  x435 = ((x434)<(x373)) as usize;
  x436 = (x434).wrapping_add(x408);
  x437 = ((x436)<(x408)) as usize;
  x438 = (x435).wrapping_add(x437);
  x439 = (x438).wrapping_add(x378);
  x440 = ((x439)<(x378)) as usize;
  x441 = (x439).wrapping_add(x413);
  x442 = ((x441)<(x413)) as usize;
  x443 = (x440).wrapping_add(x442);
  x444 = (x443).wrapping_add(x383);
  x445 = ((x444)<(x383)) as usize;
  x446 = (x444).wrapping_add(x418);
  x447 = ((x446)<(x418)) as usize;
  x448 = (x445).wrapping_add(x447);
  x449 = (x448).wrapping_add(x386);
  x450 = ((x449)<(x386)) as usize;
  x451 = (x449).wrapping_add(x421);
  x452 = ((x451)<(x421)) as usize;
  x453 = (x450).wrapping_add(x452);
  x454 = (x422).wrapping_mul(9940570264628428797usize);
  x455 = (x454).wrapping_mul(1873798617647539866usize);
  x456 = (((x454) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x457 = (x454).wrapping_mul(5412103778470702295usize);
  x458 = (((x454) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x459 = (x454).wrapping_mul(7239337960414712511usize);
  x460 = (((x454) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x461 = (x454).wrapping_mul(7435674573564081700usize);
  x462 = (((x454) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x463 = (x454).wrapping_mul(2210141511517208575usize);
  x464 = (((x454) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x465 = (x454).wrapping_mul(13402431016077863595usize);
  x466 = (((x454) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x467 = (x466).wrapping_add(x463);
  x468 = ((x467)<(x466)) as usize;
  x469 = (x468).wrapping_add(x464);
  x470 = ((x469)<(x464)) as usize;
  x471 = (x469).wrapping_add(x461);
  x472 = ((x471)<(x461)) as usize;
  x473 = (x470).wrapping_add(x472);
  x474 = (x473).wrapping_add(x462);
  x475 = ((x474)<(x462)) as usize;
  x476 = (x474).wrapping_add(x459);
  x477 = ((x476)<(x459)) as usize;
  x478 = (x475).wrapping_add(x477);
  x479 = (x478).wrapping_add(x460);
  x480 = ((x479)<(x460)) as usize;
  x481 = (x479).wrapping_add(x457);
  x482 = ((x481)<(x457)) as usize;
  x483 = (x480).wrapping_add(x482);
  x484 = (x483).wrapping_add(x458);
  x485 = ((x484)<(x458)) as usize;
  x486 = (x484).wrapping_add(x455);
  x487 = ((x486)<(x455)) as usize;
  x488 = (x485).wrapping_add(x487);
  x489 = (x488).wrapping_add(x456);
  x490 = (x422).wrapping_add(x465);
  x491 = ((x490)<(x422)) as usize;
  x492 = (x491).wrapping_add(x426);
  x493 = ((x492)<(x426)) as usize;
  x494 = (x492).wrapping_add(x467);
  x495 = ((x494)<(x467)) as usize;
  x496 = (x493).wrapping_add(x495);
  x497 = (x496).wrapping_add(x431);
  x498 = ((x497)<(x431)) as usize;
  x499 = (x497).wrapping_add(x471);
  x500 = ((x499)<(x471)) as usize;
  x501 = (x498).wrapping_add(x500);
  x502 = (x501).wrapping_add(x436);
  x503 = ((x502)<(x436)) as usize;
  x504 = (x502).wrapping_add(x476);
  x505 = ((x504)<(x476)) as usize;
  x506 = (x503).wrapping_add(x505);
  x507 = (x506).wrapping_add(x441);
  x508 = ((x507)<(x441)) as usize;
  x509 = (x507).wrapping_add(x481);
  x510 = ((x509)<(x481)) as usize;
  x511 = (x508).wrapping_add(x510);
  x512 = (x511).wrapping_add(x446);
  x513 = ((x512)<(x446)) as usize;
  x514 = (x512).wrapping_add(x486);
  x515 = ((x514)<(x486)) as usize;
  x516 = (x513).wrapping_add(x515);
  x517 = (x516).wrapping_add(x451);
  x518 = ((x517)<(x451)) as usize;
  x519 = (x517).wrapping_add(x489);
  x520 = ((x519)<(x489)) as usize;
  x521 = (x518).wrapping_add(x520);
  x522 = (x521).wrapping_add(x453);
  x523 = (x9).wrapping_mul(x5);
  x524 = (((x9) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x525 = (x9).wrapping_mul(x4);
  x526 = (((x9) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x527 = (x9).wrapping_mul(x3);
  x528 = (((x9) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x529 = (x9).wrapping_mul(x2);
  x530 = (((x9) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x531 = (x9).wrapping_mul(x1);
  x532 = (((x9) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x533 = (x9).wrapping_mul(x0);
  x534 = (((x9) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x535 = (x534).wrapping_add(x531);
  x536 = ((x535)<(x534)) as usize;
  x537 = (x536).wrapping_add(x532);
  x538 = ((x537)<(x532)) as usize;
  x539 = (x537).wrapping_add(x529);
  x540 = ((x539)<(x529)) as usize;
  x541 = (x538).wrapping_add(x540);
  x542 = (x541).wrapping_add(x530);
  x543 = ((x542)<(x530)) as usize;
  x544 = (x542).wrapping_add(x527);
  x545 = ((x544)<(x527)) as usize;
  x546 = (x543).wrapping_add(x545);
  x547 = (x546).wrapping_add(x528);
  x548 = ((x547)<(x528)) as usize;
  x549 = (x547).wrapping_add(x525);
  x550 = ((x549)<(x525)) as usize;
  x551 = (x548).wrapping_add(x550);
  x552 = (x551).wrapping_add(x526);
  x553 = ((x552)<(x526)) as usize;
  x554 = (x552).wrapping_add(x523);
  x555 = ((x554)<(x523)) as usize;
  x556 = (x553).wrapping_add(x555);
  x557 = (x556).wrapping_add(x524);
  x558 = (x494).wrapping_add(x533);
  x559 = ((x558)<(x494)) as usize;
  x560 = (x559).wrapping_add(x499);
  x561 = ((x560)<(x499)) as usize;
  x562 = (x560).wrapping_add(x535);
  x563 = ((x562)<(x535)) as usize;
  x564 = (x561).wrapping_add(x563);
  x565 = (x564).wrapping_add(x504);
  x566 = ((x565)<(x504)) as usize;
  x567 = (x565).wrapping_add(x539);
  x568 = ((x567)<(x539)) as usize;
  x569 = (x566).wrapping_add(x568);
  x570 = (x569).wrapping_add(x509);
  x571 = ((x570)<(x509)) as usize;
  x572 = (x570).wrapping_add(x544);
  x573 = ((x572)<(x544)) as usize;
  x574 = (x571).wrapping_add(x573);
  x575 = (x574).wrapping_add(x514);
  x576 = ((x575)<(x514)) as usize;
  x577 = (x575).wrapping_add(x549);
  x578 = ((x577)<(x549)) as usize;
  x579 = (x576).wrapping_add(x578);
  x580 = (x579).wrapping_add(x519);
  x581 = ((x580)<(x519)) as usize;
  x582 = (x580).wrapping_add(x554);
  x583 = ((x582)<(x554)) as usize;
  x584 = (x581).wrapping_add(x583);
  x585 = (x584).wrapping_add(x522);
  x586 = ((x585)<(x522)) as usize;
  x587 = (x585).wrapping_add(x557);
  x588 = ((x587)<(x557)) as usize;
  x589 = (x586).wrapping_add(x588);
  x590 = (x558).wrapping_mul(9940570264628428797usize);
  x591 = (x590).wrapping_mul(1873798617647539866usize);
  x592 = (((x590) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x593 = (x590).wrapping_mul(5412103778470702295usize);
  x594 = (((x590) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x595 = (x590).wrapping_mul(7239337960414712511usize);
  x596 = (((x590) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x597 = (x590).wrapping_mul(7435674573564081700usize);
  x598 = (((x590) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x599 = (x590).wrapping_mul(2210141511517208575usize);
  x600 = (((x590) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x601 = (x590).wrapping_mul(13402431016077863595usize);
  x602 = (((x590) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x603 = (x602).wrapping_add(x599);
  x604 = ((x603)<(x602)) as usize;
  x605 = (x604).wrapping_add(x600);
  x606 = ((x605)<(x600)) as usize;
  x607 = (x605).wrapping_add(x597);
  x608 = ((x607)<(x597)) as usize;
  x609 = (x606).wrapping_add(x608);
  x610 = (x609).wrapping_add(x598);
  x611 = ((x610)<(x598)) as usize;
  x612 = (x610).wrapping_add(x595);
  x613 = ((x612)<(x595)) as usize;
  x614 = (x611).wrapping_add(x613);
  x615 = (x614).wrapping_add(x596);
  x616 = ((x615)<(x596)) as usize;
  x617 = (x615).wrapping_add(x593);
  x618 = ((x617)<(x593)) as usize;
  x619 = (x616).wrapping_add(x618);
  x620 = (x619).wrapping_add(x594);
  x621 = ((x620)<(x594)) as usize;
  x622 = (x620).wrapping_add(x591);
  x623 = ((x622)<(x591)) as usize;
  x624 = (x621).wrapping_add(x623);
  x625 = (x624).wrapping_add(x592);
  x626 = (x558).wrapping_add(x601);
  x627 = ((x626)<(x558)) as usize;
  x628 = (x627).wrapping_add(x562);
  x629 = ((x628)<(x562)) as usize;
  x630 = (x628).wrapping_add(x603);
  x631 = ((x630)<(x603)) as usize;
  x632 = (x629).wrapping_add(x631);
  x633 = (x632).wrapping_add(x567);
  x634 = ((x633)<(x567)) as usize;
  x635 = (x633).wrapping_add(x607);
  x636 = ((x635)<(x607)) as usize;
  x637 = (x634).wrapping_add(x636);
  x638 = (x637).wrapping_add(x572);
  x639 = ((x638)<(x572)) as usize;
  x640 = (x638).wrapping_add(x612);
  x641 = ((x640)<(x612)) as usize;
  x642 = (x639).wrapping_add(x641);
  x643 = (x642).wrapping_add(x577);
  x644 = ((x643)<(x577)) as usize;
  x645 = (x643).wrapping_add(x617);
  x646 = ((x645)<(x617)) as usize;
  x647 = (x644).wrapping_add(x646);
  x648 = (x647).wrapping_add(x582);
  x649 = ((x648)<(x582)) as usize;
  x650 = (x648).wrapping_add(x622);
  x651 = ((x650)<(x622)) as usize;
  x652 = (x649).wrapping_add(x651);
  x653 = (x652).wrapping_add(x587);
  x654 = ((x653)<(x587)) as usize;
  x655 = (x653).wrapping_add(x625);
  x656 = ((x655)<(x625)) as usize;
  x657 = (x654).wrapping_add(x656);
  x658 = (x657).wrapping_add(x589);
  x659 = (x10).wrapping_mul(x5);
  x660 = (((x10) as u128).wrapping_mul((x5) as u128) >> 64) as usize;
  x661 = (x10).wrapping_mul(x4);
  x662 = (((x10) as u128).wrapping_mul((x4) as u128) >> 64) as usize;
  x663 = (x10).wrapping_mul(x3);
  x664 = (((x10) as u128).wrapping_mul((x3) as u128) >> 64) as usize;
  x665 = (x10).wrapping_mul(x2);
  x666 = (((x10) as u128).wrapping_mul((x2) as u128) >> 64) as usize;
  x667 = (x10).wrapping_mul(x1);
  x668 = (((x10) as u128).wrapping_mul((x1) as u128) >> 64) as usize;
  x669 = (x10).wrapping_mul(x0);
  x670 = (((x10) as u128).wrapping_mul((x0) as u128) >> 64) as usize;
  x671 = (x670).wrapping_add(x667);
  x672 = ((x671)<(x670)) as usize;
  x673 = (x672).wrapping_add(x668);
  x674 = ((x673)<(x668)) as usize;
  x675 = (x673).wrapping_add(x665);
  x676 = ((x675)<(x665)) as usize;
  x677 = (x674).wrapping_add(x676);
  x678 = (x677).wrapping_add(x666);
  x679 = ((x678)<(x666)) as usize;
  x680 = (x678).wrapping_add(x663);
  x681 = ((x680)<(x663)) as usize;
  x682 = (x679).wrapping_add(x681);
  x683 = (x682).wrapping_add(x664);
  x684 = ((x683)<(x664)) as usize;
  x685 = (x683).wrapping_add(x661);
  x686 = ((x685)<(x661)) as usize;
  x687 = (x684).wrapping_add(x686);
  x688 = (x687).wrapping_add(x662);
  x689 = ((x688)<(x662)) as usize;
  x690 = (x688).wrapping_add(x659);
  x691 = ((x690)<(x659)) as usize;
  x692 = (x689).wrapping_add(x691);
  x693 = (x692).wrapping_add(x660);
  x694 = (x630).wrapping_add(x669);
  x695 = ((x694)<(x630)) as usize;
  x696 = (x695).wrapping_add(x635);
  x697 = ((x696)<(x635)) as usize;
  x698 = (x696).wrapping_add(x671);
  x699 = ((x698)<(x671)) as usize;
  x700 = (x697).wrapping_add(x699);
  x701 = (x700).wrapping_add(x640);
  x702 = ((x701)<(x640)) as usize;
  x703 = (x701).wrapping_add(x675);
  x704 = ((x703)<(x675)) as usize;
  x705 = (x702).wrapping_add(x704);
  x706 = (x705).wrapping_add(x645);
  x707 = ((x706)<(x645)) as usize;
  x708 = (x706).wrapping_add(x680);
  x709 = ((x708)<(x680)) as usize;
  x710 = (x707).wrapping_add(x709);
  x711 = (x710).wrapping_add(x650);
  x712 = ((x711)<(x650)) as usize;
  x713 = (x711).wrapping_add(x685);
  x714 = ((x713)<(x685)) as usize;
  x715 = (x712).wrapping_add(x714);
  x716 = (x715).wrapping_add(x655);
  x717 = ((x716)<(x655)) as usize;
  x718 = (x716).wrapping_add(x690);
  x719 = ((x718)<(x690)) as usize;
  x720 = (x717).wrapping_add(x719);
  x721 = (x720).wrapping_add(x658);
  x722 = ((x721)<(x658)) as usize;
  x723 = (x721).wrapping_add(x693);
  x724 = ((x723)<(x693)) as usize;
  x725 = (x722).wrapping_add(x724);
  x726 = (x694).wrapping_mul(9940570264628428797usize);
  x727 = (x726).wrapping_mul(1873798617647539866usize);
  x728 = (((x726) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x729 = (x726).wrapping_mul(5412103778470702295usize);
  x730 = (((x726) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x731 = (x726).wrapping_mul(7239337960414712511usize);
  x732 = (((x726) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x733 = (x726).wrapping_mul(7435674573564081700usize);
  x734 = (((x726) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x735 = (x726).wrapping_mul(2210141511517208575usize);
  x736 = (((x726) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x737 = (x726).wrapping_mul(13402431016077863595usize);
  x738 = (((x726) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x739 = (x738).wrapping_add(x735);
  x740 = ((x739)<(x738)) as usize;
  x741 = (x740).wrapping_add(x736);
  x742 = ((x741)<(x736)) as usize;
  x743 = (x741).wrapping_add(x733);
  x744 = ((x743)<(x733)) as usize;
  x745 = (x742).wrapping_add(x744);
  x746 = (x745).wrapping_add(x734);
  x747 = ((x746)<(x734)) as usize;
  x748 = (x746).wrapping_add(x731);
  x749 = ((x748)<(x731)) as usize;
  x750 = (x747).wrapping_add(x749);
  x751 = (x750).wrapping_add(x732);
  x752 = ((x751)<(x732)) as usize;
  x753 = (x751).wrapping_add(x729);
  x754 = ((x753)<(x729)) as usize;
  x755 = (x752).wrapping_add(x754);
  x756 = (x755).wrapping_add(x730);
  x757 = ((x756)<(x730)) as usize;
  x758 = (x756).wrapping_add(x727);
  x759 = ((x758)<(x727)) as usize;
  x760 = (x757).wrapping_add(x759);
  x761 = (x760).wrapping_add(x728);
  x762 = (x694).wrapping_add(x737);
  x763 = ((x762)<(x694)) as usize;
  x764 = (x763).wrapping_add(x698);
  x765 = ((x764)<(x698)) as usize;
  x766 = (x764).wrapping_add(x739);
  x767 = ((x766)<(x739)) as usize;
  x768 = (x765).wrapping_add(x767);
  x769 = (x768).wrapping_add(x703);
  x770 = ((x769)<(x703)) as usize;
  x771 = (x769).wrapping_add(x743);
  x772 = ((x771)<(x743)) as usize;
  x773 = (x770).wrapping_add(x772);
  x774 = (x773).wrapping_add(x708);
  x775 = ((x774)<(x708)) as usize;
  x776 = (x774).wrapping_add(x748);
  x777 = ((x776)<(x748)) as usize;
  x778 = (x775).wrapping_add(x777);
  x779 = (x778).wrapping_add(x713);
  x780 = ((x779)<(x713)) as usize;
  x781 = (x779).wrapping_add(x753);
  x782 = ((x781)<(x753)) as usize;
  x783 = (x780).wrapping_add(x782);
  x784 = (x783).wrapping_add(x718);
  x785 = ((x784)<(x718)) as usize;
  x786 = (x784).wrapping_add(x758);
  x787 = ((x786)<(x758)) as usize;
  x788 = (x785).wrapping_add(x787);
  x789 = (x788).wrapping_add(x723);
  x790 = ((x789)<(x723)) as usize;
  x791 = (x789).wrapping_add(x761);
  x792 = ((x791)<(x761)) as usize;
  x793 = (x790).wrapping_add(x792);
  x794 = (x793).wrapping_add(x725);
  x795 = (x766).wrapping_sub(13402431016077863595usize);
  x796 = ((x766)<(x795)) as usize;
  x797 = (x771).wrapping_sub(2210141511517208575usize);
  x798 = ((x771)<(x797)) as usize;
  x799 = (x797).wrapping_sub(x796);
  x800 = ((x797)<(x799)) as usize;
  x801 = (x798).wrapping_add(x800);
  x802 = (x776).wrapping_sub(7435674573564081700usize);
  x803 = ((x776)<(x802)) as usize;
  x804 = (x802).wrapping_sub(x801);
  x805 = ((x802)<(x804)) as usize;
  x806 = (x803).wrapping_add(x805);
  x807 = (x781).wrapping_sub(7239337960414712511usize);
  x808 = ((x781)<(x807)) as usize;
  x809 = (x807).wrapping_sub(x806);
  x810 = ((x807)<(x809)) as usize;
  x811 = (x808).wrapping_add(x810);
  x812 = (x786).wrapping_sub(5412103778470702295usize);
  x813 = ((x786)<(x812)) as usize;
  x814 = (x812).wrapping_sub(x811);
  x815 = ((x812)<(x814)) as usize;
  x816 = (x813).wrapping_add(x815);
  x817 = (x791).wrapping_sub(1873798617647539866usize);
  x818 = ((x791)<(x817)) as usize;
  x819 = (x817).wrapping_sub(x816);
  x820 = ((x817)<(x819)) as usize;
  x821 = (x818).wrapping_add(x820);
  x822 = (x794).wrapping_sub(x821);
  x823 = ((x794)<(x822)) as usize;
  x824 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x825 = (x824)^(18446744073709551615usize);
  x826 = ((x766)&(x824))|((x795)&(x825));
  x827 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x828 = (x827)^(18446744073709551615usize);
  x829 = ((x771)&(x827))|((x799)&(x828));
  x830 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x831 = (x830)^(18446744073709551615usize);
  x832 = ((x776)&(x830))|((x804)&(x831));
  x833 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x834 = (x833)^(18446744073709551615usize);
  x835 = ((x781)&(x833))|((x809)&(x834));
  x836 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x837 = (x836)^(18446744073709551615usize);
  x838 = ((x786)&(x836))|((x814)&(x837));
  x839 = (usize::MAX).wrapping_add(((x823)==(0usize)) as usize);
  x840 = (x839)^(18446744073709551615usize);
  x841 = ((x791)&(x839))|((x819)&(x840));
  x842 = x826;
  x843 = x829;
  x844 = x832;
  x845 = x835;
  x846 = x838;
  x847 = x841;
  /*skip*/
  out0[0usize] = x842;
  out0[1usize] = x843;
  out0[2usize] = x844;
  out0[3usize] = x845;
  out0[4usize] = x846;
  out0[5usize] = x847;
  /*skip*/
  return;
}

pub fn bls12_opp(out0 : &mut [usize], in0 : &mut [usize]) -> () {
  let x0 : usize;
  let x1 : usize;
  let x2 : usize;
  let x7 : usize;
  let x3 : usize;
  let x9 : usize;
  let x4 : usize;
  let x11 : usize;
  let x5 : usize;
  let x13 : usize;
  let x15 : usize;
  let x6 : usize;
  let x19 : usize;
  let x8 : usize;
  let x21 : usize;
  let x10 : usize;
  let x23 : usize;
  let x12 : usize;
  let x25 : usize;
  let x14 : usize;
  let x16 : usize;
  let x17 : usize;
  let x18 : usize;
  let x20 : usize;
  let x22 : usize;
  let x24 : usize;
  let x26 : usize;
  let x27 : usize;
  let x28 : usize;
  let x29 : usize;
  let x30 : usize;
  let x31 : usize;
  let x32 : usize;
  let x33 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  /*skip*/
  x6 = (0usize).wrapping_sub(x0);
  x7 = (0usize).wrapping_sub(x1);
  x8 = (x7).wrapping_sub(((0usize)<(x6)) as usize);
  x9 = (0usize).wrapping_sub(x2);
  x10 = (x9).wrapping_sub((((0usize)<(x7)) as usize).wrapping_add(((x7)<(x8)) as usize));
  x11 = (0usize).wrapping_sub(x3);
  x12 = (x11).wrapping_sub((((0usize)<(x9)) as usize).wrapping_add(((x9)<(x10)) as usize));
  x13 = (0usize).wrapping_sub(x4);
  x14 = (x13).wrapping_sub((((0usize)<(x11)) as usize).wrapping_add(((x11)<(x12)) as usize));
  x15 = (0usize).wrapping_sub(x5);
  x16 = (x15).wrapping_sub((((0usize)<(x13)) as usize).wrapping_add(((x13)<(x14)) as usize));
  x17 = (usize::MAX).wrapping_add((((((0usize)<(x15)) as usize).wrapping_add(((x15)<(x16)) as usize))==(0usize)) as usize);
  x18 = (x6).wrapping_add((x17)&(13402431016077863595usize));
  x19 = (((x18)<(x6)) as usize).wrapping_add(x8);
  x20 = (x19).wrapping_add((x17)&(2210141511517208575usize));
  x21 = ((((x19)<(x8)) as usize).wrapping_add(((x20)<((x17)&(2210141511517208575usize))) as usize)).wrapping_add(x10);
  x22 = (x21).wrapping_add((x17)&(7435674573564081700usize));
  x23 = ((((x21)<(x10)) as usize).wrapping_add(((x22)<((x17)&(7435674573564081700usize))) as usize)).wrapping_add(x12);
  x24 = (x23).wrapping_add((x17)&(7239337960414712511usize));
  x25 = ((((x23)<(x12)) as usize).wrapping_add(((x24)<((x17)&(7239337960414712511usize))) as usize)).wrapping_add(x14);
  x26 = (x25).wrapping_add((x17)&(5412103778470702295usize));
  x27 = (((((x25)<(x14)) as usize).wrapping_add(((x26)<((x17)&(5412103778470702295usize))) as usize)).wrapping_add(x16)).wrapping_add((x17)&(1873798617647539866usize));
  x28 = x18;
  x29 = x20;
  x30 = x22;
  x31 = x24;
  x32 = x26;
  x33 = x27;
  /*skip*/
  out0[0usize] = x28;
  out0[1usize] = x29;
  out0[2usize] = x30;
  out0[3usize] = x31;
  out0[4usize] = x32;
  out0[5usize] = x33;
  /*skip*/
  return;
}

pub fn bls12_to_montgomery(out0 : &mut [usize], in0 : &mut [usize]) -> () {
  let x1 : usize;
  let x2 : usize;
  let x3 : usize;
  let x4 : usize;
  let x5 : usize;
  let x0 : usize;
  let x11 : usize;
  let x22 : usize;
  let x24 : usize;
  let x20 : usize;
  let x18 : usize;
  let x26 : usize;
  let x19 : usize;
  let x16 : usize;
  let x28 : usize;
  let x17 : usize;
  let x14 : usize;
  let x30 : usize;
  let x15 : usize;
  let x12 : usize;
  let x43 : usize;
  let x45 : usize;
  let x42 : usize;
  let x40 : usize;
  let x47 : usize;
  let x41 : usize;
  let x38 : usize;
  let x49 : usize;
  let x39 : usize;
  let x36 : usize;
  let x51 : usize;
  let x37 : usize;
  let x34 : usize;
  let x33 : usize;
  let x21 : usize;
  let x54 : usize;
  let x23 : usize;
  let x44 : usize;
  let x56 : usize;
  let x25 : usize;
  let x46 : usize;
  let x58 : usize;
  let x27 : usize;
  let x48 : usize;
  let x60 : usize;
  let x29 : usize;
  let x50 : usize;
  let x62 : usize;
  let x31 : usize;
  let x52 : usize;
  let x74 : usize;
  let x76 : usize;
  let x73 : usize;
  let x71 : usize;
  let x78 : usize;
  let x72 : usize;
  let x69 : usize;
  let x80 : usize;
  let x70 : usize;
  let x67 : usize;
  let x82 : usize;
  let x68 : usize;
  let x65 : usize;
  let x6 : usize;
  let x55 : usize;
  let x86 : usize;
  let x57 : usize;
  let x75 : usize;
  let x88 : usize;
  let x59 : usize;
  let x77 : usize;
  let x90 : usize;
  let x61 : usize;
  let x79 : usize;
  let x92 : usize;
  let x63 : usize;
  let x81 : usize;
  let x94 : usize;
  let x64 : usize;
  let x32 : usize;
  let x13 : usize;
  let x53 : usize;
  let x35 : usize;
  let x83 : usize;
  let x107 : usize;
  let x109 : usize;
  let x106 : usize;
  let x104 : usize;
  let x111 : usize;
  let x105 : usize;
  let x102 : usize;
  let x113 : usize;
  let x103 : usize;
  let x100 : usize;
  let x115 : usize;
  let x101 : usize;
  let x98 : usize;
  let x97 : usize;
  let x85 : usize;
  let x118 : usize;
  let x87 : usize;
  let x108 : usize;
  let x120 : usize;
  let x89 : usize;
  let x110 : usize;
  let x122 : usize;
  let x91 : usize;
  let x112 : usize;
  let x124 : usize;
  let x93 : usize;
  let x114 : usize;
  let x126 : usize;
  let x95 : usize;
  let x116 : usize;
  let x138 : usize;
  let x140 : usize;
  let x137 : usize;
  let x135 : usize;
  let x142 : usize;
  let x136 : usize;
  let x133 : usize;
  let x144 : usize;
  let x134 : usize;
  let x131 : usize;
  let x146 : usize;
  let x132 : usize;
  let x129 : usize;
  let x7 : usize;
  let x119 : usize;
  let x150 : usize;
  let x121 : usize;
  let x139 : usize;
  let x152 : usize;
  let x123 : usize;
  let x141 : usize;
  let x154 : usize;
  let x125 : usize;
  let x143 : usize;
  let x156 : usize;
  let x127 : usize;
  let x145 : usize;
  let x158 : usize;
  let x128 : usize;
  let x96 : usize;
  let x84 : usize;
  let x66 : usize;
  let x117 : usize;
  let x99 : usize;
  let x147 : usize;
  let x171 : usize;
  let x173 : usize;
  let x170 : usize;
  let x168 : usize;
  let x175 : usize;
  let x169 : usize;
  let x166 : usize;
  let x177 : usize;
  let x167 : usize;
  let x164 : usize;
  let x179 : usize;
  let x165 : usize;
  let x162 : usize;
  let x161 : usize;
  let x149 : usize;
  let x182 : usize;
  let x151 : usize;
  let x172 : usize;
  let x184 : usize;
  let x153 : usize;
  let x174 : usize;
  let x186 : usize;
  let x155 : usize;
  let x176 : usize;
  let x188 : usize;
  let x157 : usize;
  let x178 : usize;
  let x190 : usize;
  let x159 : usize;
  let x180 : usize;
  let x202 : usize;
  let x204 : usize;
  let x201 : usize;
  let x199 : usize;
  let x206 : usize;
  let x200 : usize;
  let x197 : usize;
  let x208 : usize;
  let x198 : usize;
  let x195 : usize;
  let x210 : usize;
  let x196 : usize;
  let x193 : usize;
  let x8 : usize;
  let x183 : usize;
  let x214 : usize;
  let x185 : usize;
  let x203 : usize;
  let x216 : usize;
  let x187 : usize;
  let x205 : usize;
  let x218 : usize;
  let x189 : usize;
  let x207 : usize;
  let x220 : usize;
  let x191 : usize;
  let x209 : usize;
  let x222 : usize;
  let x192 : usize;
  let x160 : usize;
  let x148 : usize;
  let x130 : usize;
  let x181 : usize;
  let x163 : usize;
  let x211 : usize;
  let x235 : usize;
  let x237 : usize;
  let x234 : usize;
  let x232 : usize;
  let x239 : usize;
  let x233 : usize;
  let x230 : usize;
  let x241 : usize;
  let x231 : usize;
  let x228 : usize;
  let x243 : usize;
  let x229 : usize;
  let x226 : usize;
  let x225 : usize;
  let x213 : usize;
  let x246 : usize;
  let x215 : usize;
  let x236 : usize;
  let x248 : usize;
  let x217 : usize;
  let x238 : usize;
  let x250 : usize;
  let x219 : usize;
  let x240 : usize;
  let x252 : usize;
  let x221 : usize;
  let x242 : usize;
  let x254 : usize;
  let x223 : usize;
  let x244 : usize;
  let x266 : usize;
  let x268 : usize;
  let x265 : usize;
  let x263 : usize;
  let x270 : usize;
  let x264 : usize;
  let x261 : usize;
  let x272 : usize;
  let x262 : usize;
  let x259 : usize;
  let x274 : usize;
  let x260 : usize;
  let x257 : usize;
  let x9 : usize;
  let x247 : usize;
  let x278 : usize;
  let x249 : usize;
  let x267 : usize;
  let x280 : usize;
  let x251 : usize;
  let x269 : usize;
  let x282 : usize;
  let x253 : usize;
  let x271 : usize;
  let x284 : usize;
  let x255 : usize;
  let x273 : usize;
  let x286 : usize;
  let x256 : usize;
  let x224 : usize;
  let x212 : usize;
  let x194 : usize;
  let x245 : usize;
  let x227 : usize;
  let x275 : usize;
  let x299 : usize;
  let x301 : usize;
  let x298 : usize;
  let x296 : usize;
  let x303 : usize;
  let x297 : usize;
  let x294 : usize;
  let x305 : usize;
  let x295 : usize;
  let x292 : usize;
  let x307 : usize;
  let x293 : usize;
  let x290 : usize;
  let x289 : usize;
  let x277 : usize;
  let x310 : usize;
  let x279 : usize;
  let x300 : usize;
  let x312 : usize;
  let x281 : usize;
  let x302 : usize;
  let x314 : usize;
  let x283 : usize;
  let x304 : usize;
  let x316 : usize;
  let x285 : usize;
  let x306 : usize;
  let x318 : usize;
  let x287 : usize;
  let x308 : usize;
  let x329 : usize;
  let x331 : usize;
  let x328 : usize;
  let x326 : usize;
  let x333 : usize;
  let x327 : usize;
  let x324 : usize;
  let x335 : usize;
  let x325 : usize;
  let x322 : usize;
  let x311 : usize;
  let x340 : usize;
  let x313 : usize;
  let x330 : usize;
  let x342 : usize;
  let x315 : usize;
  let x332 : usize;
  let x344 : usize;
  let x317 : usize;
  let x334 : usize;
  let x346 : usize;
  let x319 : usize;
  let x336 : usize;
  let x359 : usize;
  let x361 : usize;
  let x358 : usize;
  let x356 : usize;
  let x363 : usize;
  let x357 : usize;
  let x354 : usize;
  let x365 : usize;
  let x355 : usize;
  let x352 : usize;
  let x339 : usize;
  let x369 : usize;
  let x341 : usize;
  let x360 : usize;
  let x371 : usize;
  let x343 : usize;
  let x362 : usize;
  let x373 : usize;
  let x345 : usize;
  let x364 : usize;
  let x375 : usize;
  let x347 : usize;
  let x366 : usize;
  let x377 : usize;
  let x348 : usize;
  let x320 : usize;
  let x288 : usize;
  let x276 : usize;
  let x258 : usize;
  let x309 : usize;
  let x291 : usize;
  let x349 : usize;
  let x337 : usize;
  let x323 : usize;
  let x338 : usize;
  let x321 : usize;
  let x10 : usize;
  let x367 : usize;
  let x353 : usize;
  let x368 : usize;
  let x351 : usize;
  let x350 : usize;
  let x381 : usize;
  let x383 : usize;
  let x385 : usize;
  let x387 : usize;
  let x389 : usize;
  let x370 : usize;
  let x392 : usize;
  let x380 : usize;
  let x393 : usize;
  let x372 : usize;
  let x395 : usize;
  let x382 : usize;
  let x396 : usize;
  let x374 : usize;
  let x398 : usize;
  let x384 : usize;
  let x399 : usize;
  let x376 : usize;
  let x401 : usize;
  let x386 : usize;
  let x402 : usize;
  let x378 : usize;
  let x404 : usize;
  let x388 : usize;
  let x405 : usize;
  let x391 : usize;
  let x379 : usize;
  let x407 : usize;
  let x390 : usize;
  let x408 : usize;
  let x394 : usize;
  let x397 : usize;
  let x400 : usize;
  let x403 : usize;
  let x406 : usize;
  let x409 : usize;
  let x410 : usize;
  let x411 : usize;
  let x412 : usize;
  let x413 : usize;
  let x414 : usize;
  let x415 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  /*skip*/
  x6 = x1;
  x7 = x2;
  x8 = x3;
  x9 = x4;
  x10 = x5;
  x11 = x0;
  x12 = (x11).wrapping_mul(1267921511277847466usize);
  x13 = (((x11) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize;
  x14 = (x11).wrapping_mul(11130996698012816685usize);
  x15 = (((x11) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x16 = (x11).wrapping_mul(7488229067341005760usize);
  x17 = (((x11) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x18 = (x11).wrapping_mul(10224657059481499349usize);
  x19 = (((x11) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x20 = (((x11) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x21 = (x11).wrapping_mul(17644856173732828998usize);
  x22 = (((x11) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x23 = (x22).wrapping_add((x11).wrapping_mul(754043588434789617usize));
  x24 = (((x23)<(x22)) as usize).wrapping_add(x20);
  x25 = (x24).wrapping_add(x18);
  x26 = ((((x24)<(x20)) as usize).wrapping_add(((x25)<(x18)) as usize)).wrapping_add(x19);
  x27 = (x26).wrapping_add(x16);
  x28 = ((((x26)<(x19)) as usize).wrapping_add(((x27)<(x16)) as usize)).wrapping_add(x17);
  x29 = (x28).wrapping_add(x14);
  x30 = ((((x28)<(x17)) as usize).wrapping_add(((x29)<(x14)) as usize)).wrapping_add(x15);
  x31 = (x30).wrapping_add(x12);
  x32 = (((x30)<(x15)) as usize).wrapping_add(((x31)<(x12)) as usize);
  x33 = (x21).wrapping_mul(9940570264628428797usize);
  x34 = (x33).wrapping_mul(1873798617647539866usize);
  x35 = (((x33) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x36 = (x33).wrapping_mul(5412103778470702295usize);
  x37 = (((x33) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x38 = (x33).wrapping_mul(7239337960414712511usize);
  x39 = (((x33) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x40 = (x33).wrapping_mul(7435674573564081700usize);
  x41 = (((x33) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x42 = (((x33) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x43 = (((x33) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x44 = (x43).wrapping_add((x33).wrapping_mul(2210141511517208575usize));
  x45 = (((x44)<(x43)) as usize).wrapping_add(x42);
  x46 = (x45).wrapping_add(x40);
  x47 = ((((x45)<(x42)) as usize).wrapping_add(((x46)<(x40)) as usize)).wrapping_add(x41);
  x48 = (x47).wrapping_add(x38);
  x49 = ((((x47)<(x41)) as usize).wrapping_add(((x48)<(x38)) as usize)).wrapping_add(x39);
  x50 = (x49).wrapping_add(x36);
  x51 = ((((x49)<(x39)) as usize).wrapping_add(((x50)<(x36)) as usize)).wrapping_add(x37);
  x52 = (x51).wrapping_add(x34);
  x53 = (((x51)<(x37)) as usize).wrapping_add(((x52)<(x34)) as usize);
  x54 = ((((x21).wrapping_add((x33).wrapping_mul(13402431016077863595usize)))<(x21)) as usize).wrapping_add(x23);
  x55 = (x54).wrapping_add(x44);
  x56 = ((((x54)<(x23)) as usize).wrapping_add(((x55)<(x44)) as usize)).wrapping_add(x25);
  x57 = (x56).wrapping_add(x46);
  x58 = ((((x56)<(x25)) as usize).wrapping_add(((x57)<(x46)) as usize)).wrapping_add(x27);
  x59 = (x58).wrapping_add(x48);
  x60 = ((((x58)<(x27)) as usize).wrapping_add(((x59)<(x48)) as usize)).wrapping_add(x29);
  x61 = (x60).wrapping_add(x50);
  x62 = ((((x60)<(x29)) as usize).wrapping_add(((x61)<(x50)) as usize)).wrapping_add(x31);
  x63 = (x62).wrapping_add(x52);
  x64 = (((x62)<(x31)) as usize).wrapping_add(((x63)<(x52)) as usize);
  x65 = (x6).wrapping_mul(1267921511277847466usize);
  x66 = (((x6) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize;
  x67 = (x6).wrapping_mul(11130996698012816685usize);
  x68 = (((x6) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x69 = (x6).wrapping_mul(7488229067341005760usize);
  x70 = (((x6) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x71 = (x6).wrapping_mul(10224657059481499349usize);
  x72 = (((x6) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x73 = (((x6) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x74 = (((x6) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x75 = (x74).wrapping_add((x6).wrapping_mul(754043588434789617usize));
  x76 = (((x75)<(x74)) as usize).wrapping_add(x73);
  x77 = (x76).wrapping_add(x71);
  x78 = ((((x76)<(x73)) as usize).wrapping_add(((x77)<(x71)) as usize)).wrapping_add(x72);
  x79 = (x78).wrapping_add(x69);
  x80 = ((((x78)<(x72)) as usize).wrapping_add(((x79)<(x69)) as usize)).wrapping_add(x70);
  x81 = (x80).wrapping_add(x67);
  x82 = ((((x80)<(x70)) as usize).wrapping_add(((x81)<(x67)) as usize)).wrapping_add(x68);
  x83 = (x82).wrapping_add(x65);
  x84 = (((x82)<(x68)) as usize).wrapping_add(((x83)<(x65)) as usize);
  x85 = (x55).wrapping_add((x6).wrapping_mul(17644856173732828998usize));
  x86 = (((x85)<(x55)) as usize).wrapping_add(x57);
  x87 = (x86).wrapping_add(x75);
  x88 = ((((x86)<(x57)) as usize).wrapping_add(((x87)<(x75)) as usize)).wrapping_add(x59);
  x89 = (x88).wrapping_add(x77);
  x90 = ((((x88)<(x59)) as usize).wrapping_add(((x89)<(x77)) as usize)).wrapping_add(x61);
  x91 = (x90).wrapping_add(x79);
  x92 = ((((x90)<(x61)) as usize).wrapping_add(((x91)<(x79)) as usize)).wrapping_add(x63);
  x93 = (x92).wrapping_add(x81);
  x94 = ((((x92)<(x63)) as usize).wrapping_add(((x93)<(x81)) as usize)).wrapping_add(((x64).wrapping_add((x32).wrapping_add(x13))).wrapping_add((x53).wrapping_add(x35)));
  x95 = (x94).wrapping_add(x83);
  x96 = (((x94)<(((x64).wrapping_add((x32).wrapping_add(x13))).wrapping_add((x53).wrapping_add(x35)))) as usize).wrapping_add(((x95)<(x83)) as usize);
  x97 = (x85).wrapping_mul(9940570264628428797usize);
  x98 = (x97).wrapping_mul(1873798617647539866usize);
  x99 = (((x97) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x100 = (x97).wrapping_mul(5412103778470702295usize);
  x101 = (((x97) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x102 = (x97).wrapping_mul(7239337960414712511usize);
  x103 = (((x97) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x104 = (x97).wrapping_mul(7435674573564081700usize);
  x105 = (((x97) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x106 = (((x97) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x107 = (((x97) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x108 = (x107).wrapping_add((x97).wrapping_mul(2210141511517208575usize));
  x109 = (((x108)<(x107)) as usize).wrapping_add(x106);
  x110 = (x109).wrapping_add(x104);
  x111 = ((((x109)<(x106)) as usize).wrapping_add(((x110)<(x104)) as usize)).wrapping_add(x105);
  x112 = (x111).wrapping_add(x102);
  x113 = ((((x111)<(x105)) as usize).wrapping_add(((x112)<(x102)) as usize)).wrapping_add(x103);
  x114 = (x113).wrapping_add(x100);
  x115 = ((((x113)<(x103)) as usize).wrapping_add(((x114)<(x100)) as usize)).wrapping_add(x101);
  x116 = (x115).wrapping_add(x98);
  x117 = (((x115)<(x101)) as usize).wrapping_add(((x116)<(x98)) as usize);
  x118 = ((((x85).wrapping_add((x97).wrapping_mul(13402431016077863595usize)))<(x85)) as usize).wrapping_add(x87);
  x119 = (x118).wrapping_add(x108);
  x120 = ((((x118)<(x87)) as usize).wrapping_add(((x119)<(x108)) as usize)).wrapping_add(x89);
  x121 = (x120).wrapping_add(x110);
  x122 = ((((x120)<(x89)) as usize).wrapping_add(((x121)<(x110)) as usize)).wrapping_add(x91);
  x123 = (x122).wrapping_add(x112);
  x124 = ((((x122)<(x91)) as usize).wrapping_add(((x123)<(x112)) as usize)).wrapping_add(x93);
  x125 = (x124).wrapping_add(x114);
  x126 = ((((x124)<(x93)) as usize).wrapping_add(((x125)<(x114)) as usize)).wrapping_add(x95);
  x127 = (x126).wrapping_add(x116);
  x128 = (((x126)<(x95)) as usize).wrapping_add(((x127)<(x116)) as usize);
  x129 = (x7).wrapping_mul(1267921511277847466usize);
  x130 = (((x7) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize;
  x131 = (x7).wrapping_mul(11130996698012816685usize);
  x132 = (((x7) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x133 = (x7).wrapping_mul(7488229067341005760usize);
  x134 = (((x7) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x135 = (x7).wrapping_mul(10224657059481499349usize);
  x136 = (((x7) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x137 = (((x7) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x138 = (((x7) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x139 = (x138).wrapping_add((x7).wrapping_mul(754043588434789617usize));
  x140 = (((x139)<(x138)) as usize).wrapping_add(x137);
  x141 = (x140).wrapping_add(x135);
  x142 = ((((x140)<(x137)) as usize).wrapping_add(((x141)<(x135)) as usize)).wrapping_add(x136);
  x143 = (x142).wrapping_add(x133);
  x144 = ((((x142)<(x136)) as usize).wrapping_add(((x143)<(x133)) as usize)).wrapping_add(x134);
  x145 = (x144).wrapping_add(x131);
  x146 = ((((x144)<(x134)) as usize).wrapping_add(((x145)<(x131)) as usize)).wrapping_add(x132);
  x147 = (x146).wrapping_add(x129);
  x148 = (((x146)<(x132)) as usize).wrapping_add(((x147)<(x129)) as usize);
  x149 = (x119).wrapping_add((x7).wrapping_mul(17644856173732828998usize));
  x150 = (((x149)<(x119)) as usize).wrapping_add(x121);
  x151 = (x150).wrapping_add(x139);
  x152 = ((((x150)<(x121)) as usize).wrapping_add(((x151)<(x139)) as usize)).wrapping_add(x123);
  x153 = (x152).wrapping_add(x141);
  x154 = ((((x152)<(x123)) as usize).wrapping_add(((x153)<(x141)) as usize)).wrapping_add(x125);
  x155 = (x154).wrapping_add(x143);
  x156 = ((((x154)<(x125)) as usize).wrapping_add(((x155)<(x143)) as usize)).wrapping_add(x127);
  x157 = (x156).wrapping_add(x145);
  x158 = ((((x156)<(x127)) as usize).wrapping_add(((x157)<(x145)) as usize)).wrapping_add(((x128).wrapping_add((x96).wrapping_add((x84).wrapping_add(x66)))).wrapping_add((x117).wrapping_add(x99)));
  x159 = (x158).wrapping_add(x147);
  x160 = (((x158)<(((x128).wrapping_add((x96).wrapping_add((x84).wrapping_add(x66)))).wrapping_add((x117).wrapping_add(x99)))) as usize).wrapping_add(((x159)<(x147)) as usize);
  x161 = (x149).wrapping_mul(9940570264628428797usize);
  x162 = (x161).wrapping_mul(1873798617647539866usize);
  x163 = (((x161) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x164 = (x161).wrapping_mul(5412103778470702295usize);
  x165 = (((x161) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x166 = (x161).wrapping_mul(7239337960414712511usize);
  x167 = (((x161) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x168 = (x161).wrapping_mul(7435674573564081700usize);
  x169 = (((x161) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x170 = (((x161) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x171 = (((x161) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x172 = (x171).wrapping_add((x161).wrapping_mul(2210141511517208575usize));
  x173 = (((x172)<(x171)) as usize).wrapping_add(x170);
  x174 = (x173).wrapping_add(x168);
  x175 = ((((x173)<(x170)) as usize).wrapping_add(((x174)<(x168)) as usize)).wrapping_add(x169);
  x176 = (x175).wrapping_add(x166);
  x177 = ((((x175)<(x169)) as usize).wrapping_add(((x176)<(x166)) as usize)).wrapping_add(x167);
  x178 = (x177).wrapping_add(x164);
  x179 = ((((x177)<(x167)) as usize).wrapping_add(((x178)<(x164)) as usize)).wrapping_add(x165);
  x180 = (x179).wrapping_add(x162);
  x181 = (((x179)<(x165)) as usize).wrapping_add(((x180)<(x162)) as usize);
  x182 = ((((x149).wrapping_add((x161).wrapping_mul(13402431016077863595usize)))<(x149)) as usize).wrapping_add(x151);
  x183 = (x182).wrapping_add(x172);
  x184 = ((((x182)<(x151)) as usize).wrapping_add(((x183)<(x172)) as usize)).wrapping_add(x153);
  x185 = (x184).wrapping_add(x174);
  x186 = ((((x184)<(x153)) as usize).wrapping_add(((x185)<(x174)) as usize)).wrapping_add(x155);
  x187 = (x186).wrapping_add(x176);
  x188 = ((((x186)<(x155)) as usize).wrapping_add(((x187)<(x176)) as usize)).wrapping_add(x157);
  x189 = (x188).wrapping_add(x178);
  x190 = ((((x188)<(x157)) as usize).wrapping_add(((x189)<(x178)) as usize)).wrapping_add(x159);
  x191 = (x190).wrapping_add(x180);
  x192 = (((x190)<(x159)) as usize).wrapping_add(((x191)<(x180)) as usize);
  x193 = (x8).wrapping_mul(1267921511277847466usize);
  x194 = (((x8) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize;
  x195 = (x8).wrapping_mul(11130996698012816685usize);
  x196 = (((x8) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x197 = (x8).wrapping_mul(7488229067341005760usize);
  x198 = (((x8) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x199 = (x8).wrapping_mul(10224657059481499349usize);
  x200 = (((x8) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x201 = (((x8) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x202 = (((x8) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x203 = (x202).wrapping_add((x8).wrapping_mul(754043588434789617usize));
  x204 = (((x203)<(x202)) as usize).wrapping_add(x201);
  x205 = (x204).wrapping_add(x199);
  x206 = ((((x204)<(x201)) as usize).wrapping_add(((x205)<(x199)) as usize)).wrapping_add(x200);
  x207 = (x206).wrapping_add(x197);
  x208 = ((((x206)<(x200)) as usize).wrapping_add(((x207)<(x197)) as usize)).wrapping_add(x198);
  x209 = (x208).wrapping_add(x195);
  x210 = ((((x208)<(x198)) as usize).wrapping_add(((x209)<(x195)) as usize)).wrapping_add(x196);
  x211 = (x210).wrapping_add(x193);
  x212 = (((x210)<(x196)) as usize).wrapping_add(((x211)<(x193)) as usize);
  x213 = (x183).wrapping_add((x8).wrapping_mul(17644856173732828998usize));
  x214 = (((x213)<(x183)) as usize).wrapping_add(x185);
  x215 = (x214).wrapping_add(x203);
  x216 = ((((x214)<(x185)) as usize).wrapping_add(((x215)<(x203)) as usize)).wrapping_add(x187);
  x217 = (x216).wrapping_add(x205);
  x218 = ((((x216)<(x187)) as usize).wrapping_add(((x217)<(x205)) as usize)).wrapping_add(x189);
  x219 = (x218).wrapping_add(x207);
  x220 = ((((x218)<(x189)) as usize).wrapping_add(((x219)<(x207)) as usize)).wrapping_add(x191);
  x221 = (x220).wrapping_add(x209);
  x222 = ((((x220)<(x191)) as usize).wrapping_add(((x221)<(x209)) as usize)).wrapping_add(((x192).wrapping_add((x160).wrapping_add((x148).wrapping_add(x130)))).wrapping_add((x181).wrapping_add(x163)));
  x223 = (x222).wrapping_add(x211);
  x224 = (((x222)<(((x192).wrapping_add((x160).wrapping_add((x148).wrapping_add(x130)))).wrapping_add((x181).wrapping_add(x163)))) as usize).wrapping_add(((x223)<(x211)) as usize);
  x225 = (x213).wrapping_mul(9940570264628428797usize);
  x226 = (x225).wrapping_mul(1873798617647539866usize);
  x227 = (((x225) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x228 = (x225).wrapping_mul(5412103778470702295usize);
  x229 = (((x225) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x230 = (x225).wrapping_mul(7239337960414712511usize);
  x231 = (((x225) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x232 = (x225).wrapping_mul(7435674573564081700usize);
  x233 = (((x225) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x234 = (((x225) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x235 = (((x225) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x236 = (x235).wrapping_add((x225).wrapping_mul(2210141511517208575usize));
  x237 = (((x236)<(x235)) as usize).wrapping_add(x234);
  x238 = (x237).wrapping_add(x232);
  x239 = ((((x237)<(x234)) as usize).wrapping_add(((x238)<(x232)) as usize)).wrapping_add(x233);
  x240 = (x239).wrapping_add(x230);
  x241 = ((((x239)<(x233)) as usize).wrapping_add(((x240)<(x230)) as usize)).wrapping_add(x231);
  x242 = (x241).wrapping_add(x228);
  x243 = ((((x241)<(x231)) as usize).wrapping_add(((x242)<(x228)) as usize)).wrapping_add(x229);
  x244 = (x243).wrapping_add(x226);
  x245 = (((x243)<(x229)) as usize).wrapping_add(((x244)<(x226)) as usize);
  x246 = ((((x213).wrapping_add((x225).wrapping_mul(13402431016077863595usize)))<(x213)) as usize).wrapping_add(x215);
  x247 = (x246).wrapping_add(x236);
  x248 = ((((x246)<(x215)) as usize).wrapping_add(((x247)<(x236)) as usize)).wrapping_add(x217);
  x249 = (x248).wrapping_add(x238);
  x250 = ((((x248)<(x217)) as usize).wrapping_add(((x249)<(x238)) as usize)).wrapping_add(x219);
  x251 = (x250).wrapping_add(x240);
  x252 = ((((x250)<(x219)) as usize).wrapping_add(((x251)<(x240)) as usize)).wrapping_add(x221);
  x253 = (x252).wrapping_add(x242);
  x254 = ((((x252)<(x221)) as usize).wrapping_add(((x253)<(x242)) as usize)).wrapping_add(x223);
  x255 = (x254).wrapping_add(x244);
  x256 = (((x254)<(x223)) as usize).wrapping_add(((x255)<(x244)) as usize);
  x257 = (x9).wrapping_mul(1267921511277847466usize);
  x258 = (((x9) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize;
  x259 = (x9).wrapping_mul(11130996698012816685usize);
  x260 = (((x9) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x261 = (x9).wrapping_mul(7488229067341005760usize);
  x262 = (((x9) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x263 = (x9).wrapping_mul(10224657059481499349usize);
  x264 = (((x9) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x265 = (((x9) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x266 = (((x9) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x267 = (x266).wrapping_add((x9).wrapping_mul(754043588434789617usize));
  x268 = (((x267)<(x266)) as usize).wrapping_add(x265);
  x269 = (x268).wrapping_add(x263);
  x270 = ((((x268)<(x265)) as usize).wrapping_add(((x269)<(x263)) as usize)).wrapping_add(x264);
  x271 = (x270).wrapping_add(x261);
  x272 = ((((x270)<(x264)) as usize).wrapping_add(((x271)<(x261)) as usize)).wrapping_add(x262);
  x273 = (x272).wrapping_add(x259);
  x274 = ((((x272)<(x262)) as usize).wrapping_add(((x273)<(x259)) as usize)).wrapping_add(x260);
  x275 = (x274).wrapping_add(x257);
  x276 = (((x274)<(x260)) as usize).wrapping_add(((x275)<(x257)) as usize);
  x277 = (x247).wrapping_add((x9).wrapping_mul(17644856173732828998usize));
  x278 = (((x277)<(x247)) as usize).wrapping_add(x249);
  x279 = (x278).wrapping_add(x267);
  x280 = ((((x278)<(x249)) as usize).wrapping_add(((x279)<(x267)) as usize)).wrapping_add(x251);
  x281 = (x280).wrapping_add(x269);
  x282 = ((((x280)<(x251)) as usize).wrapping_add(((x281)<(x269)) as usize)).wrapping_add(x253);
  x283 = (x282).wrapping_add(x271);
  x284 = ((((x282)<(x253)) as usize).wrapping_add(((x283)<(x271)) as usize)).wrapping_add(x255);
  x285 = (x284).wrapping_add(x273);
  x286 = ((((x284)<(x255)) as usize).wrapping_add(((x285)<(x273)) as usize)).wrapping_add(((x256).wrapping_add((x224).wrapping_add((x212).wrapping_add(x194)))).wrapping_add((x245).wrapping_add(x227)));
  x287 = (x286).wrapping_add(x275);
  x288 = (((x286)<(((x256).wrapping_add((x224).wrapping_add((x212).wrapping_add(x194)))).wrapping_add((x245).wrapping_add(x227)))) as usize).wrapping_add(((x287)<(x275)) as usize);
  x289 = (x277).wrapping_mul(9940570264628428797usize);
  x290 = (x289).wrapping_mul(1873798617647539866usize);
  x291 = (((x289) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x292 = (x289).wrapping_mul(5412103778470702295usize);
  x293 = (((x289) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x294 = (x289).wrapping_mul(7239337960414712511usize);
  x295 = (((x289) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x296 = (x289).wrapping_mul(7435674573564081700usize);
  x297 = (((x289) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x298 = (((x289) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x299 = (((x289) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x300 = (x299).wrapping_add((x289).wrapping_mul(2210141511517208575usize));
  x301 = (((x300)<(x299)) as usize).wrapping_add(x298);
  x302 = (x301).wrapping_add(x296);
  x303 = ((((x301)<(x298)) as usize).wrapping_add(((x302)<(x296)) as usize)).wrapping_add(x297);
  x304 = (x303).wrapping_add(x294);
  x305 = ((((x303)<(x297)) as usize).wrapping_add(((x304)<(x294)) as usize)).wrapping_add(x295);
  x306 = (x305).wrapping_add(x292);
  x307 = ((((x305)<(x295)) as usize).wrapping_add(((x306)<(x292)) as usize)).wrapping_add(x293);
  x308 = (x307).wrapping_add(x290);
  x309 = (((x307)<(x293)) as usize).wrapping_add(((x308)<(x290)) as usize);
  x310 = ((((x277).wrapping_add((x289).wrapping_mul(13402431016077863595usize)))<(x277)) as usize).wrapping_add(x279);
  x311 = (x310).wrapping_add(x300);
  x312 = ((((x310)<(x279)) as usize).wrapping_add(((x311)<(x300)) as usize)).wrapping_add(x281);
  x313 = (x312).wrapping_add(x302);
  x314 = ((((x312)<(x281)) as usize).wrapping_add(((x313)<(x302)) as usize)).wrapping_add(x283);
  x315 = (x314).wrapping_add(x304);
  x316 = ((((x314)<(x283)) as usize).wrapping_add(((x315)<(x304)) as usize)).wrapping_add(x285);
  x317 = (x316).wrapping_add(x306);
  x318 = ((((x316)<(x285)) as usize).wrapping_add(((x317)<(x306)) as usize)).wrapping_add(x287);
  x319 = (x318).wrapping_add(x308);
  x320 = (((x318)<(x287)) as usize).wrapping_add(((x319)<(x308)) as usize);
  x321 = (x10).wrapping_mul(1267921511277847466usize);
  x322 = (x10).wrapping_mul(11130996698012816685usize);
  x323 = (((x10) as u128).wrapping_mul((11130996698012816685usize) as u128) >> 64) as usize;
  x324 = (x10).wrapping_mul(7488229067341005760usize);
  x325 = (((x10) as u128).wrapping_mul((7488229067341005760usize) as u128) >> 64) as usize;
  x326 = (x10).wrapping_mul(10224657059481499349usize);
  x327 = (((x10) as u128).wrapping_mul((10224657059481499349usize) as u128) >> 64) as usize;
  x328 = (((x10) as u128).wrapping_mul((754043588434789617usize) as u128) >> 64) as usize;
  x329 = (((x10) as u128).wrapping_mul((17644856173732828998usize) as u128) >> 64) as usize;
  x330 = (x329).wrapping_add((x10).wrapping_mul(754043588434789617usize));
  x331 = (((x330)<(x329)) as usize).wrapping_add(x328);
  x332 = (x331).wrapping_add(x326);
  x333 = ((((x331)<(x328)) as usize).wrapping_add(((x332)<(x326)) as usize)).wrapping_add(x327);
  x334 = (x333).wrapping_add(x324);
  x335 = ((((x333)<(x327)) as usize).wrapping_add(((x334)<(x324)) as usize)).wrapping_add(x325);
  x336 = (x335).wrapping_add(x322);
  x337 = ((((x335)<(x325)) as usize).wrapping_add(((x336)<(x322)) as usize)).wrapping_add(x323);
  x338 = (x337).wrapping_add(x321);
  x339 = (x311).wrapping_add((x10).wrapping_mul(17644856173732828998usize));
  x340 = (((x339)<(x311)) as usize).wrapping_add(x313);
  x341 = (x340).wrapping_add(x330);
  x342 = ((((x340)<(x313)) as usize).wrapping_add(((x341)<(x330)) as usize)).wrapping_add(x315);
  x343 = (x342).wrapping_add(x332);
  x344 = ((((x342)<(x315)) as usize).wrapping_add(((x343)<(x332)) as usize)).wrapping_add(x317);
  x345 = (x344).wrapping_add(x334);
  x346 = ((((x344)<(x317)) as usize).wrapping_add(((x345)<(x334)) as usize)).wrapping_add(x319);
  x347 = (x346).wrapping_add(x336);
  x348 = ((((x346)<(x319)) as usize).wrapping_add(((x347)<(x336)) as usize)).wrapping_add(((x320).wrapping_add((x288).wrapping_add((x276).wrapping_add(x258)))).wrapping_add((x309).wrapping_add(x291)));
  x349 = (x348).wrapping_add(x338);
  x350 = (x339).wrapping_mul(9940570264628428797usize);
  x351 = (x350).wrapping_mul(1873798617647539866usize);
  x352 = (x350).wrapping_mul(5412103778470702295usize);
  x353 = (((x350) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x354 = (x350).wrapping_mul(7239337960414712511usize);
  x355 = (((x350) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x356 = (x350).wrapping_mul(7435674573564081700usize);
  x357 = (((x350) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x358 = (((x350) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x359 = (((x350) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x360 = (x359).wrapping_add((x350).wrapping_mul(2210141511517208575usize));
  x361 = (((x360)<(x359)) as usize).wrapping_add(x358);
  x362 = (x361).wrapping_add(x356);
  x363 = ((((x361)<(x358)) as usize).wrapping_add(((x362)<(x356)) as usize)).wrapping_add(x357);
  x364 = (x363).wrapping_add(x354);
  x365 = ((((x363)<(x357)) as usize).wrapping_add(((x364)<(x354)) as usize)).wrapping_add(x355);
  x366 = (x365).wrapping_add(x352);
  x367 = ((((x365)<(x355)) as usize).wrapping_add(((x366)<(x352)) as usize)).wrapping_add(x353);
  x368 = (x367).wrapping_add(x351);
  x369 = ((((x339).wrapping_add((x350).wrapping_mul(13402431016077863595usize)))<(x339)) as usize).wrapping_add(x341);
  x370 = (x369).wrapping_add(x360);
  x371 = ((((x369)<(x341)) as usize).wrapping_add(((x370)<(x360)) as usize)).wrapping_add(x343);
  x372 = (x371).wrapping_add(x362);
  x373 = ((((x371)<(x343)) as usize).wrapping_add(((x372)<(x362)) as usize)).wrapping_add(x345);
  x374 = (x373).wrapping_add(x364);
  x375 = ((((x373)<(x345)) as usize).wrapping_add(((x374)<(x364)) as usize)).wrapping_add(x347);
  x376 = (x375).wrapping_add(x366);
  x377 = ((((x375)<(x347)) as usize).wrapping_add(((x376)<(x366)) as usize)).wrapping_add(x349);
  x378 = (x377).wrapping_add(x368);
  x379 = (((((x377)<(x349)) as usize).wrapping_add(((x378)<(x368)) as usize)).wrapping_add(((((x348)<(((x320).wrapping_add((x288).wrapping_add((x276).wrapping_add(x258)))).wrapping_add((x309).wrapping_add(x291)))) as usize).wrapping_add(((x349)<(x338)) as usize)).wrapping_add(((((x337)<(x323)) as usize).wrapping_add(((x338)<(x321)) as usize)).wrapping_add((((x10) as u128).wrapping_mul((1267921511277847466usize) as u128) >> 64) as usize)))).wrapping_add(((((x367)<(x353)) as usize).wrapping_add(((x368)<(x351)) as usize)).wrapping_add((((x350) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize));
  x380 = (x370).wrapping_sub(13402431016077863595usize);
  x381 = (x372).wrapping_sub(2210141511517208575usize);
  x382 = (x381).wrapping_sub(((x370)<(x380)) as usize);
  x383 = (x374).wrapping_sub(7435674573564081700usize);
  x384 = (x383).wrapping_sub((((x372)<(x381)) as usize).wrapping_add(((x381)<(x382)) as usize));
  x385 = (x376).wrapping_sub(7239337960414712511usize);
  x386 = (x385).wrapping_sub((((x374)<(x383)) as usize).wrapping_add(((x383)<(x384)) as usize));
  x387 = (x378).wrapping_sub(5412103778470702295usize);
  x388 = (x387).wrapping_sub((((x376)<(x385)) as usize).wrapping_add(((x385)<(x386)) as usize));
  x389 = (x379).wrapping_sub(1873798617647539866usize);
  x390 = (x389).wrapping_sub((((x378)<(x387)) as usize).wrapping_add(((x387)<(x388)) as usize));
  x391 = ((0usize)<((0usize).wrapping_sub((((x379)<(x389)) as usize).wrapping_add(((x389)<(x390)) as usize)))) as usize;
  x392 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x393 = (x392)^(18446744073709551615usize);
  x394 = ((x370)&(x392))|((x380)&(x393));
  x395 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x396 = (x395)^(18446744073709551615usize);
  x397 = ((x372)&(x395))|((x382)&(x396));
  x398 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x399 = (x398)^(18446744073709551615usize);
  x400 = ((x374)&(x398))|((x384)&(x399));
  x401 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x402 = (x401)^(18446744073709551615usize);
  x403 = ((x376)&(x401))|((x386)&(x402));
  x404 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x405 = (x404)^(18446744073709551615usize);
  x406 = ((x378)&(x404))|((x388)&(x405));
  x407 = (usize::MAX).wrapping_add(((x391)==(0usize)) as usize);
  x408 = (x407)^(18446744073709551615usize);
  x409 = ((x379)&(x407))|((x390)&(x408));
  x410 = x394;
  x411 = x397;
  x412 = x400;
  x413 = x403;
  x414 = x406;
  x415 = x409;
  /*skip*/
  out0[0usize] = x410;
  out0[1usize] = x411;
  out0[2usize] = x412;
  out0[3usize] = x413;
  out0[4usize] = x414;
  out0[5usize] = x415;
  /*skip*/
  return;
}

pub fn bls12_from_montgomery(out0 : &mut [usize], in0 : &mut [usize]) -> () {
  let x0 : usize;
  let x17 : usize;
  let x19 : usize;
  let x16 : usize;
  let x14 : usize;
  let x21 : usize;
  let x15 : usize;
  let x12 : usize;
  let x23 : usize;
  let x13 : usize;
  let x10 : usize;
  let x25 : usize;
  let x11 : usize;
  let x8 : usize;
  let x7 : usize;
  let x6 : usize;
  let x18 : usize;
  let x20 : usize;
  let x22 : usize;
  let x24 : usize;
  let x26 : usize;
  let x1 : usize;
  let x28 : usize;
  let x29 : usize;
  let x30 : usize;
  let x31 : usize;
  let x32 : usize;
  let x50 : usize;
  let x52 : usize;
  let x49 : usize;
  let x47 : usize;
  let x54 : usize;
  let x48 : usize;
  let x45 : usize;
  let x56 : usize;
  let x46 : usize;
  let x43 : usize;
  let x58 : usize;
  let x44 : usize;
  let x41 : usize;
  let x40 : usize;
  let x34 : usize;
  let x61 : usize;
  let x35 : usize;
  let x51 : usize;
  let x63 : usize;
  let x36 : usize;
  let x53 : usize;
  let x65 : usize;
  let x37 : usize;
  let x55 : usize;
  let x67 : usize;
  let x38 : usize;
  let x57 : usize;
  let x69 : usize;
  let x39 : usize;
  let x33 : usize;
  let x27 : usize;
  let x9 : usize;
  let x59 : usize;
  let x2 : usize;
  let x62 : usize;
  let x64 : usize;
  let x66 : usize;
  let x68 : usize;
  let x70 : usize;
  let x88 : usize;
  let x90 : usize;
  let x87 : usize;
  let x85 : usize;
  let x92 : usize;
  let x86 : usize;
  let x83 : usize;
  let x94 : usize;
  let x84 : usize;
  let x81 : usize;
  let x96 : usize;
  let x82 : usize;
  let x79 : usize;
  let x78 : usize;
  let x72 : usize;
  let x99 : usize;
  let x73 : usize;
  let x89 : usize;
  let x101 : usize;
  let x74 : usize;
  let x91 : usize;
  let x103 : usize;
  let x75 : usize;
  let x93 : usize;
  let x105 : usize;
  let x76 : usize;
  let x95 : usize;
  let x107 : usize;
  let x77 : usize;
  let x71 : usize;
  let x60 : usize;
  let x42 : usize;
  let x97 : usize;
  let x3 : usize;
  let x100 : usize;
  let x102 : usize;
  let x104 : usize;
  let x106 : usize;
  let x108 : usize;
  let x126 : usize;
  let x128 : usize;
  let x125 : usize;
  let x123 : usize;
  let x130 : usize;
  let x124 : usize;
  let x121 : usize;
  let x132 : usize;
  let x122 : usize;
  let x119 : usize;
  let x134 : usize;
  let x120 : usize;
  let x117 : usize;
  let x116 : usize;
  let x110 : usize;
  let x137 : usize;
  let x111 : usize;
  let x127 : usize;
  let x139 : usize;
  let x112 : usize;
  let x129 : usize;
  let x141 : usize;
  let x113 : usize;
  let x131 : usize;
  let x143 : usize;
  let x114 : usize;
  let x133 : usize;
  let x145 : usize;
  let x115 : usize;
  let x109 : usize;
  let x98 : usize;
  let x80 : usize;
  let x135 : usize;
  let x4 : usize;
  let x138 : usize;
  let x140 : usize;
  let x142 : usize;
  let x144 : usize;
  let x146 : usize;
  let x164 : usize;
  let x166 : usize;
  let x163 : usize;
  let x161 : usize;
  let x168 : usize;
  let x162 : usize;
  let x159 : usize;
  let x170 : usize;
  let x160 : usize;
  let x157 : usize;
  let x172 : usize;
  let x158 : usize;
  let x155 : usize;
  let x154 : usize;
  let x148 : usize;
  let x175 : usize;
  let x149 : usize;
  let x165 : usize;
  let x177 : usize;
  let x150 : usize;
  let x167 : usize;
  let x179 : usize;
  let x151 : usize;
  let x169 : usize;
  let x181 : usize;
  let x152 : usize;
  let x171 : usize;
  let x183 : usize;
  let x153 : usize;
  let x147 : usize;
  let x136 : usize;
  let x118 : usize;
  let x173 : usize;
  let x5 : usize;
  let x176 : usize;
  let x178 : usize;
  let x180 : usize;
  let x182 : usize;
  let x184 : usize;
  let x201 : usize;
  let x203 : usize;
  let x200 : usize;
  let x198 : usize;
  let x205 : usize;
  let x199 : usize;
  let x196 : usize;
  let x207 : usize;
  let x197 : usize;
  let x194 : usize;
  let x186 : usize;
  let x211 : usize;
  let x187 : usize;
  let x202 : usize;
  let x213 : usize;
  let x188 : usize;
  let x204 : usize;
  let x215 : usize;
  let x189 : usize;
  let x206 : usize;
  let x217 : usize;
  let x190 : usize;
  let x208 : usize;
  let x219 : usize;
  let x191 : usize;
  let x185 : usize;
  let x174 : usize;
  let x156 : usize;
  let x209 : usize;
  let x195 : usize;
  let x210 : usize;
  let x193 : usize;
  let x192 : usize;
  let x223 : usize;
  let x225 : usize;
  let x227 : usize;
  let x229 : usize;
  let x231 : usize;
  let x212 : usize;
  let x234 : usize;
  let x222 : usize;
  let x235 : usize;
  let x214 : usize;
  let x237 : usize;
  let x224 : usize;
  let x238 : usize;
  let x216 : usize;
  let x240 : usize;
  let x226 : usize;
  let x241 : usize;
  let x218 : usize;
  let x243 : usize;
  let x228 : usize;
  let x244 : usize;
  let x220 : usize;
  let x246 : usize;
  let x230 : usize;
  let x247 : usize;
  let x233 : usize;
  let x221 : usize;
  let x249 : usize;
  let x232 : usize;
  let x250 : usize;
  let x236 : usize;
  let x239 : usize;
  let x242 : usize;
  let x245 : usize;
  let x248 : usize;
  let x251 : usize;
  let x252 : usize;
  let x253 : usize;
  let x254 : usize;
  let x255 : usize;
  let x256 : usize;
  let x257 : usize;
  x0 = in0[0usize];
  x1 = in0[1usize];
  x2 = in0[2usize];
  x3 = in0[3usize];
  x4 = in0[4usize];
  x5 = in0[5usize];
  /*skip*/
  /*skip*/
  x6 = x0;
  x7 = (x6).wrapping_mul(9940570264628428797usize);
  x8 = (x7).wrapping_mul(1873798617647539866usize);
  x9 = (((x7) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x10 = (x7).wrapping_mul(5412103778470702295usize);
  x11 = (((x7) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x12 = (x7).wrapping_mul(7239337960414712511usize);
  x13 = (((x7) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x14 = (x7).wrapping_mul(7435674573564081700usize);
  x15 = (((x7) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x16 = (((x7) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x17 = (((x7) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x18 = (x17).wrapping_add((x7).wrapping_mul(2210141511517208575usize));
  x19 = (((x18)<(x17)) as usize).wrapping_add(x16);
  x20 = (x19).wrapping_add(x14);
  x21 = ((((x19)<(x16)) as usize).wrapping_add(((x20)<(x14)) as usize)).wrapping_add(x15);
  x22 = (x21).wrapping_add(x12);
  x23 = ((((x21)<(x15)) as usize).wrapping_add(((x22)<(x12)) as usize)).wrapping_add(x13);
  x24 = (x23).wrapping_add(x10);
  x25 = ((((x23)<(x13)) as usize).wrapping_add(((x24)<(x10)) as usize)).wrapping_add(x11);
  x26 = (x25).wrapping_add(x8);
  x27 = (((x25)<(x11)) as usize).wrapping_add(((x26)<(x8)) as usize);
  x28 = ((((x6).wrapping_add((x7).wrapping_mul(13402431016077863595usize)))<(x6)) as usize).wrapping_add(x18);
  x29 = (((x28)<(x18)) as usize).wrapping_add(x20);
  x30 = (((x29)<(x20)) as usize).wrapping_add(x22);
  x31 = (((x30)<(x22)) as usize).wrapping_add(x24);
  x32 = (((x31)<(x24)) as usize).wrapping_add(x26);
  x33 = ((x32)<(x26)) as usize;
  x34 = (x28).wrapping_add(x1);
  x35 = (((x34)<(x28)) as usize).wrapping_add(x29);
  x36 = (((x35)<(x29)) as usize).wrapping_add(x30);
  x37 = (((x36)<(x30)) as usize).wrapping_add(x31);
  x38 = (((x37)<(x31)) as usize).wrapping_add(x32);
  x39 = ((x38)<(x32)) as usize;
  x40 = (x34).wrapping_mul(9940570264628428797usize);
  x41 = (x40).wrapping_mul(1873798617647539866usize);
  x42 = (((x40) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x43 = (x40).wrapping_mul(5412103778470702295usize);
  x44 = (((x40) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x45 = (x40).wrapping_mul(7239337960414712511usize);
  x46 = (((x40) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x47 = (x40).wrapping_mul(7435674573564081700usize);
  x48 = (((x40) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x49 = (((x40) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x50 = (((x40) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x51 = (x50).wrapping_add((x40).wrapping_mul(2210141511517208575usize));
  x52 = (((x51)<(x50)) as usize).wrapping_add(x49);
  x53 = (x52).wrapping_add(x47);
  x54 = ((((x52)<(x49)) as usize).wrapping_add(((x53)<(x47)) as usize)).wrapping_add(x48);
  x55 = (x54).wrapping_add(x45);
  x56 = ((((x54)<(x48)) as usize).wrapping_add(((x55)<(x45)) as usize)).wrapping_add(x46);
  x57 = (x56).wrapping_add(x43);
  x58 = ((((x56)<(x46)) as usize).wrapping_add(((x57)<(x43)) as usize)).wrapping_add(x44);
  x59 = (x58).wrapping_add(x41);
  x60 = (((x58)<(x44)) as usize).wrapping_add(((x59)<(x41)) as usize);
  x61 = ((((x34).wrapping_add((x40).wrapping_mul(13402431016077863595usize)))<(x34)) as usize).wrapping_add(x35);
  x62 = (x61).wrapping_add(x51);
  x63 = ((((x61)<(x35)) as usize).wrapping_add(((x62)<(x51)) as usize)).wrapping_add(x36);
  x64 = (x63).wrapping_add(x53);
  x65 = ((((x63)<(x36)) as usize).wrapping_add(((x64)<(x53)) as usize)).wrapping_add(x37);
  x66 = (x65).wrapping_add(x55);
  x67 = ((((x65)<(x37)) as usize).wrapping_add(((x66)<(x55)) as usize)).wrapping_add(x38);
  x68 = (x67).wrapping_add(x57);
  x69 = ((((x67)<(x38)) as usize).wrapping_add(((x68)<(x57)) as usize)).wrapping_add((x39).wrapping_add((x33).wrapping_add((x27).wrapping_add(x9))));
  x70 = (x69).wrapping_add(x59);
  x71 = (((x69)<((x39).wrapping_add((x33).wrapping_add((x27).wrapping_add(x9))))) as usize).wrapping_add(((x70)<(x59)) as usize);
  x72 = (x62).wrapping_add(x2);
  x73 = (((x72)<(x62)) as usize).wrapping_add(x64);
  x74 = (((x73)<(x64)) as usize).wrapping_add(x66);
  x75 = (((x74)<(x66)) as usize).wrapping_add(x68);
  x76 = (((x75)<(x68)) as usize).wrapping_add(x70);
  x77 = ((x76)<(x70)) as usize;
  x78 = (x72).wrapping_mul(9940570264628428797usize);
  x79 = (x78).wrapping_mul(1873798617647539866usize);
  x80 = (((x78) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x81 = (x78).wrapping_mul(5412103778470702295usize);
  x82 = (((x78) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x83 = (x78).wrapping_mul(7239337960414712511usize);
  x84 = (((x78) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x85 = (x78).wrapping_mul(7435674573564081700usize);
  x86 = (((x78) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x87 = (((x78) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x88 = (((x78) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x89 = (x88).wrapping_add((x78).wrapping_mul(2210141511517208575usize));
  x90 = (((x89)<(x88)) as usize).wrapping_add(x87);
  x91 = (x90).wrapping_add(x85);
  x92 = ((((x90)<(x87)) as usize).wrapping_add(((x91)<(x85)) as usize)).wrapping_add(x86);
  x93 = (x92).wrapping_add(x83);
  x94 = ((((x92)<(x86)) as usize).wrapping_add(((x93)<(x83)) as usize)).wrapping_add(x84);
  x95 = (x94).wrapping_add(x81);
  x96 = ((((x94)<(x84)) as usize).wrapping_add(((x95)<(x81)) as usize)).wrapping_add(x82);
  x97 = (x96).wrapping_add(x79);
  x98 = (((x96)<(x82)) as usize).wrapping_add(((x97)<(x79)) as usize);
  x99 = ((((x72).wrapping_add((x78).wrapping_mul(13402431016077863595usize)))<(x72)) as usize).wrapping_add(x73);
  x100 = (x99).wrapping_add(x89);
  x101 = ((((x99)<(x73)) as usize).wrapping_add(((x100)<(x89)) as usize)).wrapping_add(x74);
  x102 = (x101).wrapping_add(x91);
  x103 = ((((x101)<(x74)) as usize).wrapping_add(((x102)<(x91)) as usize)).wrapping_add(x75);
  x104 = (x103).wrapping_add(x93);
  x105 = ((((x103)<(x75)) as usize).wrapping_add(((x104)<(x93)) as usize)).wrapping_add(x76);
  x106 = (x105).wrapping_add(x95);
  x107 = ((((x105)<(x76)) as usize).wrapping_add(((x106)<(x95)) as usize)).wrapping_add((x77).wrapping_add((x71).wrapping_add((x60).wrapping_add(x42))));
  x108 = (x107).wrapping_add(x97);
  x109 = (((x107)<((x77).wrapping_add((x71).wrapping_add((x60).wrapping_add(x42))))) as usize).wrapping_add(((x108)<(x97)) as usize);
  x110 = (x100).wrapping_add(x3);
  x111 = (((x110)<(x100)) as usize).wrapping_add(x102);
  x112 = (((x111)<(x102)) as usize).wrapping_add(x104);
  x113 = (((x112)<(x104)) as usize).wrapping_add(x106);
  x114 = (((x113)<(x106)) as usize).wrapping_add(x108);
  x115 = ((x114)<(x108)) as usize;
  x116 = (x110).wrapping_mul(9940570264628428797usize);
  x117 = (x116).wrapping_mul(1873798617647539866usize);
  x118 = (((x116) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x119 = (x116).wrapping_mul(5412103778470702295usize);
  x120 = (((x116) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x121 = (x116).wrapping_mul(7239337960414712511usize);
  x122 = (((x116) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x123 = (x116).wrapping_mul(7435674573564081700usize);
  x124 = (((x116) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x125 = (((x116) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x126 = (((x116) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x127 = (x126).wrapping_add((x116).wrapping_mul(2210141511517208575usize));
  x128 = (((x127)<(x126)) as usize).wrapping_add(x125);
  x129 = (x128).wrapping_add(x123);
  x130 = ((((x128)<(x125)) as usize).wrapping_add(((x129)<(x123)) as usize)).wrapping_add(x124);
  x131 = (x130).wrapping_add(x121);
  x132 = ((((x130)<(x124)) as usize).wrapping_add(((x131)<(x121)) as usize)).wrapping_add(x122);
  x133 = (x132).wrapping_add(x119);
  x134 = ((((x132)<(x122)) as usize).wrapping_add(((x133)<(x119)) as usize)).wrapping_add(x120);
  x135 = (x134).wrapping_add(x117);
  x136 = (((x134)<(x120)) as usize).wrapping_add(((x135)<(x117)) as usize);
  x137 = ((((x110).wrapping_add((x116).wrapping_mul(13402431016077863595usize)))<(x110)) as usize).wrapping_add(x111);
  x138 = (x137).wrapping_add(x127);
  x139 = ((((x137)<(x111)) as usize).wrapping_add(((x138)<(x127)) as usize)).wrapping_add(x112);
  x140 = (x139).wrapping_add(x129);
  x141 = ((((x139)<(x112)) as usize).wrapping_add(((x140)<(x129)) as usize)).wrapping_add(x113);
  x142 = (x141).wrapping_add(x131);
  x143 = ((((x141)<(x113)) as usize).wrapping_add(((x142)<(x131)) as usize)).wrapping_add(x114);
  x144 = (x143).wrapping_add(x133);
  x145 = ((((x143)<(x114)) as usize).wrapping_add(((x144)<(x133)) as usize)).wrapping_add((x115).wrapping_add((x109).wrapping_add((x98).wrapping_add(x80))));
  x146 = (x145).wrapping_add(x135);
  x147 = (((x145)<((x115).wrapping_add((x109).wrapping_add((x98).wrapping_add(x80))))) as usize).wrapping_add(((x146)<(x135)) as usize);
  x148 = (x138).wrapping_add(x4);
  x149 = (((x148)<(x138)) as usize).wrapping_add(x140);
  x150 = (((x149)<(x140)) as usize).wrapping_add(x142);
  x151 = (((x150)<(x142)) as usize).wrapping_add(x144);
  x152 = (((x151)<(x144)) as usize).wrapping_add(x146);
  x153 = ((x152)<(x146)) as usize;
  x154 = (x148).wrapping_mul(9940570264628428797usize);
  x155 = (x154).wrapping_mul(1873798617647539866usize);
  x156 = (((x154) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize;
  x157 = (x154).wrapping_mul(5412103778470702295usize);
  x158 = (((x154) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x159 = (x154).wrapping_mul(7239337960414712511usize);
  x160 = (((x154) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x161 = (x154).wrapping_mul(7435674573564081700usize);
  x162 = (((x154) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x163 = (((x154) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x164 = (((x154) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x165 = (x164).wrapping_add((x154).wrapping_mul(2210141511517208575usize));
  x166 = (((x165)<(x164)) as usize).wrapping_add(x163);
  x167 = (x166).wrapping_add(x161);
  x168 = ((((x166)<(x163)) as usize).wrapping_add(((x167)<(x161)) as usize)).wrapping_add(x162);
  x169 = (x168).wrapping_add(x159);
  x170 = ((((x168)<(x162)) as usize).wrapping_add(((x169)<(x159)) as usize)).wrapping_add(x160);
  x171 = (x170).wrapping_add(x157);
  x172 = ((((x170)<(x160)) as usize).wrapping_add(((x171)<(x157)) as usize)).wrapping_add(x158);
  x173 = (x172).wrapping_add(x155);
  x174 = (((x172)<(x158)) as usize).wrapping_add(((x173)<(x155)) as usize);
  x175 = ((((x148).wrapping_add((x154).wrapping_mul(13402431016077863595usize)))<(x148)) as usize).wrapping_add(x149);
  x176 = (x175).wrapping_add(x165);
  x177 = ((((x175)<(x149)) as usize).wrapping_add(((x176)<(x165)) as usize)).wrapping_add(x150);
  x178 = (x177).wrapping_add(x167);
  x179 = ((((x177)<(x150)) as usize).wrapping_add(((x178)<(x167)) as usize)).wrapping_add(x151);
  x180 = (x179).wrapping_add(x169);
  x181 = ((((x179)<(x151)) as usize).wrapping_add(((x180)<(x169)) as usize)).wrapping_add(x152);
  x182 = (x181).wrapping_add(x171);
  x183 = ((((x181)<(x152)) as usize).wrapping_add(((x182)<(x171)) as usize)).wrapping_add((x153).wrapping_add((x147).wrapping_add((x136).wrapping_add(x118))));
  x184 = (x183).wrapping_add(x173);
  x185 = (((x183)<((x153).wrapping_add((x147).wrapping_add((x136).wrapping_add(x118))))) as usize).wrapping_add(((x184)<(x173)) as usize);
  x186 = (x176).wrapping_add(x5);
  x187 = (((x186)<(x176)) as usize).wrapping_add(x178);
  x188 = (((x187)<(x178)) as usize).wrapping_add(x180);
  x189 = (((x188)<(x180)) as usize).wrapping_add(x182);
  x190 = (((x189)<(x182)) as usize).wrapping_add(x184);
  x191 = ((x190)<(x184)) as usize;
  x192 = (x186).wrapping_mul(9940570264628428797usize);
  x193 = (x192).wrapping_mul(1873798617647539866usize);
  x194 = (x192).wrapping_mul(5412103778470702295usize);
  x195 = (((x192) as u128).wrapping_mul((5412103778470702295usize) as u128) >> 64) as usize;
  x196 = (x192).wrapping_mul(7239337960414712511usize);
  x197 = (((x192) as u128).wrapping_mul((7239337960414712511usize) as u128) >> 64) as usize;
  x198 = (x192).wrapping_mul(7435674573564081700usize);
  x199 = (((x192) as u128).wrapping_mul((7435674573564081700usize) as u128) >> 64) as usize;
  x200 = (((x192) as u128).wrapping_mul((2210141511517208575usize) as u128) >> 64) as usize;
  x201 = (((x192) as u128).wrapping_mul((13402431016077863595usize) as u128) >> 64) as usize;
  x202 = (x201).wrapping_add((x192).wrapping_mul(2210141511517208575usize));
  x203 = (((x202)<(x201)) as usize).wrapping_add(x200);
  x204 = (x203).wrapping_add(x198);
  x205 = ((((x203)<(x200)) as usize).wrapping_add(((x204)<(x198)) as usize)).wrapping_add(x199);
  x206 = (x205).wrapping_add(x196);
  x207 = ((((x205)<(x199)) as usize).wrapping_add(((x206)<(x196)) as usize)).wrapping_add(x197);
  x208 = (x207).wrapping_add(x194);
  x209 = ((((x207)<(x197)) as usize).wrapping_add(((x208)<(x194)) as usize)).wrapping_add(x195);
  x210 = (x209).wrapping_add(x193);
  x211 = ((((x186).wrapping_add((x192).wrapping_mul(13402431016077863595usize)))<(x186)) as usize).wrapping_add(x187);
  x212 = (x211).wrapping_add(x202);
  x213 = ((((x211)<(x187)) as usize).wrapping_add(((x212)<(x202)) as usize)).wrapping_add(x188);
  x214 = (x213).wrapping_add(x204);
  x215 = ((((x213)<(x188)) as usize).wrapping_add(((x214)<(x204)) as usize)).wrapping_add(x189);
  x216 = (x215).wrapping_add(x206);
  x217 = ((((x215)<(x189)) as usize).wrapping_add(((x216)<(x206)) as usize)).wrapping_add(x190);
  x218 = (x217).wrapping_add(x208);
  x219 = ((((x217)<(x190)) as usize).wrapping_add(((x218)<(x208)) as usize)).wrapping_add((x191).wrapping_add((x185).wrapping_add((x174).wrapping_add(x156))));
  x220 = (x219).wrapping_add(x210);
  x221 = ((((x219)<((x191).wrapping_add((x185).wrapping_add((x174).wrapping_add(x156))))) as usize).wrapping_add(((x220)<(x210)) as usize)).wrapping_add(((((x209)<(x195)) as usize).wrapping_add(((x210)<(x193)) as usize)).wrapping_add((((x192) as u128).wrapping_mul((1873798617647539866usize) as u128) >> 64) as usize));
  x222 = (x212).wrapping_sub(13402431016077863595usize);
  x223 = (x214).wrapping_sub(2210141511517208575usize);
  x224 = (x223).wrapping_sub(((x212)<(x222)) as usize);
  x225 = (x216).wrapping_sub(7435674573564081700usize);
  x226 = (x225).wrapping_sub((((x214)<(x223)) as usize).wrapping_add(((x223)<(x224)) as usize));
  x227 = (x218).wrapping_sub(7239337960414712511usize);
  x228 = (x227).wrapping_sub((((x216)<(x225)) as usize).wrapping_add(((x225)<(x226)) as usize));
  x229 = (x220).wrapping_sub(5412103778470702295usize);
  x230 = (x229).wrapping_sub((((x218)<(x227)) as usize).wrapping_add(((x227)<(x228)) as usize));
  x231 = (x221).wrapping_sub(1873798617647539866usize);
  x232 = (x231).wrapping_sub((((x220)<(x229)) as usize).wrapping_add(((x229)<(x230)) as usize));
  x233 = ((0usize)<((0usize).wrapping_sub((((x221)<(x231)) as usize).wrapping_add(((x231)<(x232)) as usize)))) as usize;
  x234 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x235 = (x234)^(18446744073709551615usize);
  x236 = ((x212)&(x234))|((x222)&(x235));
  x237 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x238 = (x237)^(18446744073709551615usize);
  x239 = ((x214)&(x237))|((x224)&(x238));
  x240 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x241 = (x240)^(18446744073709551615usize);
  x242 = ((x216)&(x240))|((x226)&(x241));
  x243 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x244 = (x243)^(18446744073709551615usize);
  x245 = ((x218)&(x243))|((x228)&(x244));
  x246 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x247 = (x246)^(18446744073709551615usize);
  x248 = ((x220)&(x246))|((x230)&(x247));
  x249 = (usize::MAX).wrapping_add(((x233)==(0usize)) as usize);
  x250 = (x249)^(18446744073709551615usize);
  x251 = ((x221)&(x249))|((x232)&(x250));
  x252 = x236;
  x253 = x239;
  x254 = x242;
  x255 = x245;
  x256 = x248;
  x257 = x251;
  /*skip*/
  out0[0usize] = x252;
  out0[1usize] = x253;
  out0[2usize] = x254;
  out0[3usize] = x255;
  out0[4usize] = x256;
  out0[5usize] = x257;
  /*skip*/
  return;
}

pub fn Fp2_add(outr : &mut [usize], outi : &mut [usize], xr : &mut [usize], xi : &mut [usize], yr : &mut [usize], yi : &mut [usize]) -> () {
  bls12_add(outr, yr, xr);
  bls12_add(outi, yi, xi);
  return;
}

// pub fn Fp2_mul(outr : &mut [usize], outi : &mut [usize], xr : &mut [usize], xi : &mut [usize], yr : &mut [usize], yi : &mut [usize]) -> () {
//   let v0 : usize;
//   let mut v0_arr = [0usize; 6usize];
//   let v0 = &mut v0_arr;
//   let mut v1_arr = [0usize; 6usize];
//   let v1 = &mut v1_arr;
//   let mut v2_arr = [0usize; 6usize];
//   let v2 = &mut v2_arr;
//   bls12_mul(v0, xr, yr);
//   bls12_mul(v1, xi, yi);
//   bls12_sub(outr, v0, v1);
//   bls12_add(v2, xr, xi);
//   bls12_add(outi, yr, yi);
//   bls12_mul(outi, v2, outi);
//   bls12_sub(outi, outi, v0);
//   bls12_sub(outi, outi, v1);
//   return;
// }

// pub fn Fp2_mul(outr : &mut [usize], outi : &mut [usize], xr : &mut [usize], xi : &mut [usize], yr : &mut [usize], yi : &mut [usize]) -> () {
//   let v0 : usize;
//   let v0_arr = [0usize; 6usize];
//   let v0 = &mut v0_arr;
//   let v1_arr = [0usize; 6usize];
//   let v1 = &mut v1_arr;
//   let v2_arr = [0usize; 6usize];
//   let v2 = &mut v2_arr;
//   bls12_mul(v0, xr, yr);
//   bls12_mul(v1, xi, yi);
//   bls12_sub(outr, v0, v1);
//   bls12_add(v2, xr, xi);
//   bls12_add(outi, yr, yi);
//   bls12_mul(outi, v2, outi);
//   bls12_sub(outi, outi, v0);
//   bls12_sub(outi, outi, v1);
//   return;
// }

pub fn Fp2_sub(outr : &mut [usize], outi : &mut [usize], xr : &mut [usize], xi : &mut [usize], yr : &mut [usize], yi : &mut [usize]) -> () {
  bls12_sub(outr, xr, yr);
  bls12_sub(outi, xi, yi);
  return;
}

pub fn Fp2_square(outr : &mut [usize], outi : &mut [usize], inr : &mut [usize], ini : &mut [usize]) -> () {
  let v : usize;
  let mut v_arr = [0usize; 6usize];
  let v = &mut v_arr;
  bls12_add(v, inr, ini);
  bls12_sub(outr, inr, ini);
  bls12_mul(outr, outr, v);
  bls12_mul(outi, inr, ini);
  bls12_add(outi, outi, outi);
  return;
}


fn main() {
    let mut ar : felem_as_words = [9000203289623549276, 7000342082925068282, 1000538881605221074, 10009550692327388916, 10008355200866287827, 500084205531694093];
    let mut ai : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut outr : felem_as_words = [0, 0, 0, 0, 0, 0];
    let mut outi : felem_as_words = [0, 0, 0, 0, 0, 0];
    // Fp2_square(&mut outr, &mut outr, &mut outi, &mut ar, &mut ai);
    println!("outr is {:?}", outr);
    println!("outi is {:?}", outi);
}

#[test]
fn test_addition() {
    let mut a : felem_as_words = [11671922859260663127, 11050707557586042878, 284884720401305268, 17749945728364010941, 8613774818643959860, 145621051382923523];
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_add(&mut out, &mut a, &mut b);
    assert_eq!(out, [3019382075174660787, 18360049640511111161, 1424423602006526342, 14962752346981848241, 6175385945800696072, 728105256914617617]);
}

#[test]
fn test_sub() {
    let mut a : felem_as_words = [11671922859260663127, 11050707557586042878, 284884720401305268, 17749945728364010941, 8613774818643959860, 145621051382923523];
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_sub(&mut out, &mut b, &mut a);
    assert_eq!(out, [16569024504072437765, 14705378599048577019, 854654161203915805, 16356349037672929591, 7394580382222327966, 436863154148770570]);
}

#[test]
fn test_mul() {
    let mut a : felem_as_words = [11671922859260663127, 11050707557586042878, 284884720401305268, 17749945728364010941, 8613774818643959860, 145621051382923523];
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_mul(&mut out, &mut b, &mut a);
    assert_eq!(out, [8505329371266088957, 17002214543764226050, 6865905132761471162, 8632934651105793861, 6631298214892334189, 1582556514881692819]);
}

#[test]
fn test_square() {
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_square(&mut out, &mut b);
    assert_eq!(out, [12260768510540316659, 6038201419376623626, 5156596810353639551, 12813724723179037911, 10288881524157229871, 708830206584151678]);
}

#[test]
fn test_opp() {
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_opp(&mut out, &mut b);
    assert_eq!(out, [3608227726454314319, 13347543502301691909, 6296135691958860625, 10026531341796875211, 7850492651313966083, 1291314412115845772]);
}

#[test]
fn test_to_montgomery() {
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_to_montgomery(&mut out, &mut b);
    assert_eq!(out, [9961893758399620810, 2912195846164837915, 12868779101874716318, 17948961859856965117, 7008958234625322835, 1211754212739384799]);
}

#[test]
fn test_from_montgomery() {
    let mut b : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut out : felem_as_words = [0, 0, 0, 0, 0, 0];
    bls12_from_montgomery(&mut out, &mut b);
    assert_eq!(out, [13402431016077863593, 2210141511517208575, 7435674573564081700, 7239337960414712511, 5412103778470702295, 1873798617647539866]);
}

#[test]
fn test_Fp2_add() {
    let mut ar : felem_as_words = [9000203289623549276, 7000342082925068282, 1000538881605221074, 10009550692327388916, 10008355200866287827, 500084205531694093];
    let mut ai : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut br : felem_as_words = [11671922859260663127, 11050707557586042878, 284884720401305268, 17749945728364010941, 8613774818643959860, 145621051382923523];
    let mut bi : felem_as_words = [10001922859260663127, 10000707557586042878, 200084720401305268, 10009945728364010941, 8000774818643959860, 100021051382923523];
    let mut outr : felem_as_words = [0, 0, 0, 0, 0, 0];
    let mut outi : felem_as_words = [0, 0, 0, 0, 0, 0];
    Fp2_add(&mut outr, &mut outi, &mut ar, &mut ai, &mut br, &mut bi);
    assert_eq!(outr, [2225382075174660787, 18051049640511111161, 1285423602006526342, 9312752346981848241, 175385945800696072, 645705256914617617]);
    assert_eq!(outi, [1349382075174660787, 17310049640511111161, 1339623602006526342, 7222752346981848241, 5562385945800696072, 682505256914617617]);
}

// #[test]
// fn test_Fp2_square() {
//     let ar : felem_as_words = [9000203289623549276, 7000342082925068282, 1000538881605221074, 10009550692327388916, 10008355200866287827, 500084205531694093];
//     let ai : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
//     let outr : felem_as_words = [0, 0, 0, 0, 0, 0];
//     let outi : felem_as_words = [0, 0, 0, 0, 0, 0];
//     unsafe{ Fp2_square(outr.as_ptr(), outi.as_ptr(), ar.as_ptr(), ai.as_ptr()) };
//     assert_eq!(outr, [9084902848110124148, 8330211261126802722, 17851081340430083445, 6317344973833155910, 16990412299079728733, 1451528035995569023]);
//     assert_eq!(outi, [9250792947371081702, 13312402838753247253, 10869193620707279102, 11333961298938972590, 7684274900895356512, 1747260413168303358]);
// }

#[test]
fn test_Fp2_sub() {
    let mut ar : felem_as_words = [9000203289623549276, 7000342082925068282, 1000538881605221074, 10009550692327388916, 10008355200866287827, 500084205531694093];
    let mut ai : felem_as_words = [9794203289623549276, 7309342082925068282, 1139538881605221074, 15659550692327388916, 16008355200866287827, 582484205531694093];
    let mut br : felem_as_words = [11671922859260663127, 11050707557586042878, 284884720401305268, 17749945728364010941, 8613774818643959860, 145621051382923523];
    let mut bi : felem_as_words = [10001922859260663127, 10000707557586042878, 200084720401305268, 10009945728364010941, 8000774818643959860, 100021051382923523];
    let mut outr : felem_as_words = [0, 0, 0, 0, 0, 0];
    let mut outi : felem_as_words = [0, 0, 0, 0, 0, 0];
    Fp2_sub(&mut outr, &mut outi, &mut ar, &mut ai, &mut br, &mut bi);
    assert_eq!(outr, [15775024504072437765, 14396378599048577019, 715654161203915805, 10706349037672929591, 1394580382222327966, 354463154148770570]);
    assert_eq!(outi, [18239024504072437765, 15755378599048577019, 939454161203915805, 5649604963963377975, 8007580382222327967, 482463154148770570]);
}